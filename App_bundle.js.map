{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/vivus/dist/vivus.js","webpack:///./src/javascript/classes/Timer.js","webpack:///./src/javascript/classes/Interval.js","webpack:///./src/javascript/classes/Sound.js","webpack:///./src/javascript/classes/Storage.js","webpack:///./src/javascript/classes/Timeout.js","webpack:///./src/javascript/classes/Helper.js","webpack:///./src/javascript/classes/Modal.js","webpack:///./src/javascript/classes/Swipe.js","webpack:///./src/javascript/classes/Tetris/WordsHelper.js","webpack:///./src/javascript/classes/MapStack.js","webpack:///./src/javascript/classes/Matrix.js","webpack:///./src/javascript/classes/Tetris/ScoreHandler.js","webpack:///./src/javascript/classes/Tetris/Gameplay.js","webpack:///./src/javascript/classes/MaterialColor.js","webpack:///./src/javascript/classes/Explosion.js","webpack:///./src/javascript/classes/Tetris/Animate.js","webpack:///./src/javascript/classes/Tetris/Charblock.js","webpack:///./src/javascript/classes/Tetris/Settings.js","webpack:///./src/javascript/classes/Tetris/TetrisGame.js","webpack:///./src/javascript/loading/ArshLoader.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","checkInt","parseInt","checkInts","arrayish","length","coerceArray","arg","copy","buffer","slice","Array","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","result","encodeURI","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","this","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","__WEBPACK_AMD_DEFINE_RESULT__","Pathformer","element","constructor","document","getElementById","window","SVGElement","SVGGElement","test","nodeName","el","scan","setupEnv","requestAnimFrame","cancelAnimFrame","parsePositiveInt","Vivus","options","callback","isReady","setElement","setOptions","setCallback","init","TYPES","ATTR_WATCH","svg","pathData","pathDom","elements","querySelectorAll","fn","tagName","toLowerCase","parseAttr","attributes","pathMaker","parentNode","replaceChild","lineToPath","newElement","x1","y1","x2","y2","rectToPath","x","parseFloat","y","width","height","rx","ry","Math","min","max","polylineToPath","path","points","trim","split","indexOf","formattedPoints","polygonToPath","ellipseToPath","cx","cy","startX","startY","endX","endY","circleToPath","attr","pathTag","createElementNS","setAttribute","output","LINEAR","EASE","cos","PI","EASE_OUT","pow","EASE_IN","EASE_OUT_BOUNCE","base","rate","rateR","abs","onLoad","self","parentEl","file","domSandbox","createElement","innerHTML","responseText","svgTag","querySelector","appendChild","oReq","XMLHttpRequest","addEventListener","open","send","SVGSVGElement","HTMLObjectElement","e","contentDocument","getAttribute","insertBefore","removeChild","allowedTypes","allowedStarts","undefined","type","start","isIE","navigator","userAgent","duration","delay","dashGap","forceRender","reverseStack","selfDestroy","onReady","map","frameLength","currentFrame","delayUnit","speed","handle","ignoreInvisible","animTimingFunction","pathTimingFunction","Function","mapping","paths","pAttrs","pathObj","totalLength","lengthMeter","timePoint","scale","hasNonScale","isInvisible","startAt","isResizeSensitive","rect","getBoundingClientRect","box","getBBox","ceil","getTotalLength","isNaN","console","warn","style","strokeDasharray","strokeDashoffset","renderPath","reverse","recalc","mustRecalcScale","performLineRecalc","trace","draw","stop","reset","destroy","instanceCallback","progress","floor","newPath","cloneNode","starter","play","listener","isInViewport","removeEventListener","getStatus","setFrameProgress","finish","round","ignoreAttr","h","scrolled","scrollY","viewed","getViewportH","elBCR","elHeight","elTop","top","client","docElem","clientHeight","inner","innerHeight","pageYOffset","scrollTop","documentElement","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","defaultValue","apply","Timer","[object Object]","config","timerWorker","defaultConfig","cssClsss","onStart","onPause","onResume","blobTiming","workerOnMessage","beautifySecond","lang","hour","and","minute","second","currentTime","assign","timerDisplayEl","pause","Worker","URL","createObjectURL","onmessage","event","webWorkerNotSupported","postMessage","pause_flag","Interval","intervals","wait","setInterval","myReq","loop","Date","getTime","intervalData","update","usedFunction","newInterval","request","log","clearInterval","_removeIndex","all","keys","len","itemIndex","shift","clear","Sound","audio","Audio","instance","noPromise","catch","_makeInstanceName","canPlay","audioInstance","_getInstance","_setInstance","Storage_Storage","default_value","localStorage","getItem","JSON","parse","stringify","toString","setItem","encryptionKey","aes_js","Timeout","mozCancelRequestAnimationFrame","webkitCancelRequestAnimationFrame","oCancelRequestAnimationFrame","msCancelRequestAnimationFrame","Helper","selector","holder","timeMs","isMobile","vibrate","dom","orientation","string","replace","$0","$1","$2","charAt","possibleFunction","obj","url","Promise","resolve","reject","fetch","then","response","json","error","urls","fetchJson","err","random","hours","getHours","YX","closest","int","any","str","starCharacter","sublen","count","array","spec","table","Modal_Modal","isRtl","onDestroy","onShow","animate","dark","modalHolder","modal","modalAnimateClass","className","_createHeader","_createContent","footer","_createFooter","body","node","target","classList","contains","modalTitle","HeaderHtml","header","modalContent","content","buttons","forEach","optionBtn","button","isOk","notOk","onclick","isFunction","add","remove","Swipe","touchSurface","threshold","restraint","allowedTime","onTouchStart","whileTouch","onTouchEnd","handleSwipe","swipedir","onTouchStartCallback","whileTouchCallback","onTouchEndCallback","buildListeners","distX","distY","startTime","elapsedTime","swipeDirection","touchObject","changedTouches","pageX","pageY","_onTouchStart","preventDefault","_whileTouch","_onTouchEnd","RANDOM_GENERATOR","LEVEL1","weightedRand","star","bomb","skull","regular","bombSize","1","2","skullSize","LEVEL2","3","LEVEL3","4","WordsHelper_WordsHelper","level","levelGenerator","_giveMeAnStar","_giveMeABomb","_giveMeAnSkull","initValues","TetrisGame_TetrisGame","comingWordIndex","TetrisWords","word","useLowercase","choosedWords","showShuffledWords","choosedWord","choosedChar","enable_special_characters","matrix","filledCharacters","decider","getSpecial","finished","availableChars","choosedWordsUsedChars","sort","pop","wordsFinished","chooseWord","chooseChar","size","bombCharacter","src","dataset","typeSize","special","clickCount","skullCharacter","clicks","MapStack","Map","has","entries","mapStack","append","anItemOfAnyX","delete","IS_NOT_VALID","IS_EMPTY","IS_OK","CHARBLOCK_TYPE_BOMB","CHARBLOCK_TYPE_SKULL","CHARBLOCK_TYPE_STAR","SKULL_VALUE","STAR_VALUE","Matrix_Matrix","char","isValidPosition","isEmpty","fastDeleteCharacter","words","lastChar","checkType","successCallback","rowId","row","colId","column","_explode","_setSkull","_setStar","setCharacter","rights","_getRailingChars","lefts","tops","downs","sentenceLTR","chars","sentenceTTD","sentenceRTL","sentenceDTT","isAnyWordFounded","needStarSearchHorizontaly","needStarSearchVertically","ltr","rtl","includes","ttd","dtt","pos","checkPlace","startFrom","skippableIndexOf","_deleteCharacters","direction","railingChars","isNotEmpty","wordId","occurancePositionFrom","occurancePositionLenght","successCallBack","hasCallback","callbackObject","wordCharacterPositions","fallingCharacters","upIndex","oldY","newY","rowID","colID","power","explodedChars","xPos","firstNonEmptyCharacterOnTopYIndex","yPos","safeDeleteCharacter","ScoreHandler_ScoreHandler","gamingInfo","showScore","gamingTime","submitScoreContent","enterName","submitScore","useAnimationFlag","colorMode","_","focus","saveScore","_saveScore","userName","score","time","restartGame","Gameplay_Gameplay","restart","show","submitted","_getSubmitted","item","noSubmittedScore","last10Record","modalOkButton","scoreData","setObject","submitScoreResult","saveOperation","saveOperationDone","scores","getObject","b","do_encryption","getEncrypted","getInt","wordsFounded","wordsLengthTotal","wordDirectionCounter","_getScore","extraPointForLevel","scoreCalculator","setEncrypted","_updateStats","_updateScore","playBoard","upComingCharEl","validateColumnsNumber","showGrids","_makeGameBoard","workingWordCount","timer","interval","Charblock_Charblock","getInterval","factory","playByKey","playEventsSound","_makeMovingEvents","_buttonManager","resume","location","reload","setDefaultValues","swipe","onkeydown","build","pauseByKey","ArshLoader_ArshLoader","wordsAverageLength","sumScore","foundWords","wordLengthAverage","character","spentTimeModal","modalHeader","modalType","modalButtons","scoreModal","submit","gameOverModalTitle","gameOverModalContent","noExtraWordModalTitle","noExtraWordModalContent","modalRefreshButton","rowsCount","rows","playBoardTable","matrixRowArray","minHeight","mobileRows","matrixColumn","validatedColumnsCount","keyCode","paused","activeChar","move","dir","CONTROL_CODES","LEFT","RIGHT","DOWN","showClassed","hideClasses","gameBtnControl","display","MaterialColor","colors","red","400","500","600","700","800","900","a200","a400","a700","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","colorList","pickRandomProperty","prop","Explosion_Explosion","ctx","getContext","ratio","devicePixelRatio","particles","position","left","pointerEvents","_particle","renderLoop","_render","parentElement","toFixed","radius","color","rotation","friction","opacity","yVel","gravity","clearRect","_moveOnAngle","beginPath","globalAlpha","fillStyle","arc","fill","sin","_getOneFrameDistance","Animate_Animate","oldRow","oldColumn","newRow","newColumn","animateConfig","deleteTiming","domToDelete","_getEl","gameConfig","oldChar","oldColor","backgroundColor","domParent","isFallingDown","animateClass","explode","animateInClass","successAnimationIterationDuration","fallNodeAnimate","after","magnitude","angular","shakingElements","tiltAngle","magnitudeUnit","randomInt","upAndDownShake","transform","randomX","randomY","splice","angularShake","angle","positions","charLength","rowAverage","columnAverage","hidedWord","getBlockPosition","foundWordDisplayEl","fixerDistance","nextChar","getRandomColor","make","_showUpComingChar","charblock","initializeElement","charBlockEl","plusCharBlockClass","background","_registerSkullClick","eventKeyCode","isBottomMove","controlCodes","moveTo","_generateMove","destinationEl","_skullClick","checkWordSuccess","_destroy","animateOutClass","charSpeed","blockElement","offsetTop","offsetLeft","offsetWidth","charBlock","charBlockString","cachedRow","cachedRows","rowElement","upComingCharHolder","upcomingCharEl","workingElement","outgoingAnimation","childNodes","remainingClicks","getYX","Settings_Settings","settings","getDefaultSettings","useAnimation","eventSounds","playBackgroundSound","soundPlay","gameLevel","do_vibrate","vibration","_setMusicSetting","_setGridsSetting","_setLevelSetting","_setColorMode","wasPausedFlag","backgroundMusic","activeSound","deActiveSound","eventsMusic","animation","active","deActive","activeVibrate","deActiveVibrate","activeDay","activeNight","simple","medium","expert","settingModal","settingModalTitle","input","onchange","modalItSelf","settingForm","settingData","_getIntValue","names","bgSound","bodyClass","workingCountExpert","expertFallDownAnimateSpeed","workingCountMedium","mediumFallDownAnimateSpeed","workingCountSimple","simpleFallDownAnimateSpeed","isNight","columnsMin","columnsMax","vibrationDuration","do_shake","encryptionKeySize","directionWordChecks","chooseedWordKind","isDay","Blob","textContent","shuffleArray","ltrClass","isFirstRun","persianTitle","englishTitle","japaneseTitle","nextLetter","startGame","pauseGame","resumeGame","records","createdWords","spentTime","clickStartGame","copyRight","lazyLoadSounds","sound","firstCall","dtp","exploded","falledStack","columnsNumber","thisWordLength","validatedColumns","checkWords","checkWordsResult","successObject","checkSuccessWordStack","_animateExplode","_updateScoreAndStats","_removeWordAndCharacters","showFoundWordAnimated","animateFoundedCharacters","merge","animateFallCharacters","falledCharacter","popItem","getCharacter","parent","displayFiveWords","currentWord","innerText","shake","choosedWordsUsedChar","__webpack_exports__","addAnimeFrame","animationLoading","isLoaded","timingProps","_settings","_getSettings","loadingTextElement","_setRandomColor","chooseWordsKind","ev","stopPropagation","openedStatus","opened","newDisplay","matches","btnFa","wordsType","choosedwordskind","btnEn","btnJa","workKindChooser","documentLink","wiki","href","apiDocs","choosedPersianTitle","choosedEnglishTitle","choosedJapaneseTitle","chooserEl","animateEl","langFiles","initGame","Gameplay","Settings","ScoreHandler","tetrisGameConfig","arshLoader","setProperties","hi_jRun","vivus_default","afterLoad","animationHolder","serviceWorker","register","scope","registration","ready","in_browser"],"mappings":"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","file":"App_bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","/**\n * vivus - JavaScript library to make drawing animation on SVG\n * @version v0.4.6\n * @link https://github.com/maxwellito/vivus\n * @license MIT\n */\n\n(function () {\n\n  'use strict';\n\n/**\n * Pathformer\n * Beta version\n *\n * Take any SVG version 1.1 and transform\n * child elements to 'path' elements\n *\n * This code is purely forked from\n * https://github.com/Waest/SVGPathConverter\n */\n\n/**\n * Class constructor\n *\n * @param {DOM|String} element Dom element of the SVG or id of it\n */\nfunction Pathformer(element) {\n  // Test params\n  if (typeof element === 'undefined') {\n    throw new Error('Pathformer [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error('Pathformer [constructor]: \"element\" parameter is not related to an existing ID');\n    }\n  }\n  if (element instanceof window.SVGElement || \n      element instanceof window.SVGGElement ||\n      /^svg$/i.test(element.nodeName)) {\n    this.el = element;\n  } else {\n    throw new Error('Pathformer [constructor]: \"element\" parameter must be a string or a SVGelement');\n  }\n\n  // Start\n  this.scan(element);\n}\n\n/**\n * List of tags which can be transformed\n * to path elements\n *\n * @type {Array}\n */\nPathformer.prototype.TYPES = ['line', 'ellipse', 'circle', 'polygon', 'polyline', 'rect'];\n\n/**\n * List of attribute names which contain\n * data. This array list them to check if\n * they contain bad values, like percentage.\n *\n * @type {Array}\n */\nPathformer.prototype.ATTR_WATCH = ['cx', 'cy', 'points', 'r', 'rx', 'ry', 'x', 'x1', 'x2', 'y', 'y1', 'y2'];\n\n/**\n * Finds the elements compatible for transform\n * and apply the liked method\n *\n * @param  {object} options Object from the constructor\n */\nPathformer.prototype.scan = function (svg) {\n  var fn, element, pathData, pathDom,\n      elements = svg.querySelectorAll(this.TYPES.join(','));\n\n  for (var i = 0; i < elements.length; i++) {\n    element = elements[i];\n    fn = this[element.tagName.toLowerCase() + 'ToPath'];\n    pathData = fn(this.parseAttr(element.attributes));\n    pathDom = this.pathMaker(element, pathData);\n    element.parentNode.replaceChild(pathDom, element);\n  }\n};\n\n\n/**\n * Read `line` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Line element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.lineToPath = function (element) {\n  var newElement = {},\n      x1 = element.x1 || 0,\n      y1 = element.y1 || 0,\n      x2 = element.x2 || 0,\n      y2 = element.y2 || 0;\n\n  newElement.d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n  return newElement;\n};\n\n/**\n * Read `rect` element to extract and transform\n * data, to make it ready for a `path` object.\n * The radius-border is not taken in charge yet.\n * (your help is more than welcomed)\n *\n * @param  {DOMelement} element Rect element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.rectToPath = function (element) {\n  var newElement = {},\n      x      = parseFloat(element.x)      || 0,\n      y      = parseFloat(element.y)      || 0,\n      width  = parseFloat(element.width)  || 0,\n      height = parseFloat(element.height) || 0;\n\n  if (element.rx || element.ry) {\n    var rx = parseInt(element.rx, 10) || -1,\n        ry = parseInt(element.ry, 10) || -1;\n    rx = Math.min(Math.max(rx < 0 ? ry : rx, 0), width/2);\n    ry = Math.min(Math.max(ry < 0 ? rx : ry, 0), height/2);\n\n    newElement.d = 'M ' + (x + rx) + ',' + y + ' ' +\n                   'L ' + (x + width - rx) + ',' + y + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width) + ',' + (y + ry) + ' ' +\n                   'L ' + (x + width) + ',' + (y + height - ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + width - rx) + ',' + (y + height) + ' ' +\n                   'L ' + (x + rx) + ',' + (y + height) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + x + ',' + (y + height - ry) + ' ' +\n                   'L ' + x + ',' + (y + ry) + ' ' +\n                   'A ' + rx + ',' + ry + ',0,0,1,' + (x + rx) + ',' + y;\n  }\n  else {\n    newElement.d = 'M' + x + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + y + ' ' +\n                   'L' + (x + width) + ' ' + (y + height) + ' ' +\n                   'L' + x + ' ' + (y + height) + ' Z';\n  }\n  return newElement;\n};\n\n/**\n * Read `polyline` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Polyline element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polylineToPath = function (element) {\n  var newElement = {},\n      points = element.points.trim().split(' '),\n      i, path;\n\n  // Reformatting if points are defined without commas\n  if (element.points.indexOf(',') === -1) {\n    var formattedPoints = [];\n    for (i = 0; i < points.length; i+=2) {\n      formattedPoints.push(points[i] + ',' + points[i+1]);\n    }\n    points = formattedPoints;\n  }\n\n  // Generate the path.d value\n  path = 'M' + points[0];\n  for(i = 1; i < points.length; i++) {\n    if (points[i].indexOf(',') !== -1) {\n      path += 'L' + points[i];\n    }\n  }\n  newElement.d = path;\n  return newElement;\n};\n\n/**\n * Read `polygon` element to extract and transform\n * data, to make it ready for a `path` object.\n * This method rely on polylineToPath, because the\n * logic is similar. The path created is just closed,\n * so it needs an 'Z' at the end.\n *\n * @param  {DOMelement} element Polygon element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.polygonToPath = function (element) {\n  var newElement = Pathformer.prototype.polylineToPath(element);\n\n  newElement.d += 'Z';\n  return newElement;\n};\n\n/**\n * Read `ellipse` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element ellipse element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.ellipseToPath = function (element) {\n  var newElement = {},\n      rx = parseFloat(element.rx) || 0,\n      ry = parseFloat(element.ry) || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - rx,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(rx),\n      endY = cy;\n\n  newElement.d = 'M' + startX + ',' + startY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + endX + ',' + endY +\n                 'A' + rx + ',' + ry + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Read `circle` element to extract and transform\n * data, to make it ready for a `path` object.\n *\n * @param  {DOMelement} element Circle element to transform\n * @return {object}             Data for a `path` element\n */\nPathformer.prototype.circleToPath = function (element) {\n  var newElement = {},\n      r  = parseFloat(element.r)  || 0,\n      cx = parseFloat(element.cx) || 0,\n      cy = parseFloat(element.cy) || 0,\n      startX = cx - r,\n      startY = cy,\n      endX = parseFloat(cx) + parseFloat(r),\n      endY = cy;\n      \n  newElement.d =  'M' + startX + ',' + startY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + endX + ',' + endY +\n                  'A' + r + ',' + r + ' 0,1,1 ' + startX + ',' + endY;\n  return newElement;\n};\n\n/**\n * Create `path` elements form original element\n * and prepared objects\n *\n * @param  {DOMelement} element  Original element to transform\n * @param  {object} pathData     Path data (from `toPath` methods)\n * @return {DOMelement}          Path element\n */\nPathformer.prototype.pathMaker = function (element, pathData) {\n  var i, attr, pathTag = document.createElementNS('http://www.w3.org/2000/svg','path');\n  for(i = 0; i < element.attributes.length; i++) {\n    attr = element.attributes[i];\n    if (this.ATTR_WATCH.indexOf(attr.name) === -1) {\n      pathTag.setAttribute(attr.name, attr.value);\n    }\n  }\n  for(i in pathData) {\n    pathTag.setAttribute(i, pathData[i]);\n  }\n  return pathTag;\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of attribute => value\n *\n * @param  {NamedNodeMap} attributes Attributes object from DOM element to parse\n * @return {object}                  Object of attributes\n */\nPathformer.prototype.parseAttr = function (element) {\n  var attr, output = {};\n  for (var i = 0; i < element.length; i++) {\n    attr = element[i];\n    // Check if no data attribute contains '%', or the transformation is impossible\n    if (this.ATTR_WATCH.indexOf(attr.name) !== -1 && attr.value.indexOf('%') !== -1) {\n      throw new Error('Pathformer [parseAttr]: a SVG shape got values in percentage. This cannot be transformed into \\'path\\' tags. Please use \\'viewBox\\'.');\n    }\n    output[attr.name] = attr.value;\n  }\n  return output;\n};\n\n  'use strict';\n\nvar setupEnv, requestAnimFrame, cancelAnimFrame, parsePositiveInt;\n\n/**\n * Vivus\n * Beta version\n *\n * Take any SVG and make the animation\n * to give give the impression of live drawing\n *\n * This in more than just inspired from codrops\n * At that point, it's a pure fork.\n */\n\n/**\n * Class constructor\n * option structure\n *   type: 'delayed'|'sync'|'oneByOne'|'script' (to know if the items must be drawn synchronously or not, default: delayed)\n *   duration: <int> (in frames)\n *   start: 'inViewport'|'manual'|'autostart' (start automatically the animation, default: inViewport)\n *   delay: <int> (delay between the drawing of first and last path)\n *   dashGap <integer> whitespace extra margin between dashes\n *   pathTimingFunction <function> timing animation function for each path element of the SVG\n *   animTimingFunction <function> timing animation function for the complete SVG\n *   forceRender <boolean> force the browser to re-render all updated path items\n *   selfDestroy <boolean> removes all extra styling on the SVG, and leaves it as original\n *\n * The attribute 'type' is by default on 'delayed'.\n *  - 'delayed'\n *    all paths are draw at the same time but with a\n *    little delay between them before start\n *  - 'sync'\n *    all path are start and finish at the same time\n *  - 'oneByOne'\n *    only one path is draw at the time\n *    the end of the first one will trigger the draw\n *    of the next one\n *\n * All these values can be overwritten individually\n * for each path item in the SVG\n * The value of frames will always take the advantage of\n * the duration value.\n * If you fail somewhere, an error will be thrown.\n * Good luck.\n *\n * @constructor\n * @this {Vivus}\n * @param {DOM|String}   element  Dom element of the SVG or id of it\n * @param {Object}       options  Options about the animation\n * @param {Function}     callback Callback for the end of the animation\n */\nfunction Vivus(element, options, callback) {\n  setupEnv();\n\n  // Setup\n  this.isReady = false;\n  this.setElement(element, options);\n  this.setOptions(options);\n  this.setCallback(callback);\n\n  if (this.isReady) {\n    this.init();\n  }\n}\n\n/**\n * Timing functions\n **************************************\n *\n * Default functions to help developers.\n * It always take a number as parameter (between 0 to 1) then\n * return a number (between 0 and 1)\n */\nVivus.LINEAR = function(x) {\n  return x;\n};\nVivus.EASE = function(x) {\n  return -Math.cos(x * Math.PI) / 2 + 0.5;\n};\nVivus.EASE_OUT = function(x) {\n  return 1 - Math.pow(1 - x, 3);\n};\nVivus.EASE_IN = function(x) {\n  return Math.pow(x, 3);\n};\nVivus.EASE_OUT_BOUNCE = function(x) {\n  var base = -Math.cos(x * (0.5 * Math.PI)) + 1,\n    rate = Math.pow(base, 1.5),\n    rateR = Math.pow(1 - x, 2),\n    progress = -Math.abs(Math.cos(rate * (2.5 * Math.PI))) + 1;\n  return 1 - rateR + progress * rateR;\n};\n\n/**\n * Setters\n **************************************\n */\n\n/**\n * Check and set the element in the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param {DOM|String}   element  SVG Dom element or id of it\n */\nVivus.prototype.setElement = function(element, options) {\n  var onLoad, self;\n\n  // Basic check\n  if (typeof element === 'undefined') {\n    throw new Error('Vivus [constructor]: \"element\" parameter is required');\n  }\n\n  // Set the element\n  if (element.constructor === String) {\n    element = document.getElementById(element);\n    if (!element) {\n      throw new Error(\n        'Vivus [constructor]: \"element\" parameter is not related to an existing ID'\n      );\n    }\n  }\n  this.parentEl = element;\n\n  // Load the SVG with XMLHttpRequest and extract the SVG\n  if (options && options.file) {\n    self = this;\n    onLoad = function() {\n      var domSandbox = document.createElement('div');\n      domSandbox.innerHTML = this.responseText;\n\n      var svgTag = domSandbox.querySelector('svg');\n      if (!svgTag) {\n        throw new Error(\n          'Vivus [load]: Cannot find the SVG in the loaded file : ' +\n            options.file\n        );\n      }\n\n      self.el = svgTag;\n      self.el.setAttribute('width', '100%');\n      self.el.setAttribute('height', '100%');\n      self.parentEl.appendChild(self.el);\n      self.isReady = true;\n      self.init();\n      self = null;\n    };\n\n    var oReq = new window.XMLHttpRequest();\n    oReq.addEventListener('load', onLoad);\n    oReq.open('GET', options.file);\n    oReq.send();\n    return;\n  }\n\n  switch (element.constructor) {\n    case window.SVGSVGElement:\n    case window.SVGElement:\n    case window.SVGGElement:\n      this.el = element;\n      this.isReady = true;\n      break;\n\n    case window.HTMLObjectElement:\n      self = this;\n      onLoad = function(e) {\n        if (self.isReady) {\n          return;\n        }\n        self.el =\n          element.contentDocument &&\n          element.contentDocument.querySelector('svg');\n        if (!self.el && e) {\n          throw new Error(\n            'Vivus [constructor]: object loaded does not contain any SVG'\n          );\n        } else if (self.el) {\n          if (element.getAttribute('built-by-vivus')) {\n            self.parentEl.insertBefore(self.el, element);\n            self.parentEl.removeChild(element);\n            self.el.setAttribute('width', '100%');\n            self.el.setAttribute('height', '100%');\n          }\n          self.isReady = true;\n          self.init();\n          self = null;\n        }\n      };\n\n      if (!onLoad()) {\n        element.addEventListener('load', onLoad);\n      }\n      break;\n\n    default:\n      throw new Error(\n        'Vivus [constructor]: \"element\" parameter is not valid (or miss the \"file\" attribute)'\n      );\n  }\n};\n\n/**\n * Set up user option to the instance\n * The method will not return anything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {object} options Object from the constructor\n */\nVivus.prototype.setOptions = function(options) {\n  var allowedTypes = [\n    'delayed',\n    'sync',\n    'async',\n    'nsync',\n    'oneByOne',\n    'scenario',\n    'scenario-sync'\n  ];\n  var allowedStarts = ['inViewport', 'manual', 'autostart'];\n\n  // Basic check\n  if (options !== undefined && options.constructor !== Object) {\n    throw new Error(\n      'Vivus [constructor]: \"options\" parameter must be an object'\n    );\n  } else {\n    options = options || {};\n  }\n\n  // Set the animation type\n  if (options.type && allowedTypes.indexOf(options.type) === -1) {\n    throw new Error(\n      'Vivus [constructor]: ' +\n        options.type +\n        ' is not an existing animation `type`'\n    );\n  } else {\n    this.type = options.type || allowedTypes[0];\n  }\n\n  // Set the start type\n  if (options.start && allowedStarts.indexOf(options.start) === -1) {\n    throw new Error(\n      'Vivus [constructor]: ' +\n        options.start +\n        ' is not an existing `start` option'\n    );\n  } else {\n    this.start = options.start || allowedStarts[0];\n  }\n\n  this.isIE =\n    window.navigator.userAgent.indexOf('MSIE') !== -1 ||\n    window.navigator.userAgent.indexOf('Trident/') !== -1 ||\n    window.navigator.userAgent.indexOf('Edge/') !== -1;\n  this.duration = parsePositiveInt(options.duration, 120);\n  this.delay = parsePositiveInt(options.delay, null);\n  this.dashGap = parsePositiveInt(options.dashGap, 1);\n  this.forceRender = options.hasOwnProperty('forceRender')\n    ? !!options.forceRender\n    : this.isIE;\n  this.reverseStack = !!options.reverseStack;\n  this.selfDestroy = !!options.selfDestroy;\n  this.onReady = options.onReady;\n  this.map = [];\n  this.frameLength = this.currentFrame = this.delayUnit = this.speed = this.handle = null;\n\n  this.ignoreInvisible = options.hasOwnProperty('ignoreInvisible')\n    ? !!options.ignoreInvisible\n    : false;\n\n  this.animTimingFunction = options.animTimingFunction || Vivus.LINEAR;\n  this.pathTimingFunction = options.pathTimingFunction || Vivus.LINEAR;\n\n  if (this.delay >= this.duration) {\n    throw new Error('Vivus [constructor]: delay must be shorter than duration');\n  }\n};\n\n/**\n * Set up callback to the instance\n * The method will not return enything, but will throw an\n * error if the parameter is invalid\n *\n * @param  {Function} callback Callback for the animation end\n */\nVivus.prototype.setCallback = function(callback) {\n  // Basic check\n  if (!!callback && callback.constructor !== Function) {\n    throw new Error(\n      'Vivus [constructor]: \"callback\" parameter must be a function'\n    );\n  }\n  this.callback = callback || function() {};\n};\n\n/**\n * Core\n **************************************\n */\n\n/**\n * Map the svg, path by path.\n * The method return nothing, it just fill the\n * `map` array. Each item in this array represent\n * a path element from the SVG, with informations for\n * the animation.\n *\n * ```\n * [\n *   {\n *     el: <DOMobj> the path element\n *     length: <number> length of the path line\n *     startAt: <number> time start of the path animation (in frames)\n *     duration: <number> path animation duration (in frames)\n *   },\n *   ...\n * ]\n * ```\n *\n */\nVivus.prototype.mapping = function() {\n  var i, paths, path, pAttrs, pathObj, totalLength, lengthMeter, timePoint, scale, hasNonScale;\n  timePoint = totalLength = lengthMeter = 0;\n  paths = this.el.querySelectorAll('path');\n  hasNonScale = false;\n\n  for (i = 0; i < paths.length; i++) {\n    path = paths[i];\n    if (this.isInvisible(path)) {\n      continue;\n    }\n\n    pathObj = {\n      el: path,\n      length: 0,\n      startAt: 0,\n      duration: 0,\n      isResizeSensitive: false\n    };\n\n    // If vector effect is non-scaling-stroke, the total length won't match the rendered length\n    // so we need to calculate the scale and apply it\n    if (path.getAttribute('vector-effect') === 'non-scaling-stroke') {\n      var rect = path.getBoundingClientRect();\n      var box = path.getBBox();\n      scale = Math.max(rect.width / box.width, rect.height / box.height);\n      pathObj.isResizeSensitive = true;\n      hasNonScale = true;\n    } else {\n      scale = 1;\n    }\n    pathObj.length = Math.ceil(path.getTotalLength() * scale);\n\n    // Test if the path length is correct\n    if (isNaN(pathObj.length)) {\n      if (window.console && console.warn) {\n        console.warn(\n          'Vivus [mapping]: cannot retrieve a path element length',\n          path\n        );\n      }\n      continue;\n    }\n    this.map.push(pathObj);\n    path.style.strokeDasharray =\n      pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    path.style.strokeDashoffset = pathObj.length + this.dashGap;\n    pathObj.length += this.dashGap;\n    totalLength += pathObj.length;\n\n    this.renderPath(i);\n  }\n\n  // Show a warning for non-scaling elements\n  if (hasNonScale) {\n    console.warn('Vivus: this SVG contains non-scaling-strokes. You should call instance.recalc() when the SVG is resized or you will encounter unwanted behaviour. See https://github.com/maxwellito/vivus#non-scaling for more info.');\n  }\n\n  totalLength = totalLength === 0 ? 1 : totalLength;\n  this.delay = this.delay === null ? this.duration / 3 : this.delay;\n  this.delayUnit = this.delay / (paths.length > 1 ? paths.length - 1 : 1);\n\n  // Reverse stack if asked\n  if (this.reverseStack) {\n    this.map.reverse();\n  }\n\n  for (i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n\n    switch (this.type) {\n      case 'delayed':\n        pathObj.startAt = this.delayUnit * i;\n        pathObj.duration = this.duration - this.delay;\n        break;\n\n      case 'oneByOne':\n        pathObj.startAt = (lengthMeter / totalLength) * this.duration;\n        pathObj.duration = (pathObj.length / totalLength) * this.duration;\n        break;\n\n      case 'sync':\n      case 'async':\n      case 'nsync':\n        pathObj.startAt = 0;\n        pathObj.duration = this.duration;\n        break;\n\n      case 'scenario-sync':\n        path = pathObj.el;\n        pAttrs = this.parseAttr(path);\n        pathObj.startAt =\n          timePoint +\n          (parsePositiveInt(pAttrs['data-delay'], this.delayUnit) || 0);\n        pathObj.duration = parsePositiveInt(\n          pAttrs['data-duration'],\n          this.duration\n        );\n        timePoint =\n          pAttrs['data-async'] !== undefined\n            ? pathObj.startAt\n            : pathObj.startAt + pathObj.duration;\n        this.frameLength = Math.max(\n          this.frameLength,\n          pathObj.startAt + pathObj.duration\n        );\n        break;\n\n      case 'scenario':\n        path = pathObj.el;\n        pAttrs = this.parseAttr(path);\n        pathObj.startAt =\n          parsePositiveInt(pAttrs['data-start'], this.delayUnit) || 0;\n        pathObj.duration = parsePositiveInt(\n          pAttrs['data-duration'],\n          this.duration\n        );\n        this.frameLength = Math.max(\n          this.frameLength,\n          pathObj.startAt + pathObj.duration\n        );\n        break;\n    }\n    lengthMeter += pathObj.length;\n    this.frameLength = this.frameLength || this.duration;\n  }\n};\n\n/**\n * Public method to re-evaluate line length for non-scaling lines\n * path elements.\n */\nVivus.prototype.recalc = function () {\n  if (this.mustRecalcScale) {\n    return;\n  }\n  this.mustRecalcScale = requestAnimFrame(function () {\n    this.performLineRecalc();\n  }.bind(this));\n}\n\n/**\n * Private method to re-evaluate line length on non-scaling\n * path elements. Then call for a trace to update the SVG. \n */\nVivus.prototype.performLineRecalc = function () {\n  var pathObj, path, rect, box, scale;\n  for (var i = 0; i < this.map.length; i++) {\n    pathObj = this.map[i];\n    if (pathObj.isResizeSensitive) {\n      path = pathObj.el;\n      rect = path.getBoundingClientRect();\n      box = path.getBBox();\n      scale = Math.max(rect.width / box.width, rect.height / box.height);\n      pathObj.length = Math.ceil(path.getTotalLength() * scale);\n      path.style.strokeDasharray = pathObj.length + ' ' + (pathObj.length + this.dashGap * 2);\n    }\n  }\n  this.trace();\n  this.mustRecalcScale = null;\n}\n\n/**\n * Interval method to draw the SVG from current\n * position of the animation. It update the value of\n * `currentFrame` and re-trace the SVG.\n *\n * It use this.handle to store the requestAnimationFrame\n * and clear it one the animation is stopped. So this\n * attribute can be used to know if the animation is\n * playing.\n *\n * Once the animation at the end, this method will\n * trigger the Vivus callback.\n *\n */\nVivus.prototype.draw = function() {\n  var self = this;\n  this.currentFrame += this.speed;\n\n  if (this.currentFrame <= 0) {\n    this.stop();\n    this.reset();\n  } else if (this.currentFrame >= this.frameLength) {\n    this.stop();\n    this.currentFrame = this.frameLength;\n    this.trace();\n    if (this.selfDestroy) {\n      this.destroy();\n    }\n  } else {\n    this.trace();\n    this.handle = requestAnimFrame(function() {\n      self.draw();\n    });\n    return;\n  }\n\n  this.callback(this);\n  if (this.instanceCallback) {\n    this.instanceCallback(this);\n    this.instanceCallback = null;\n  }\n};\n\n/**\n * Draw the SVG at the current instant from the\n * `currentFrame` value. Here is where most of the magic is.\n * The trick is to use the `strokeDashoffset` style property.\n *\n * For optimisation reasons, a new property called `progress`\n * is added in each item of `map`. This one contain the current\n * progress of the path element. Only if the new value is different\n * the new value will be applied to the DOM element. This\n * method save a lot of resources to re-render the SVG. And could\n * be improved if the animation couldn't be played forward.\n *\n */\nVivus.prototype.trace = function() {\n  var i, progress, path, currentFrame;\n  currentFrame =\n    this.animTimingFunction(this.currentFrame / this.frameLength) *\n    this.frameLength;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    progress = (currentFrame - path.startAt) / path.duration;\n    progress = this.pathTimingFunction(Math.max(0, Math.min(1, progress)));\n    if (path.progress !== progress) {\n      path.progress = progress;\n      path.el.style.strokeDashoffset = Math.floor(path.length * (1 - progress));\n      this.renderPath(i);\n    }\n  }\n};\n\n/**\n * Method forcing the browser to re-render a path element\n * from it's index in the map. Depending on the `forceRender`\n * value.\n * The trick is to replace the path element by it's clone.\n * This practice is not recommended because it's asking more\n * ressources, too much DOM manupulation..\n * but it's the only way to let the magic happen on IE.\n * By default, this fallback is only applied on IE.\n *\n * @param  {Number} index Path index\n */\nVivus.prototype.renderPath = function(index) {\n  if (this.forceRender && this.map && this.map[index]) {\n    var pathObj = this.map[index],\n      newPath = pathObj.el.cloneNode(true);\n    pathObj.el.parentNode.replaceChild(newPath, pathObj.el);\n    pathObj.el = newPath;\n  }\n};\n\n/**\n * When the SVG object is loaded and ready,\n * this method will continue the initialisation.\n *\n * This this mainly due to the case of passing an\n * object tag in the constructor. It will wait\n * the end of the loading to initialise.\n *\n */\nVivus.prototype.init = function() {\n  // Set object variables\n  this.frameLength = 0;\n  this.currentFrame = 0;\n  this.map = [];\n\n  // Start\n  new Pathformer(this.el);\n  this.mapping();\n  this.starter();\n\n  if (this.onReady) {\n    this.onReady(this);\n  }\n};\n\n/**\n * Trigger to start of the animation.\n * Depending on the `start` value, a different script\n * will be applied.\n *\n * If the `start` value is not valid, an error will be thrown.\n * Even if technically, this is impossible.\n *\n */\nVivus.prototype.starter = function() {\n  switch (this.start) {\n    case 'manual':\n      return;\n\n    case 'autostart':\n      this.play();\n      break;\n\n    case 'inViewport':\n      var self = this,\n        listener = function() {\n          if (self.isInViewport(self.parentEl, 1)) {\n            self.play();\n            window.removeEventListener('scroll', listener);\n          }\n        };\n      window.addEventListener('scroll', listener);\n      listener();\n      break;\n  }\n};\n\n/**\n * Controls\n **************************************\n */\n\n/**\n * Get the current status of the animation between\n * three different states: 'start', 'progress', 'end'.\n * @return {string} Instance status\n */\nVivus.prototype.getStatus = function() {\n  return this.currentFrame === 0\n    ? 'start'\n    : this.currentFrame === this.frameLength\n    ? 'end'\n    : 'progress';\n};\n\n/**\n * Reset the instance to the initial state : undraw\n * Be careful, it just reset the animation, if you're\n * playing the animation, this won't stop it. But just\n * make it start from start.\n *\n */\nVivus.prototype.reset = function() {\n  return this.setFrameProgress(0);\n};\n\n/**\n * Set the instance to the final state : drawn\n * Be careful, it just set the animation, if you're\n * playing the animation on rewind, this won't stop it.\n * But just make it start from the end.\n *\n */\nVivus.prototype.finish = function() {\n  return this.setFrameProgress(1);\n};\n\n/**\n * Set the level of progress of the drawing.\n *\n * @param {number} progress Level of progress to set\n */\nVivus.prototype.setFrameProgress = function(progress) {\n  progress = Math.min(1, Math.max(0, progress));\n  this.currentFrame = Math.round(this.frameLength * progress);\n  this.trace();\n  return this;\n};\n\n/**\n * Play the animation at the desired speed.\n * Speed must be a valid number (no zero).\n * By default, the speed value is 1.\n * But a negative value is accepted to go forward.\n *\n * And works with float too.\n * But don't forget we are in JavaScript, se be nice\n * with him and give him a 1/2^x value.\n *\n * @param  {number} speed Animation speed [optional]\n */\nVivus.prototype.play = function(speed, callback) {\n  this.instanceCallback = null;\n\n  if (speed && typeof speed === 'function') {\n    this.instanceCallback = speed; // first parameter is actually the callback function\n    speed = null;\n  } else if (speed && typeof speed !== 'number') {\n    throw new Error('Vivus [play]: invalid speed');\n  }\n  // if the first parameter wasn't the callback, check if the seconds was\n  if (callback && typeof callback === 'function' && !this.instanceCallback) {\n    this.instanceCallback = callback;\n  }\n\n  this.speed = speed || 1;\n  if (!this.handle) {\n    this.draw();\n  }\n  return this;\n};\n\n/**\n * Stop the current animation, if on progress.\n * Should not trigger any error.\n *\n */\nVivus.prototype.stop = function() {\n  if (this.handle) {\n    cancelAnimFrame(this.handle);\n    this.handle = null;\n  }\n  return this;\n};\n\n/**\n * Destroy the instance.\n * Remove all bad styling attributes on all\n * path tags\n *\n */\nVivus.prototype.destroy = function() {\n  this.stop();\n  var i, path;\n  for (i = 0; i < this.map.length; i++) {\n    path = this.map[i];\n    path.el.style.strokeDashoffset = null;\n    path.el.style.strokeDasharray = null;\n    this.renderPath(i);\n  }\n};\n\n/**\n * Utils methods\n * include methods from Codrops\n **************************************\n */\n\n/**\n * Method to best guess if a path should added into\n * the animation or not.\n *\n * 1. Use the `data-vivus-ignore` attribute if set\n * 2. Check if the instance must ignore invisible paths\n * 3. Check if the path is visible\n *\n * For now the visibility checking is unstable.\n * It will be used for a beta phase.\n *\n * Other improvments are planned. Like detecting\n * is the path got a stroke or a valid opacity.\n */\nVivus.prototype.isInvisible = function(el) {\n  var rect,\n    ignoreAttr = el.getAttribute('data-ignore');\n\n  if (ignoreAttr !== null) {\n    return ignoreAttr !== 'false';\n  }\n\n  if (this.ignoreInvisible) {\n    rect = el.getBoundingClientRect();\n    return !rect.width && !rect.height;\n  } else {\n    return false;\n  }\n};\n\n/**\n * Parse attributes of a DOM element to\n * get an object of {attributeName => attributeValue}\n *\n * @param  {object} element DOM element to parse\n * @return {object}         Object of attributes\n */\nVivus.prototype.parseAttr = function(element) {\n  var attr,\n    output = {};\n  if (element && element.attributes) {\n    for (var i = 0; i < element.attributes.length; i++) {\n      attr = element.attributes[i];\n      output[attr.name] = attr.value;\n    }\n  }\n  return output;\n};\n\n/**\n * Reply if an element is in the page viewport\n *\n * @param  {object} el Element to observe\n * @param  {number} h  Percentage of height\n * @return {boolean}\n */\nVivus.prototype.isInViewport = function(el, h) {\n  var scrolled = this.scrollY(),\n    viewed = scrolled + this.getViewportH(),\n    elBCR = el.getBoundingClientRect(),\n    elHeight = elBCR.height,\n    elTop = scrolled + elBCR.top,\n    elBottom = elTop + elHeight;\n\n  // if 0, the element is considered in the viewport as soon as it enters.\n  // if 1, the element is considered in the viewport only when it's fully inside\n  // value in percentage (1 >= h >= 0)\n  h = h || 0;\n\n  return elTop + elHeight * h <= viewed && elBottom >= scrolled;\n};\n\n/**\n * Get the viewport height in pixels\n *\n * @return {integer} Viewport height\n */\nVivus.prototype.getViewportH = function() {\n  var client = this.docElem.clientHeight,\n    inner = window.innerHeight;\n\n  if (client < inner) {\n    return inner;\n  } else {\n    return client;\n  }\n};\n\n/**\n * Get the page Y offset\n *\n * @return {integer} Page Y offset\n */\nVivus.prototype.scrollY = function() {\n  return window.pageYOffset || this.docElem.scrollTop;\n};\n\nsetupEnv = function() {\n  if (Vivus.prototype.docElem) {\n    return;\n  }\n\n  /**\n   * Alias for document element\n   *\n   * @type {DOMelement}\n   */\n  Vivus.prototype.docElem = window.document.documentElement;\n\n  /**\n   * Alias for `requestAnimationFrame` or\n   * `setTimeout` function for deprecated browsers.\n   *\n   */\n  requestAnimFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(/* function */ callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      }\n    );\n  })();\n\n  /**\n   * Alias for `cancelAnimationFrame` or\n   * `cancelTimeout` function for deprecated browsers.\n   *\n   */\n  cancelAnimFrame = (function() {\n    return (\n      window.cancelAnimationFrame ||\n      window.webkitCancelAnimationFrame ||\n      window.mozCancelAnimationFrame ||\n      window.oCancelAnimationFrame ||\n      window.msCancelAnimationFrame ||\n      function(id) {\n        return window.clearTimeout(id);\n      }\n    );\n  })();\n};\n\n/**\n * Parse string to integer.\n * If the number is not positive or null\n * the method will return the default value\n * or 0 if undefined\n *\n * @param {string} value String to parse\n * @param {*} defaultValue Value to return if the result parsed is invalid\n * @return {number}\n *\n */\nparsePositiveInt = function(value, defaultValue) {\n  var output = parseInt(value, 10);\n  return output >= 0 ? output : defaultValue;\n};\n\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function() {\n      return Vivus;\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = Vivus;\n  } else {\n    // Browser globals\n    window.Vivus = Vivus;\n  }\n\n}());\n\n","/**\n * @module\n */\n\n\n/**\n @typedef {Object} TimerConfig\n @property {string} [cssClass=\".timerDisplay\"] - CssClass selecor for setting time in timerDisplay.\n @property {function}   onStart     - Event when timer get's started.\n @property {function}   onPause     - Event when timer get's paused.\n @property {function}   onResume    - Event when timer get's resumed.\n @property {Object}     blobTiming  - Blob for feeding WebWorker.\n @property {function}   workerOnMessage(event) - Callback function for WebWorker.onmessage .\n @property {function}   beatifySecond(seconds) - Function to make time beatiful.\n */\n\n/**\n * @class\n * A class which use WebWorker to manage time.\n * @constructor\n * @param {TimerConfig}\n *\n * @property timerWorker {WebWorker} WebWorker used in timer\n * @property config {TimerConfig}\n *\n *\n * @example\n *    let timer = new Timer({\n *        onStart: function(){\n *            TetrisGame.initValues.paused = false;\n *        },\n *        workerOnMessage:function (event) {\n *            Storage.set('seconds', event.data);\n *        },\n *        onPause:function () {\n *            TetrisGame.initValues.paused = true;\n *        },\n *        onResume:function () {\n *            TetrisGame.initValues.paused = false;\n *        },\n *        blobTiming: new Blob([Helper._('#workerTiming').textContent], { type: \"text/javascript\" });,\n *    });\n */\nexport default class Timer {\n\t/**\n     * Create instance for timing\n     * @param config\n     */\n\tconstructor(config) {\n\t\t// worker of our timer\n\t\tthis.timerWorker = null;\n\n\t\t// Default config\n\t\tconst defaultConfig = {\n\t\t\tcssClsss: '.timerDisplay',\n\t\t\tonStart: () => { },\n\t\t\tonPause: () => { },\n\t\t\tonResume: () => { },\n\t\t\tblobTiming: '',\n\t\t\tworkerOnMessage: () => { },\n\t\t\tbeautifySecond: s => {\n\t\t\t\tif (s > 3600) {\n\t\t\t\t\t// 1 hour and 34 min\n\t\t\t\t\treturn (Math.ceil(s / 3600) + window.lang.hour + window.lang.and + (s % 3600) + window.lang.min);\n\t\t\t\t} else if (s > 60 && s <= 3600) {\n\t\t\t\t\t// 4 min and 3 s\n\t\t\t\t\treturn (Math.ceil(s / 60) + window.lang.minute + window.lang.and + (s % 60) + window.lang.second);\n\t\t\t\t} else {\n\t\t\t\t\treturn (s + window.lang.second);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n\t\t// save current time\n\t\tthis.currentTime = `0 ${window.lang.second}`;\n\n\t\t// Extend config\n\t\tthis.config = Object.assign(defaultConfig, config);\n\t}\n\n\n\t/**\n     * Starts the timer\n     */\n\tstart() {\n\t\tconst timerDisplayEl = document.querySelector(this.config.cssClsss);\n\t\tif (typeof (Worker) !== 'undefined') {\n\t\t\tif (!this.timerWorker) {\n\t\t\t\tthis.timerWorker = new Worker(window.URL.createObjectURL(this.config.blobTiming));\n\t\t\t} else {\n\t\t\t\t// stop timer if running already\n\t\t\t\tthis.pause();\n\t\t\t}\n\n\t\t\tthis.timerWorker.onmessage = event => {\n\t\t\t    this.currentTime = this.config.beautifySecond(event.data);\n\t\t\t\ttimerDisplayEl.innerHTML = this.currentTime;\n\t\t\t\tthis.config.workerOnMessage(event);\n\t\t\t};\n\t\t\tthis.config.onStart();\n\t\t} else {\n\t\t\ttimerDisplayEl.innerHTML = window.lang.webWorkerNotSupported;\n\t\t}\n\t}\n\n\t/**\n     * Pauses the timer\n     */\n\tpause() {\n\t\tthis.config.onPause();\n\t\tif (this.timerWorker) {\n\t\t\treturn this.timerWorker.postMessage({ 'pause_flag': true });\n\t\t}\n\t}\n\n\n\t/**\n     * Resumes the timer\n     */\n\tresume() {\n\t\tthis.config.onResume();\n\t\tif (this.timerWorker) {\n\t\t\treturn this.timerWorker.postMessage({ 'pause_flag': false });\n\t\t}\n\t}\n}\n","/** @module */\n\n\n/**\n *  Interval setting control - Better way to manage setInterval and make it easily to destroy\n */\nexport default class Interval {\n    /**\n     * Constructor of interval class - register intervals field here.\n     */\n    constructor() {\n        // to keep a reference to all the intervals\n        this.intervals = {};\n        this.delay = 100;\n        this.fn = () => {};\n\n\t\t// requestAnimationFrame() shim by Paul Irish\n\t\twindow.requestAnimFrame = (function() {\n\t\t\treturn  window.requestAnimationFrame   ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\tfunction(/* function */ callback, /* DOMElement */ element){\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})();\n    }\n\n\n\t/**\n\t * Behaves the same as setInterval except uses requestAnimationFrame() where possible for better performance\n\t * @param {function} fn The callback function\n\t * @param {int} delay The delay in milliseconds\n\t */\n\trequest(fn, delay) {\n\n\t\tthis.delay = delay;\n\t\tthis.fn = fn;\n\t\tthis.wait = false;\n\n\n\t\tif( !window.requestAnimationFrame       &&\n\t\t\t!window.webkitRequestAnimationFrame )\n\t\t\treturn window.setInterval(fn, delay);\n\n\t\tlet myReq;\n\n\t\tconst loop = () => {\n\t\t\tlet current = new Date().getTime(),\n\t\t\t\tdelta = current - this.start;\n\n\t\t\tif(delta >= this.delay && !this.wait) {\n\t\t\t\tthis.fn.call(true);\n\t\t\t\tthis.start = new Date().getTime();\n\t\t\t}else{\n\t\t\t\tthis.wait = false;\n\t\t\t}\n\n\t\t\tmyReq = requestAnimFrame(loop);\n\t\t};\n\n\t\tmyReq = requestAnimFrame(loop);\n\n\t\treturn myReq;\n\t}\n\n\t/**\n\t * Reset animation frame\n\t */\n\treset(intervalData){\n\n\t\t// update fn and delay\n\t\tthis.update(intervalData);\n\n\t\tthis.start = new Date().getTime();\n\t\tthis.wait = true;\n\t}\n\n\t/**\n\t * Update our rAF interval\n\t * @param intervalData\n\t */\n\tupdate(intervalData){\n\t\tthis.fn = intervalData.fn;\n\t\tthis.delay = intervalData.delay;\n\t}\n\n\n    /**\n     * Create another interval\n     * @param usedFunction {Function} function that we want to call\n     * @param delay {int} delay to call function\n     * @return {number}\n     */\n    make(usedFunction, delay) {\n\n\t\tthis.start = new Date().getTime();\n\t\tconst newInterval = this.request(usedFunction , delay);\n\n        this.intervals[newInterval] = true;\n        return newInterval;\n    }\n\n\n\t/**\n\t * Removes an interval from list\n\t * @param index\n\t * @private\n\t */\n\t_removeIndex(index) {\n\t\tdelete this.intervals[index];\n\t}\n\n\n\t/**\n\t * Behaves the same as clearInterval except uses cancelRequestAnimationFrame() where possible for better performance\n\t * @param {int|object} handle The callback function\n\t */\n\tclear(handle) {\n\n\t\tconsole.log(handle);\n\n\t\twindow.cancelAnimationFrame ? window.cancelAnimationFrame(handle) :\n\t\t\twindow.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle) :\n\t\t\t\tclearInterval(handle);\n\n\t\tthis._removeIndex(handle);\n\n\t}\n\n\n    /**\n     * Clear all intervals\n     */\n    clearAll() {\n        const all = Object.keys(this.intervals);\n        let len = all.length;\n\n        while (len-- > 0) {\n            const itemIndex = all.shift();\n            this.clear(itemIndex);\n            this._removeIndex(itemIndex);\n        }\n    }\n}\n","/**\n * @module\n */\n\n/**\n * Sound\n * @class Sound Manager - Main class to add and manage game sounds\n */\nexport default class Sound {\n\t/**\n\t * Play an audio from url\n\t * @param name\n\t * @return {Sound}\n\t */\n\tconstructor(name) {\n\t\tthis.audio = new Audio(`assets/mp3/${name}.mp3`);\n\t\treturn this;\n\t}\n\n\t/**\n     * Plays the current instance of media\n     * @param instance\n     * @return {Sound}\n     */\n\tstatic play(instance) {\n\t\tif (instance !== 'undefined' || this.audio) {\n\t\t\tif (!instance) {\n\t\t\t\tinstance = this.audio;\n\t\t\t}\n\t\t\tinstance.pause();\n\t\t\tinstance.currentTime = 0;\n\t\t\tconst noPromise = {\n\t\t\t\tcatch: () => {}\n\t\t\t};\n\t\t\t(instance.play() || noPromise).catch(() => {});\n\t\t}\n\t\treturn instance;\n\t}\n\n\n\t/**\n     * Create instance correct name\n     * @param key\n     * @return {string}\n     * @private\n     */\n\tstatic _makeInstanceName(key) {\n\t\treturn `${key}Instance`;\n\t}\n\n\n\t/**\n     * Make singleton design pattern to getv only one innstance of class.\n     * @param key\n     * @return {*}\n     * @private\n     */\n\tstatic _getInstance(key) {\n\t\tconst instanceName = this._makeInstanceName(key);\n\t\treturn this[instanceName];\n\t}\n\n\n\t/**\n     * Set instance\n     * @param key\n     * @param instance\n     * @private\n     */\n\tstatic _setInstance(key, instance) {\n\t\tconst instanceName = this._makeInstanceName(key);\n\t\tthis[instanceName] = instance;\n\t}\n\n\n\t/**\n     * Play sound based on it's name\n     * @param key {String} - Name of sound to play\n     * @param canPlay {Boolean} - Setting to check if audio should get played\n     * @param loop {Boolean} [false] - Sets if audio should get looped\n     * @return Audio\n     */\n\tstatic playByKey(key, canPlay, loop=false) {\n\t\tif (!canPlay) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet audioInstance;\n\t\tif (!(audioInstance = Sound._getInstance(key))) {\n\t\t\taudioInstance = new Audio(`assets/mp3/${key}.mp3`);\n\t\t\taudioInstance.loop=loop;\n\t\t\tSound._setInstance(key, audioInstance);\n\t\t}\n\n\t\tthis.play(audioInstance);\n\n\t\treturn audioInstance;\n\t}\n\n\n\t/**\n     * Play sound based on it's name\n     * @param key\n     */\n\tstatic pauseByKey(key) {\n\t\tconst audioInstance = Sound._getInstance(key);\n\t\taudioInstance.pause();\n\t}\n}\n","/**\n * @module\n */\n\n/**\n * @static\n * @class\n * Storage class is a wrapper for LocalStrage and manages setting and getting items from/to LocalStorage with type casting\n */\n\nimport * as AesJs from 'aes-js';\n\nexport default class Storage {\n\t/**\n     * Returns a plain string of given key from localStorage\n     * @param {string} key\n     * @param {string|object} [default_value]\n     * @returns {string | null | * | string}\n     */\n\tstatic get(key, default_value) {\n\t\tdefault_value = typeof default_value === 'undefined' ? '' : default_value;\n\t\treturn localStorage.getItem(key) || default_value;\n\t}\n\n\t/**\n     * Returns an integer of given key from localStorage\n     * @param {string} key\n     * @param {int} default_value [default_value]\n     * @returns {number}\n     */\n\tstatic getInt(key, default_value) {\n\t\tdefault_value = typeof default_value === 'undefined' ? 0 : default_value;\n\t\treturn Number(Storage.get(key, default_value));\n\t}\n\n\t/**\n     * Returns a json of given key from localStorage\n     * @param key\n     * @param default_value\n     * @return {any}\n     */\n\tstatic getObject(key, default_value) {\n\t\tdefault_value = typeof default_value === 'undefined' ? {} : default_value;\n\t\tconst data = Storage.get(key, false);\n\t\treturn (!data) ? default_value : JSON.parse(data);\n\t}\n\n\t/**\n     * Set a json from given key to localStorage\n     * @param key {String}\n     * @param value {Object}\n     */\n\tstatic setObject(key, value) {\n\t\tthis.set(key, JSON.stringify(value));\n\t}\n\n\n\t/**\n     * Saves an object in localStorage\n     * @param {string} key\n     * @param {Object|string} value\n     */\n\tstatic set(key, value) {\n\t\tif (typeof (value) === 'object') {\n\t\t\tvalue = JSON.stringify(value);\n\t\t} else {\n\t\t\tvalue = value.toString();\n\t\t}\n\t\tlocalStorage.setItem(key, value);\n\t}\n\n\n\t/**\n     * Set's an object to Storage with AES Encryption\n     * @param key {String} - Object key\n     * @param value {Object} - Object to encrypt And Store\n     * @param encryptionKey {Array} - Array must be 128 bits (16 bytes), 192 bits (24 bytes) or 256 bits (32 bytes) long\n     */\n\tstatic setEncrypted(key, value, encryptionKey) {\n\t\t// Convert anyObject to JSON to be able store it\n\t\tvalue = AesJs.utils.utf8.toBytes(JSON.stringify(value));\n\n\t\tconst Encryptor = new AesJs.ModeOfOperation.ctr(encryptionKey);\n\t\tvalue = Encryptor.encrypt(value); // Encrypts data to bytes\n\n\t\t// Convert bytes to Hex, to be able save data in storage\n\t\tvalue = AesJs.utils.hex.fromBytes(value);\n\n\t\tthis.set(key, value);\n\t}\n\n\t/**\n     * Gets an object from storage with AES encryption\n     * @param key {String} - Key of Object in storage\n     * @param encryptionKey {Array} - Array must be 128 bits (16 bytes), 192 bits (24 bytes) or 256 bits (32 bytes) long\n     * @returns {Object}\n     */\n\tstatic getEncrypted(key, encryptionKey) {\n\t\tlet value = this.get(key);\n\t\t// Convert data back from hex to Bytes\n\t\tvalue = AesJs.utils.hex.toBytes(value);\n\t\tconst Decryptor = new AesJs.ModeOfOperation.ctr(encryptionKey);\n\t\tvalue = Decryptor.decrypt(value);\n\t\tvalue = AesJs.utils.utf8.fromBytes(value);\n\t\tif (value!=='') value = JSON.parse(value);\n\t\treturn value;\n\t}\n}\n","/**\n * @module\n */\n\n/**\n * @class Timeout - rAF version of setTimeout for make better performance\n */\nexport default class Timeout {\n\t/**\n\t * Add animation frame to windows\n\t * requestAnimationFrame() shim by\n\t * @author : Paul Irish\n\t */\n\tstatic addAnimeFrame() {\n\t\twindow.requestAnimFrame = (function() {\n\t\t\treturn window.requestAnimationFrame\n\t\t\t\t|| window.webkitRequestAnimationFrame\n\t\t\t\t|| window.mozRequestAnimationFrame\n\t\t\t\t|| window.oRequestAnimationFrame\n\t\t\t\t|| window.msRequestAnimationFrame\n\t\t\t\t|| function(callback) {\n\t\t\t\t    window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t}());\n\t}\n\n\n\t/**\n\t * Behaves the same as setTimeout except uses requestAnimationFrame() where possible for better performance\n\t * @param {function} fn The callback function\n\t * @param {int} delay The delay in milliseconds\n\t */\n\tstatic request(fn, delay) {\n\t\tif (!window.requestAnimationFrame\n\t\t\t&& !window.webkitRequestAnimationFrame\n\t\t\t&& !(window.mozRequestAnimationFrame\n\t\t\t\t&& window.mozCancelRequestAnimationFrame)\n\t\t\t&& !window.oRequestAnimationFrame\n\t\t\t&& !window.msRequestAnimationFrame) return window.setTimeout(fn, delay);\n\n\t\tconst start = new Date().getTime(),\n\t\t\thandle = {};\n\n\t\tconst loop = () => {\n\t\t\tconst current = new Date().getTime(),\n\t\t\t\tdelta = current - start;\n\n\t\t\tdelta >= delay ? fn.call() : handle.value = window.requestAnimFrame(loop);\n\t\t};\n\n\t\thandle.value = window.requestAnimFrame(loop);\n\t\treturn handle;\n\t}\n\n\n\t/**\n\t * Behaves the same as clearTimeout except uses cancelRequestAnimationFrame() where possible for better performance\n\t * @param {int|object} handle The callback function\n\t */\n\tstatic clear(handle) {\n\t\twindow.cancelAnimationFrame ? window.cancelAnimationFrame(handle.value)\n\t\t\t: window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(handle.value)\n\t\t\t\t: window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(handle.value) /* Support for legacy API */\n\t\t\t\t\t: window.mozCancelRequestAnimationFrame ? window.mozCancelRequestAnimationFrame(handle.value)\n\t\t\t\t\t\t: window.oCancelRequestAnimationFrame\t? window.oCancelRequestAnimationFrame(handle.value)\n\t\t\t\t\t\t\t: window.msCancelRequestAnimationFrame ? window.msCancelRequestAnimationFrame(handle.value)\n\t\t\t\t\t\t\t\t: clearTimeout(handle);\n\t}\n}\n","/**\n * @module\n */\n\n/**\n *  @class\n *  Helper\n *  This class holds some helper methods which are useful in many cases\n */\nexport default class Helper {\n\t/**\n\t * Wrapper for query selector\n\t * @param selector\n\t * @param holder\n\t * @return {null | object}\n\t */\n\tstatic _(selector, holder) {\n\t\tholder = typeof holder === 'undefined' ? document : holder;\n\t\treturn holder.querySelector(selector) || null;\n\t}\n\n\n\t/**\n\t * Vibrate device, If it's mobile\n\t * @param timeMs\n\t */\n\tstatic vibrate(timeMs) {\n\t\tif (Helper.isMobile()) {\n\t\t\ttry {\n\t\t\t\twindow.navigator.vibrate(timeMs);\n\t\t\t} catch (e) {\n\t\t\t\t// Who cares?\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes a dom :|\n\t * @param dom\n\t */\n\tstatic removeDom(dom) {\n\t\tdom.parentNode.removeChild(dom);\n\t}\n\n\n\t/**\n\t * Checks if device is mobile\n\t * @returns {boolean} - Return true if device is mobile\n\t */\n\tstatic isMobile() {\n\t\treturn typeof window.orientation !== 'undefined';\n\t}\n\n\n\t/**\n\t * Reversing strings containing especial unicode characters can cause problems using usual ways to reverse!\n\t * For example this string: 'foo 𝌆 bar mañana mañana' will be corrupt if used string.split(\"\").reverse().join(\"\");\n\t * We'll use following code from mathiasbynens to reverse a string properly\n\t * {@link https://github.com/mathiasbynens/esrever/blob/master/src/esrever.js repo source}\n\t *\n\t * @param string - An string to reverse\n\t *\n\t * @example\n\t *  let str = 'foo 𝌆 bar mañana mañana';\n\t *  let correctlyReversed = reverse(str); // 'anãnam anañam rab 𝌆 oof'\n\t *  let corruptedReverse  = str.split(\"\").reverse().join(\"\"); // 'anãnam anañam rab �� oof'\n\t * @returns {string}\n\t */\n\tstatic reverse(string) {\n\t\tconst regexSymbolWithCombiningMarks = /(<%= allExceptCombiningMarks %>)(<%= combiningMarks %>+)/g;\n\t\tconst regexSurrogatePair = /([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])/g;\n\t\t// Step 1: deal with combining marks and astral symbols (surrogate pairs)\n\t\tstring = string\n\t\t// Swap symbols with their combining marks so the combining marks go first\n\t\t\t.replace(regexSymbolWithCombiningMarks, ($0, $1, $2) => {\n\t\t\t\t// Reverse the combining marks so they will end up in the same order\n\t\t\t\t// later on (after another round of reversing)\n\t\t\t\treturn Helper.reverse($2) + $1;\n\t\t\t})\n\t\t\t// Swap high and low surrogates so the low surrogates go first\n\t\t\t.replace(regexSurrogatePair, '$2$1');\n\t\t// Step 2: reverse the code units in the string\n\t\tconst result = [];\n\t\tlet index = string.length;\n\t\twhile (index--) {\n\t\t\tresult.push(string.charAt(index));\n\t\t}\n\t\treturn result.join('');\n\t}\n\n\t/**\n\t *\n\t * @param possibleFunction - Argument to check if it is a function ro not\n\t * @returns {boolean} True if input is a function otherwise false\n\t */\n\tstatic isFunction(possibleFunction) {\n\t\treturn typeof (possibleFunction) === typeof (Function);\n\t}\n\n\t/**\n\t * @param {Object} obj - Object to log\n\t */\n\tstatic log(obj) {\n\t\tconsole.log(obj);\n\t}\n\n\n\t/**\n\t * Gets Json resource using fetch API\n\t * @param url\n\t * @returns {Promise<any>}\n\t */\n\tstatic fetchJson(url) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfetch(url).then(response => response.json())\n\t\t\t\t.then(json => resolve(json))\n\t\t\t\t.catch(error => reject(error));\n\t\t});\n\t}\n\n\t/**\n\t * Gets Json resources using fetch API\n\t * @param urls\n\t * @returns {Promise<any>}\n\t */\n\tstatic fetchAllJson(urls) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tPromise.all(urls.map(url => Helper.fetchJson(url)))\n\t\t\t\t.then(result => {\n\t\t\t\t\tresolve(result);\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * Returns a random number between min (inclusive) and max (exclusive)\n\t */\n\tstatic getRandomArbitrary(min, max) {\n\t\treturn (Math.random() * (max - min)) + min;\n\t}\n\n\t/**\n\t * Returns a random integer between min (inclusive) and max (inclusive)\n\t * Using Math.round() will give you a non-uniform distribution!\n\t */\n\tstatic getRandomInt(min, max) {\n\t\treturn Math.floor((Math.random() * (max - min + 1))) + min;\n\t}\n\n\t/**\n\t * Checks to see if it's night or not :}\n\t * @returns {boolean}\n\t */\n\tstatic isDay() {\n\t\tconst hours = new Date().getHours();\n\t\treturn hours > 6 && hours < 20;\n\t}\n\n\n\t/**\n\t * Get X-Y positi`on of dom\n\t * @param dom\n\t * @returns {{y, x}}\n\t */\n\tstatic getYX(dom) {\n\t\tconst YX = dom.closest('.isColumn').id.replace('grid', '').split('_');\n\t\treturn { y: Helper.int(YX[0]), x: Helper.int(YX[1]) };\n\t}\n\n\t/**\n\t * Simple shortcut for parseInt\n\t * @param any\n\t * @returns {number}\n\t */\n\tstatic int(any) {\n\t\treturn Number(any);\n\t}\n\n\n\tstatic skippableIndexOf(str, substr, starCharacter) {\n\t\tconst len = str.length;\n\t\tconst sublen = substr.length;\n\t\tlet count = 0;\n\t\tif (sublen > len) {\n\t\t\treturn -1;\n\t\t}\n\t\tfor (let i = 0; i < len - sublen + 1; i++) {\n\t\t\tfor (let j = 0; j < sublen; j++) {\n\t\t\t\tif (str[j + i] === substr[j] || str[j + i] === starCharacter) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tif (count === sublen) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcount = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\n\t/**\n\t * Shuffles an array\n\t * @param array\n\t */\n\tstatic shuffleArray(array) {\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t}\n\t}\n\n\t/**\n\t * This function will acept a weigthed object for randoming, and returns an function to use in generation\n\t * @param spec\n\t * @returns {function(): *}\n\t */\n\tstatic weightedRand(spec) {\n\t\tlet i, j;\n\t\tconst table=[];\n\t\tfor (i in spec) {\n\t\t\t// The constant 10 below should be computed based on the\n\t\t\t// weights in the spec for a correct and optimal table size.\n\t\t\t// E.g. the spec {0:0.999, 1:0.001} will break this impl.\n\t\t\tfor (j=0; j<spec[i]*10; j++) {\n\t\t\t\ttable.push(i);\n\t\t\t}\n\t\t}\n\t\treturn function() {\n\t\t\treturn table[Math.floor(Math.random() * table.length)];\n\t\t};\n\t}\n}\n","/**\n * @module\n */\n\n\nimport Timeout from './Timeout';\nimport Helper from './Helper';\n\n/**\n * @class Modal\n * Modal manager class which manages CRUD operation of Modals.\n *\n * @constructor\n * @param text {string} Text to show in modal\n * @param {boolean} [isRtl=false] Determines if text should be rtl or ltr\n * @param onOk {function} Executes if user clicked inside Modal\n * @param onNo {function} Executes if user clicked outside Modal\n *\n * @property isRtl {boolean} Show rtl status of modal\n *\n *\n * @example\n *  //Create a new instance\n *  let modal = new Modal({\n *       header : \"Our Title goes here\" ,\n *       content : \"It is a message from our game to say yes you loose game !\",\n *       buttons : [\n *           {\n *               text : \"Ok\",\n *               isOk : true,\n *               onclick : function () {\n *                   this.destroy();\n *               }\n *           },{\n *               text : \"Do not\",\n *               notOk : true,\n *               onclick : function () {\n *                   alert(\"say why?!\");\n *               }\n *           }\n *       ]\n *   }, true );\n *\n *  //Show modal\n *  modal.show();\n *\n *  //Destory instance\n *  modal.destroy();\n *\n */\nexport default class Modal {\n\t/**\n\t * Constructor of modal class\n\t * @param options\n\t * @param isRtl\n\t */\n\tconstructor(options, isRtl) {\n\t\tthis.onDestroy = options.onDestroy;\n\t\tthis.onShow = options.onShow;\n\t\tthis.isRtl = typeof isRtl === 'undefined' ? false : isRtl;\n\t\tthis.animate = typeof options.animate === 'undefined' ? false : options.animate;\n\t\tthis.dark = options.dark ? ' dark ' : '';\n\t\tthis.type = options.type ? options.type : '';\n\n\n\t\tconst modalHolder = document.createElement('div');\n\t\tconst modal = document.createElement('div');\n\t\tconst modalAnimateClass = this.animate ? 'animated pulse' : '';\n\n\n\t\tmodalHolder.className = 'modalHolder';\n\n\t\t// add modal classes\n\t\tmodal.className = `${modalAnimateClass} modal ${this.type} ${this.dark}${isRtl ? 'rtl' : 'ltr'}`;\n\n\n\t\t// create title\n\t\tmodal.appendChild(Modal._createHeader(options));\n\n\t\t// create content\n\t\tmodal.appendChild(Modal._createContent(options));\n\n\n\t\t// create footer\n\t\tconst footer = Modal._createFooter(options);\n\t\tif (footer !== false) {\n\t\t\tmodal.appendChild(footer);\n\t\t}\n\n\n\t\tmodalHolder.appendChild(modal);\n\t\tdocument.body.appendChild(modalHolder);\n\n\n\t\tthis.node = modalHolder;\n\t\tthis.modal = modal;\n\n\n\t\t// Detect all clicks on the document\n\t\tmodalHolder.addEventListener('click', event => {\n\t\t\tif (event.target.classList.contains('closeModal')) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Create modal header\n\t * @param options\n\t * @return {HTMLDivElement}\n\t * @private\n\t */\n\tstatic _createHeader(options) {\n\t\tconst modalTitle = document.createElement('div');\n\t\tlet HeaderHtml = options.header || '';\n\n\t\tHeaderHtml += '<i class=\"icon-uniE95A closeModal\"></i>';\n\n\t\tmodalTitle.className = 'titleModal';\n\t\tmodalTitle.innerHTML = HeaderHtml;\n\n\t\treturn modalTitle;\n\t}\n\n\n\t/**\n\t * Create modal content\n\t * @param options\n\t * @return {HTMLDivElement}\n\t * @private\n\t */\n\tstatic _createContent(options) {\n\t\tconst modalContent = document.createElement('div');\n\t\tmodalContent.className = 'contentModal';\n\t\tmodalContent.innerHTML = options.content;\n\n\t\treturn modalContent;\n\t}\n\n\n\t/**\n\t * Create modal footer and its buttons\n\t * @param options\n\t * @return {*}\n\t * @private\n\t */\n\tstatic _createFooter(options) {\n\t\t// Do we have footer for modals , create it and buttons\n\t\tif (options.buttons && options.buttons.length > 0) {\n\t\t\tconst footer = document.createElement('div');\n\t\t\tfooter.className = 'footerModal';\n\n\n\t\t\t// create buttons on footer\n\t\t\toptions.buttons.forEach(optionBtn => {\n\t\t\t\t// create button\n\t\t\t\tconst button = document.createElement('div');\n\t\t\t\tbutton.innerHTML = optionBtn.text || '';\n\t\t\t\tbutton.className = `buttonModal ${optionBtn.isOk ? 'isOk' : (optionBtn.notOk ? 'notOk' : '')}`;\n\t\t\t\tbutton.onclick = optionBtn.onclick || (() => {});\n\n\t\t\t\t// add button to footer\n\t\t\t\tfooter.appendChild(button);\n\t\t\t});\n\n\t\t\treturn footer;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/**\n\t * Show modal\n\t * @return {Modal}\n\t */\n\tshow() {\n\t\tif (Helper.isFunction(this.onShow)) {\n\t\t\tthis.onShow();\n\t\t\tdocument.getElementById('container').classList.add('blur');\n\t\t}\n\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Removes modal from page\n\t */\n\tdestroy() {\n\t\tif (this.animate) {\n\t\t\tthis.modal.classList.remove('pulse');\n\t\t\tthis.modal.classList.add('fadeOut');\n\t\t}\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\tdocument.getElementById('container').classList.remove('blur');\n\t\t\t\tif (this.node.parentNode) this.node.parentNode.removeChild(this.node);\n\t\t\t}, (this.animate ? 310 : 0)\n\t\t);\n\t\tif (Helper.isFunction(this.onDestroy)) {\n\t\t\tthis.onDestroy();\n\t\t}\n\t}\n}\n","/**\n * @module\n */\n\n\n/**\n * @class Swipe - Make it easily to manage swipe in devices\n * {@link http://www.javascriptkit.com/javatutors/touchevents2.shtml Library from here}\n * @example :\n *   new Swipe(document.getElementById(\"swipeZone\") , function (direction) {\n *       alert(\"You swiped to : \" + direction + \" side !\");\n *   });\n */\n\nexport default class Swipe {\n\t/**\n     * Make swipe config to\n     * @param element\n     * @param callback\n     * @param config\n     * @return Swipe\n     */\n\tconstructor(element, callback, config) {\n\t\tthis.touchSurface = element;\n\n\t\tconst defaultConfig = {\n\t\t\tthreshold: 100,\n\t\t\trestraint: 100,\n\t\t\tallowedTime: 300,\n\t\t\tonTouchStart: () => {},\n\t\t\twhileTouch: () => {},\n\t\t\tonTouchEnd: () => {}\n\t\t};\n\n\n\t\tconfig = Object.assign(defaultConfig, config);\n\n\t\tthis.threshold = config.threshold; // required min distance traveled to be considered swipe\n\t\tthis.restraint = config.restraint; // maximum distance allowed at the same time in perpendicular direction\n\t\tthis.allowedTime = config.allowedTime; // maximum time allowed to travel that distance\n\t\tthis.handleSwipe = callback || (swipedir => { console.log(swipedir); });\n\n\t\tthis.onTouchStartCallback = config.onTouchStart;\n\t\tthis.whileTouchCallback = config.whileTouch;\n\t\tthis.onTouchEndCallback = config.onTouchEnd;\n\n\t\tthis.buildListeners(element);\n\t\treturn this;\n\t}\n\n\n\t/**\n     * Add touch listeners on element\n     */\n\tbuildListeners() {\n\t\tlet startX, startY, distX, distY, startTime, elapsedTime, swipeDirection;\n\n\n\t\t// listen to touch start\n\t\tthis.touchSurface.addEventListener('touchstart', e => {\n\t\t\tconst touchObject = e.changedTouches[0];\n\t\t\tswipeDirection = 'none';\n\t\t\t// dist = 0;\n\t\t\tstartX = touchObject.pageX;\n\t\t\tstartY = touchObject.pageY;\n\t\t\tstartTime = new Date().getTime(); // record time when finger first makes contact with surface\n\t\t\tSwipe._onTouchStart(this.onTouchStartCallback);\n\t\t\te.preventDefault();\n\t\t}, false);\n\n\n\t\t// listen touch move\n\t\tthis.touchSurface.addEventListener('touchmove', e => {\n\t\t\tSwipe._whileTouch(this.whileTouchCallback);\n\t\t\te.preventDefault(); // prevent scrolling when inside DIV\n\t\t}, false);\n\n\n\t\t// listen touch end\n\t\tthis.touchSurface.addEventListener('touchend', e => {\n\t\t\tconst touchObject = e.changedTouches[0];\n\t\t\tdistX = touchObject.pageX - startX; // get horizontal dist traveled by finger while in contact with surface\n\t\t\tdistY = touchObject.pageY - startY; // get vertical dist traveled by finger while in contact with surface\n\t\t\telapsedTime = new Date().getTime() - startTime; // get time elapsed\n\t\t\tif (elapsedTime <= this.allowedTime) { // first condition for swipe met\n\t\t\t\tif (Math.abs(distX) >= this.threshold && Math.abs(distY) <= this.restraint) { // 2nd condition for horizontal swipe met\n\t\t\t\t\tswipeDirection = (distX < 0)? 'left' : 'right'; // if dist traveled is negative, it indicates left swipe\n\t\t\t\t} else if (Math.abs(distY) >= this.threshold && Math.abs(distX) <= this.restraint) { // 2nd condition for vertical swipe met\n\t\t\t\t\tswipeDirection = (distY < 0)? 'up' : 'down'; // if dist traveled is negative, it indicates up swipe\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.handleSwipe(swipeDirection);\n\t\t\tSwipe._onTouchEnd(this.onTouchEndCallback);\n\t\t\te.preventDefault();\n\t\t}, false);\n\t}\n\n\n\t/**\n     * When user start touch\n     * @param callback\n     * @return {function|null}\n     * @private\n     */\n\tstatic _onTouchStart(callback) {\n\t\treturn callback || (() => {});\n\t}\n\n\n\t/**\n     * While user is touched and moving\n     * @param callback\n     * @return {function|null}\n     * @private\n     */\n\tstatic _whileTouch(callback) {\n\t\treturn callback || (() => {});\n\t}\n\n\t/**\n     * When user finished touch moving\n     * @param callback\n     * @return {function|null}\n     * @private\n     */\n\tstatic _onTouchEnd(callback) {\n\t\treturn callback || (() => {});\n\t}\n\n\t/**\n     * Destroy instance of swipe class\n     */\n\tdestroy() {\n\t\tthis.touchSurface.removeEventListener('touchstart touchmove touchend', () => {}, false);\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Helper from '../Helper';\n\n\n// We'll use this weighted random generator to generate Special characters based on level\nconst RANDOM_GENERATOR = {\n\tLEVEL1: {\n\t\ttype: Helper.weightedRand({\n\t\t\t'star':\t0.11,\n\t\t\t'bomb':\t0.05,\n\t\t\t'skull':\t0.03,\n\t\t\t'regular':\t0.81\n\t\t}),\n\t\tbombSize: Helper.weightedRand({\n\t\t\t'1':\t0.8,\n\t\t\t'2':\t0.2\n\t\t}),\n\t\tskullSize: Helper.weightedRand({\n\t\t\t'1':\t0.7,\n\t\t\t'2':\t0.3\n\t\t})\n\t},\n\tLEVEL2: {\n\t\ttype:\tHelper.weightedRand({\n\t\t\t'star':\t0.05,\n\t\t\t'bomb':\t0.03,\n\t\t\t'skull':\t0.04,\n\t\t\t'regular':\t0.88\n\t\t}),\n\t\tbombSize: Helper.weightedRand({\n\t\t\t'1':\t0.95,\n\t\t\t'2':\t0.05\n\t\t}),\n\t\tskullSize: Helper.weightedRand({\n\t\t\t'1':\t0.2,\n\t\t\t'2':\t0.6,\n\t\t\t'3':\t0.2\n\t\t})\n\t},\n\tLEVEL3: {\n\t\ttype: Helper.weightedRand({\n\t\t\t'star':\t0.02,\n\t\t\t'bomb':\t0.02,\n\t\t\t'skull':\t0.08,\n\t\t\t'regular':\t0.88\n\t\t}),\n\t\tbombSize: Helper.weightedRand({\n\t\t\t'1':\t0.98,\n\t\t\t'2':\t0.02\n\t\t}),\n\t\tskullSize: Helper.weightedRand({\n\t\t\t'2':\t0.5,\n\t\t\t'3':\t0.3,\n\t\t\t'4':\t0.2\n\t\t})\n\t}\n};\n\n\n/**\n * @class Words Helper to choose word and char\n */\nexport default class WordsHelper {\n\n\n\t/**\n\t * Decides if next Char should be Special character and it's attributes based on level\n\t * @param level\n\t * @returns {*}\n\t */\n\tstatic getSpecial(level) {\n\t\tconst levelGenerator\t= RANDOM_GENERATOR[`LEVEL${level}`];\n\t\tconst type\t\t\t\t= levelGenerator.type();\n\t\tif (type==='regular') return 'regular';\n\t\tswitch (type) {\n\t\tcase 'star':\n\t\t\treturn WordsHelper._giveMeAnStar();\n\t\tcase 'bomb':\n\t\t\treturn WordsHelper._giveMeABomb(levelGenerator.bombSize());\n\t\tcase 'skull':\n\t\t\treturn WordsHelper._giveMeAnSkull(levelGenerator.skullSize());\n\t\t}\n\t}\n\n\n\t/**\n\t * Choose random words in game build to work with\n\t */\n\tstatic chooseWord() {\n\n\t\tconst initValues = TetrisGame.initValues;\n\t\tconst key = initValues.comingWordIndex;\n\t\tconst value = window.TetrisWords[key] || '';\n\n\n\n\t\t// do we finished words\n\t\tif (value === '' ) {\n\t\t\treturn false;\n\t\t}\n\n\n\t\t// normalize word chars\n\t\tif (window.lang.name === 'ja') {\n\t\t\tvalue.word = value.word.replace(/[\\x00-\\x7F]/g, '');\n\t\t} else {\n\t\t\tvalue.word = value.word.replace(/[^A-Za-zآابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]/g, '');\n\t\t}\n\n\t\t// use lower case of characters\n\t\tif (TetrisGame.config.useLowercase) {\n\t\t\tvalue.word = value.word.toLowerCase();\n\t\t}\n\n\n\t\t// add word to active words array\n\t\tinitValues.choosedWords.push(value);\n\n\t\tTetrisGame.showShuffledWords();\n\n\t\tinitValues.comingWordIndex++;\n\n\t\tHelper.log(value);\n\t\treturn value;\n\t}\n\n\n\t/**\n\t * Choose a char of choosed words\n\t */\n\tstatic chooseChar() {\n\t\tconst initValues\t= TetrisGame.initValues;\n\t\tconst config\t\t= TetrisGame.config;\n\t\tlet choosedWord,choosedChar,index;\n\n\t\tif (config.enable_special_characters) {\n\t\t\t// Dont bomb empty field :|\n\t\t\tif (TetrisGame.matrix.filledCharacters > 1) {\n\t\t\t\tconst decider = WordsHelper.getSpecial(config.level);\n\t\t\t\tif(decider !== 'regular'){\n\t\t\t\t\treturn decider;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tfor(index = 0 ; index < initValues.choosedWords.length;index++) {\n\t\t\tif(!initValues.choosedWords[index].finished){\n\t\t\t\tchoosedWord = initValues.choosedWords[index];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet availableChars = choosedWord ? (choosedWord.word || '') : '';\n\n\t\t// remove used chars for this choosed word\n\t\tinitValues.choosedWordsUsedChars.forEach(value => {\n\t\t\tavailableChars = availableChars.replace(value, '');\n\t\t});\n\n\n\n\t\tif (availableChars.length === 0) {\n\n\t\t\t// if game is finished\n\t\t\tif(initValues.wordsFinished) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\n\t\t\t// mark word as finished\n\t\t\tif(TetrisGame.initValues.choosedWords[index]) {\n\t\t\t\tTetrisGame.initValues.choosedWords[index].finished = true;\n\t\t\t}\n\n\t\t\t// reset user chars for this word\n\t\t\tTetrisGame.initValues.choosedWordsUsedChars = [];\n\n\t\t\t// get new word and show it\n\t\t\tconst newWord = this.chooseWord();\n\t\t\tif (newWord === false && initValues.choosedWords.length === index) {\n\t\t\t\tTetrisGame.initValues.wordsFinished = true;\n\t\t\t\tconsole.log(\"RAN OUT OF WORDS\");\n\t\t\t}else{\n\t\t\t\tTetrisGame.showShuffledWords();\n\t\t\t\treturn this.chooseChar();\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tchoosedChar = availableChars.split('').sort(() => {return 0.5 - Math.random()}).pop();\n\t\t\tTetrisGame.initValues.choosedWordsUsedChars.push(choosedChar);\n\t\t\treturn choosedChar;\n\t\t}\n\t}\n\n\n\n\n\t/**\n\t * Be careful! It'll give you a bomb\n\t * @param size {Number} - size of bomb\n\t * @returns {HTMLImageElement} (Actually it's a bomb)\n\t */\n\tstatic _giveMeABomb(size) {\n\t\tHelper.log(`BombSize: ${size}`);\n\t\tconst bombCharacter = document.createElement('img');\n\t\tbombCharacter.src = '/assets/img/bomb.gif';\n\t\tbombCharacter.className = 'bomb';\n\t\tbombCharacter.dataset.size = size.toString();\n\t\tbombCharacter.typeSize = size;\n\t\tbombCharacter.type = 'bomb';\n\t\tbombCharacter.special = 'true';\n\t\treturn bombCharacter;\n\t}\n\n\n\t/**\n\t * Gives us an skull character\n\t * @param clickCount\n\t * @return {HTMLElement}\n\t */\n\tstatic _giveMeAnSkull(clickCount) {\n\t\tHelper.log(`Skull click needs: ${clickCount}`);\n\t\tconst skullCharacter = document.createElement('i');\n\t\tskullCharacter.className = 'skull animated icon-skelete';\n\t\tskullCharacter.dataset.clicks = clickCount;\n\t\tskullCharacter.type = 'skull';\n\t\tskullCharacter.special = 'true';\n\t\treturn skullCharacter;\n\t}\n\n\n\t/**\n\t * Gives us an Start character which matches any thing\n\t * @return {HTMLElement}\n\t */\n\tstatic _giveMeAnStar() {\n\t\tHelper.log(`An Start is coming`);\n\t\tconst starCharacter = document.createElement('i');\n\t\tstarCharacter.className = 'star animated icon-star';\n\t\tstarCharacter.type = 'star';\n\t\tstarCharacter.special = 'true';\n\t\treturn starCharacter;\n\t}\n\n}\n","/**\n * @module\n */\n\n\n/**\n *\n * @class MapStack\n *\n * @property map {Map} - Holds a map for implementing MapStack\n * This class is a wrapper for Map with an additional method to append to Map\n * Since extending built-in classes is not supported, We'll have to create a wrapper\n */\nexport default class MapStack {\n\n\tconstructor() {\n\t\tthis.map = new Map();\n\t}\n\n\t/**\n     *  If key exists, It'll append to array with given key\n     *  Otherwise, It'll create object with given key and push value as array\n     * @param key {Object}\n     * @param value {Object}\n     */\n\tappend(key, value) {\n\t\tif (this.map.has(key)) this.map.get(key).push(value);\n\t\telse this.map.set(key, [value]);\n\t}\n\n\t/**\n\t * Gets all values of MapStack\n\t * @returns {IterableIterator}\n\t */\n\tentries() {\n\t\treturn this.map.entries();\n\t}\n\n\n\t/**\n\t * Merges another mapStack items to this istance\n\t * @param mapStack\n\t */\n\tmerge(mapStack) {\n\t\tfor (const [key, value] of mapStack.entries()) {\n\t\t\tthis.append(key, value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Pops a group of a key\n\t * @returns {*}\n\t */\n\tpopItems() {\n\t\tfor (const [key, value] of this.map.entries()) { // Since it's a generator, it's not performance killer\n\t\t\tconst anItemOfAnyX = value;\n\t\t\tthis.map.delete(key);\n\t\t\treturn anItemOfAnyX;\n\t\t}\n\t\t// If we reached here, Map is Empty\n\t\treturn false;\n\t}\n\n\t/**\n\t * Pop's an item from start of array\n\t * @returns {*}\n\t */\n\tpopItem() {\n\t\tlet entries =  this.map.entries();\n\t\tif(entries.length === 0)\n\t\t\treturn false;\n\t\tfor (let [key, value] of entries) { // Since it's a generator, it's not performance killer\n\t\t\tconst anItemOfAnyX = value.pop();\n\t\t\tif(typeof anItemOfAnyX ==='undefined'){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (value.length === 0) {\n\t\t\t\tthis.map.delete(key);\n\t\t\t}\n\t\t\treturn anItemOfAnyX;\n\t\t}\n\t\t// If we reached here, Map is Empty\n\t\treturn false;\n\t}\n\n\n\t// Optimize\n\treduce() {\n\t\t// TODO: IDK :| xD\n\t}\n}\n","/**\n * @module\n */\n\nimport Helper from './Helper';\nimport MapStack from './MapStack';\n\n\n// Different states\nconst\n\tIS_NOT_VALID=-1,\n\tIS_EMPTY=-2,\n\tIS_OK = -3;\n\n// Special types names\nconst\n\tCHARBLOCK_TYPE_BOMB\t\t= 'bomb',\n\tCHARBLOCK_TYPE_SKULL\t= 'skull',\n\tCHARBLOCK_TYPE_STAR\t\t= 'star';\n\n// Special types value\nconst\n\tSKULL_VALUE\t= '-',\n\tSTAR_VALUE\t= '*';\n\n\n\n/**\n *\n * @class Matrix\n * This class will hold values of characters, find successful created words, delete them and etc\n */\n\nexport default class Matrix {\n\t/**\n\t * @param matrix {Array} Matrix of characters\n\t * @property matrix {Array} Matrix of characters\n\t * @property width {Number} - Width of matrix\n\t * @property height {Number} - Height of matrix\n\t * @property filledCharacters {Number} - Get's approximated count of chars stored in matrix\n\t * @example\n\t *  let matrix = new Matrix([[' ',' ',' ',' '],\n\t *      [' ',' ',' ',' '],\n\t *      [' ',' ',' ',' '],\n\t *      [' ',' ',' ',' ']]\n\t *  );\n\t */\n\tconstructor(matrix) {\n\t\tthis.matrix = matrix;\n\t\tthis.height = matrix.length;\n\t\tthis.width = matrix[0].length;\n\t\tthis.filledCharacters = 0;\n\t}\n\n\n\t/**\n\t * Set character on matrix\n\t * @param y {Number} - Column of matrix\n\t * @param x {Number} - Row of matrix\n\t * @param char {String} - Character to place in matrix\n\t */\n\tsetCharacter(y, x, char) {\n\t\tthis.matrix[y][x] = char;\n\t\tthis.filledCharacters++;\n\t}\n\n\n\t/**\n\t * Deletes a single cell in Matrix\n\t * @param y {Number} - Column of matrix\n\t * @param x {Number} - Row of matrix\n\t */\n\tfastDeleteCharacter(y, x) {\n\t\tthis.matrix[y][x]= ' ';\n\t\tthis.filledCharacters--;\n\t}\n\n\n\t/**\n\t * Deletes a single cell in Matrix safely\n\t * @param y {Number}\n\t * @param x  {Number}\n\t */\n\tsafeDeleteCharacter(y, x) {\n\t\t// If character is out of matrix size or empty, don't do anything\n\t\tif (!this.isValidPosition(y, x)) return IS_NOT_VALID;\n\t\telse if (this.isEmpty(y, x)) return IS_EMPTY;\n\t\tthis.fastDeleteCharacter(y, x);\n\t\treturn IS_OK;\n\t}\n\n\n\t/**\n\t * Checks if a position is valid in our matrix\n\t * @param y {Number} - Row ID of character\n\t * @param x {Number} - Column ID of character\n\t */\n\tisValidPosition(y, x) {\n\t\treturn !(y<0 ||y >= this.height || x<0 || x>=this.width);\n\t}\n\n\t/**\n\t * Checks if character is Empty\n\t * @param y {Number} - Row ID of character\n\t * @param x {Number} - Column ID of character\n\t * @returns {boolean} - Returns true if character is empty\n\t */\n\tisEmpty(y, x) {\n\t\tif(typeof y !=='undefined' && typeof x !=='undefined')\n\t\t\treturn this.matrix[y][x] === ' ';\n\t\treturn false;\n\t}\n\n\t/**\n\t * Gets a character at position\n\t * @param y {Number} - Row ID of character\n\t * @param x {Number} - Column ID of character\n\t * @returns {String}\n\t */\n\tgetCharacter(y, x) {\n\t\treturn this.matrix[y][x];\n\t}\n\n\t/**\n\t * Checks if character is Empty\n\t * @param y {Number} - Row ID of character\n\t * @param x {Number} - Column ID of character\n\t * @returns {boolean} - Returns true if character is empty\n\t */\n\tisNotEmpty(y, x) {\n\t\treturn !this.isEmpty(y, x);\n\t}\n\n\n\t/**\n\t * Check word happens\n\t * @param {String[]} words - To search in strings\n\t * @param {Object} lastChar - Last character that has been set\n\t * @param {CheckTypes} checkType to search for strings in matrix from x,y point can have any of these values: L|R|T|D\n\t * @param {Function} successCallback - Returns founded characters, Falling characters and\n\t */\n\tcheckWords(words, lastChar, checkType, successCallback) {\n\t\tthis.lastChar = lastChar;\n\n\t\tconst\n\t\t\trowId = lastChar.row,\n\t\t\tcolId = lastChar.column,\n\t\t\tchar = lastChar.char;\n\n\t\tif (lastChar.type\t&& lastChar.type\t!==\t'regualar') {\n\t\t\tswitch (lastChar.type) {\n\t\t\tcase CHARBLOCK_TYPE_BOMB:\n\t\t\t\tthis._explode(rowId, colId, lastChar.typeSize, successCallback);\n\t\t\t\treturn;\n\t\t\tcase CHARBLOCK_TYPE_SKULL:\n\t\t\t\tthis._setSkull(rowId, colId, successCallback);\n\t\t\t\treturn;\n\t\t\tcase CHARBLOCK_TYPE_STAR: // If type is START, we should search for possible words\n\t\t\t\tthis._setStar(rowId, colId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setCharacter(rowId, colId, char);\n\t\t}\n\t\t// const railingCharsObject = this._getRailingChars(rowId, colId);\n\t\t// const\n\t\t// \trights\t=\trailingCharsObject.rights,\n\t\t// \tlefts\t=\trailingCharsObject.lefts,\n\t\t// \ttops\t=\trailingCharsObject.tops,\n\t\t// \tdowns\t=\trailingCharsObject.downs;\n\t\tconst rights = this._getRailingChars(rowId, colId, 'R');\n\t\tconst lefts = this._getRailingChars(rowId, colId, 'L');\n\t\tconst tops = this._getRailingChars(rowId, colId, 'T');\n\t\tconst downs = this._getRailingChars(rowId, colId, 'D');\n\n\t\tconst sentenceLTR = (lefts.chars + this.matrix[rowId][colId] + rights.chars); // Create valid sentence from left characters + current character + right characters\n\t\tconst sentenceTTD = (tops.chars + this.matrix[rowId][colId] + downs.chars); // Create valid sentence from left characters + current character + right characters\n\t\tconst sentenceRTL = (Helper.reverse(sentenceLTR)); // Reverse it to using custom reverse to support UNICODE characters\n\t\tconst sentenceDTT = (Helper.reverse(sentenceTTD));\n\t\tlet isAnyWordFounded = false;\n\n\t\t/**\n\t\t * This part of code is new and so it's a little dirty\n\t\t * Since STAR character is challenging, Before start processing words,\n\t\t * We'll check to see if there is any STAR characters our matrix.\n\t\t * If we found any, We'll use our custom skippableIndexOf to find words with STAR.\n\t\t * If there wasn't any, We'll use the regular string.indexOf function.\n\t\t * There would be some duplicate codes, But for now we need performance!\n\t\t * TODO: Merge duplicate codes in prepossessing phase, Define extra function to clean the code\n\t\t */\n\n\t\tHelper.log(this.matrix);\n\t\tlet needStarSearchHorizontaly\t=\tfalse,\n\t\t\tneedStarSearchVertically\t=\tfalse;\n\n\t\tif (checkType.ltr || checkType.rtl) {\n\t\t\tneedStarSearchHorizontaly\t= sentenceLTR.includes(STAR_VALUE);\n\t\t}\n\t\tif (checkType.ttd || checkType.dtt) {\n\t\t\tneedStarSearchVertically\t= sentenceTTD.includes(STAR_VALUE);\n\t\t}\n\n\t\t// This part has duplicate codes, referse to top TODO on line 179\n\t\tif (needStarSearchHorizontaly || needStarSearchVertically) {\n\t\t\tfor (let i = 0, len = words.length; i < len; i++) {\n\t\t\t\tif (!words[i]) continue;\n\t\t\t\tlet pos,\n\t\t\t\t\tcheckPlace,\n\t\t\t\t\tstartFrom;\n\t\t\t\tconst word = words[i].word;\n\n\t\t\t\tif (checkType.ltr && (pos = Helper.skippableIndexOf(sentenceLTR, word, STAR_VALUE)) !== -1) {\n\t\t\t\t\tHelper.log(`LTR--> Found valid word:${word} In:${sentenceLTR}`);\n\t\t\t\t\tstartFrom = colId - lefts.len + pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tltr: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.rtl && (pos = Helper.skippableIndexOf(sentenceRTL, word, STAR_VALUE)) !== -1) {\n\t\t\t\t\tHelper.log(`RTL--> Found valid word:${word} In:${sentenceRTL}`);\n\t\t\t\t\tstartFrom = colId + rights.len - pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\trtl: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.ttd && (pos = Helper.skippableIndexOf(sentenceTTD, word, STAR_VALUE)) !== -1) {\n\t\t\t\t\tHelper.log(`TTD--> Found valid word:${word} In:${sentenceTTD}`);\n\t\t\t\t\tstartFrom = rowId - tops.len + pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tttd: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.dtt && (pos = Helper.skippableIndexOf(sentenceDTT, word, STAR_VALUE)) !== -1) {\n\t\t\t\t\tHelper.log(`DTT--> Found valid word:${word} In:${sentenceDTT}`);\n\t\t\t\t\tstartFrom = rowId + downs.len - pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tdtt: true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (isAnyWordFounded) {\n\t\t\t\t\tthis._deleteCharacters(rowId, colId, i, checkPlace, startFrom, word.length, successCallback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0, len = words.length; i < len; i++) {\n\t\t\t\tif (!words[i]) continue;\n\t\t\t\tlet pos,\n\t\t\t\t\tcheckPlace,\n\t\t\t\t\tstartFrom;\n\t\t\t\tconst word = words[i].word;\n\n\t\t\t\tif (checkType.ltr && (pos = sentenceLTR.indexOf(word)) !== -1) {\n\t\t\t\t\tHelper.log(`LTR--> Found valid word:${word} In:${sentenceLTR}`);\n\t\t\t\t\tstartFrom = colId - lefts.len + pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tltr: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.rtl && (pos = sentenceRTL.indexOf(word)) !== -1) {\n\t\t\t\t\tHelper.log(`RTL--> Found valid word:${word} In:${sentenceRTL}`);\n\t\t\t\t\tstartFrom = colId + rights.len - pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\trtl: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.ttd && (pos = sentenceTTD.indexOf(word)) !== -1) {\n\t\t\t\t\tHelper.log(`TTD--> Found valid word:${word} In:${sentenceTTD}`);\n\t\t\t\t\tstartFrom = rowId - tops.len + pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tttd: true\n\t\t\t\t\t};\n\t\t\t\t} else if (checkType.dtt && (pos = sentenceDTT.indexOf(word)) !== -1) {\n\t\t\t\t\tHelper.log(`DTT--> Found valid word:${word} In:${sentenceDTT}`);\n\t\t\t\t\tstartFrom = rowId + downs.len - pos;\n\t\t\t\t\tisAnyWordFounded = true;\n\t\t\t\t\tcheckPlace = {\n\t\t\t\t\t\tdtt: true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (isAnyWordFounded) {\n\t\t\t\t\tthis._deleteCharacters(rowId, colId, i, checkPlace, startFrom, word.length, successCallback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!isAnyWordFounded) {\n\t\t\t// No word has been found, call the callback, without param\n\t\t\tsuccessCallback(this.lastChar);\n\t\t}\n\t}\n\n\n\t/**\n\t * @typedef {Object} RailingChars\n\t * @property {Number} len  - Length to show how much did we walked in each direction to either reach to border or whiteSpace\n\t * @property {String} chars - String which shows which chars did we found\n\t */\n\n\t/**\n\t * This function will iterate over All directions at Top,Down,Right and left. Then returns railing characters with their len\n\t * @return {railingCharsObject}\n\t * @param {Number} y - Index of row in matrix\n\t * @param {Number} x - Index of column in matrix\n\t */\n\t// _getRailingChars(y, x) {\n\t// \tconst railingCharsObject={};\n\t// \tlet i, railingChars, len;\n\t// \t// Go in Right direction\n\t// \t// i starts with 1 because we dont want the current character\n\t// \t// This loop will go to right until it reaches the border OR next character isEmpty\n\t// \t// Rest of cases are just like this method but with differnt direction\n\t// \tfor (i=1, railingChars='', len=0; i+x<this.width && this.isNotEmpty(y, i+x); i++) {\n\t// \t\trailingChars+=this.matrix[y][i+x];\n\t// \t\tlen++;\n\t// \t}\n\t// \trailingCharsObject.rights = { chars: railingChars, len };\n\t//\n\t// \tfor (i=1, railingChars='', len=0; x-i>=0 && this.isNotEmpty(y, x-i); i++) {\n\t// \t\trailingChars=this.matrix[y][x-i] + railingChars;\n\t// \t\tlen++;\n\t// \t}\n\t// \trailingCharsObject.lefts = { chars: railingChars, len };\n\t//\n\t// \tfor (i=1, railingChars='', len=0; y-i>=0 && this.isNotEmpty(y-i, x); i++) {\n\t// \t\trailingChars+=this.matrix[y-i][x];\n\t// \t\tlen++;\n\t// \t}\n\t// \trailingCharsObject.tops = { chars: railingChars, len };\n\t//\n\t// \tfor (i=1, railingChars='', len=0; y+i<this.height && this.isNotEmpty(y+i, x); i++) {\n\t// \t\trailingChars+=this.matrix[y+i][x];\n\t// \t\tlen++;\n\t// \t}\n\t// \trailingCharsObject.downs = { chars: railingChars, len };\n\t// \treturn railingCharsObject;\n\t// }\n\n\n\t/**\n\t * @return {RailingChars}\n\t * @param {Number} y - Index of row in matrix\n\t * @param {Number} x - Index of column in matrix\n\t * @param {String} direction to search for strings in matrix from x,y point can have any of these values: L|R|T|D\n\t */\n\t_getRailingChars(y, x, direction) {\n\t\tlet railingChars='';// Found characters in each directions\n\t\tlet len=0;// Determines how much did we move in each direction to get to space or end of direction\n\n\t\tlet i=1;// it is just the iterator in loops\n\t\tswitch (direction) {\n\t\tcase 'R':\n\t\t\t// Go in Right direction\n\t\t\t// i starts with 1 because we dont want the current character\n\t\t\t// This loop will go to right until it reaches the border OR next character is ' '\n\t\t\t// Rest of cases are just like this method but with differnt direction\n\t\t\t// from=1+x;\n\t\t\tfor (i=1; i+x<this.width && this.isNotEmpty(y, i+x); i++) {\n\t\t\t\trailingChars+=this.matrix[y][i+x];\n\t\t\t\tlen++;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tfor (i=1; x-i>=0 && this.isNotEmpty(y, x-i); i++) {\n\t\t\t\trailingChars=this.matrix[y][x-i] + railingChars;\n\t\t\t\tlen++;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'T':\n\t\t\tfor (i=1; y-i>=0 && this.isNotEmpty(y-i, x); i++) {\n\t\t\t\trailingChars+=this.matrix[y-i][x];\n\t\t\t\tlen++;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tfor (i=1; y+i<this.height && this.isNotEmpty(y+i, x); i++) {\n\t\t\t\trailingChars+=this.matrix[y+i][x];\n\t\t\t\tlen++;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\treturn {\n\t\t\tchars: railingChars,\n\t\t\tlen\n\t\t};\n\t}\n\n\n\t/**\n\t * @typedef {Object} CheckTypes - An object representing in which direction should function search for words\n\t * @property {Boolean} rtl - Determines if should check Right To Left direction\n\t * @property {Boolean} ltr - Determines if should check Left To Right direction\n\t * @property {Boolean} ttd - Determines if should check Top To Down direction\n\t * @property {Boolean} dtt - Determines if should check Down To Top direction\n\t */\n\n\t/**\n\t * Delete characters from matrix\n\t * @param rowId {Number} - Row id of last checking character in matrix\n\t * @param colId {Number} - col id of last checking character in matrix\n\t * @param wordId {Number} - Id of founded word\n\t * @param checkType {CheckTypes} - An checkType Object to find direction\n\t * @param occurancePositionFrom {Number} - Start position of word\n\t * @param occurancePositionLenght {Number} - Length of word\n\t * @param successCallBack {Function} - Function to callback when foundWord and Falling words has been found\n\t */\n\t_deleteCharacters(rowId, colId, wordId, checkType, occurancePositionFrom, occurancePositionLenght, successCallBack) {\n\t\t// Determines if we need to store date to call the callback function if it exists\n\t\tconst hasCallback = Helper.isFunction(successCallBack);\n\n\n\t\tconst callbackObject = {\n\t\t\twordId,\n\t\t\twordCharacterPositions: [], // Array of {x,y}\n\t\t\tfallingCharacters: new MapStack(), // Array of {oldX,oldY,newX,newY}\n\t\t\tdirection: Object.keys(checkType)[0]\n\t\t};\n\n\t\tif (checkType.ltr) {\n\t\t\t// Clear characters in matrix\n\t\t\tfor (let c=0, i = occurancePositionFrom; i<occurancePositionFrom+occurancePositionLenght; i++, c++) {\n\t\t\t\tthis.fastDeleteCharacter(rowId, i);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.wordCharacterPositions.push({ y: rowId, x: i });\n\t\t\t\t}\n\n\t\t\t\t// Move upper blocks to bottom\n\t\t\t\tfor (let upIndex=rowId; this.isNotEmpty(upIndex-1, i) && upIndex>=0; upIndex--) {\n\t\t\t\t\tthis.matrix[upIndex][i] = this.matrix[upIndex-1][i];\n\t\t\t\t\tthis.fastDeleteCharacter(upIndex-1, i);\n\t\t\t\t\tif (hasCallback) {\n\t\t\t\t\t\tcallbackObject.fallingCharacters.append(i, { x: i, oldY: upIndex-1, newY: upIndex });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (checkType.rtl) {\n\t\t\t// Clear characters in matrix\n\t\t\tfor (let c=0, i=occurancePositionFrom; i>occurancePositionFrom-occurancePositionLenght; --i, ++c) {\n\t\t\t\tthis.fastDeleteCharacter(rowId, i);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.wordCharacterPositions.push({ y: rowId, x: i });\n\t\t\t\t}\n\n\n\t\t\t\t// Move upper blocks to bottom\n\t\t\t\tfor (let upIndex=rowId; this.isNotEmpty(upIndex-1, i) && upIndex>=0; upIndex--) {\n\t\t\t\t\tthis.matrix[upIndex][i] = this.matrix[upIndex-1][i];\n\t\t\t\t\tthis.fastDeleteCharacter(upIndex-1, i);\n\t\t\t\t\tif (hasCallback) {\n\t\t\t\t\t\tcallbackObject.fallingCharacters.append(i, { x: i, oldY: upIndex-1, newY: upIndex });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (checkType.ttd) {\n\t\t\tfor (let c=0, i = occurancePositionFrom; i<occurancePositionFrom+occurancePositionLenght; i++, c++) {\n\t\t\t\tthis.fastDeleteCharacter(i, colId);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.wordCharacterPositions.push({ y: i, x: colId });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move upper blocks to bottom\n\t\t\tfor (let upIndex=occurancePositionFrom-occurancePositionLenght; upIndex>0 && this.isNotEmpty(upIndex-1, colId); upIndex--) {\n\t\t\t\tthis.matrix[upIndex+occurancePositionLenght-1][colId] = this.matrix[upIndex-1][colId];\n\t\t\t\tthis.fastDeleteCharacter(upIndex-1, colId);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.fallingCharacters.append(colId, { x: colId, oldY: upIndex-1, newY: upIndex+occurancePositionLenght-1 });\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (checkType.dtt) {\n\t\t\tfor (let c=0, i=occurancePositionFrom; i>occurancePositionFrom-occurancePositionLenght; --i, ++c) {\n\t\t\t\tthis.fastDeleteCharacter(i, colId);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.wordCharacterPositions.push({ y: i, x: colId });\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Move upper blocks to bottom\n\t\t\tfor (let upIndex=occurancePositionFrom; upIndex-occurancePositionLenght>=0 &&this.isNotEmpty(upIndex-occurancePositionLenght, colId); upIndex--) {\n\t\t\t\tthis.matrix[upIndex-occurancePositionLenght][colId] = this.matrix[upIndex][colId];\n\t\t\t\tthis.fastDeleteCharacter(upIndex, colId);\n\t\t\t\tif (hasCallback) {\n\t\t\t\t\tcallbackObject.fallingCharacters.append(colId, { x: colId, oldY: upIndex, newY: upIndex-occurancePositionLenght });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuccessCallBack(this.lastChar, callbackObject);\n\t}\n\n\n\t/**\n\t * Explodes area near a bomb character\n\t * @param rowID {Number} - Row id of bomb\n\t * @param colID {Number} - Column id of bomb\n\t * @param power {Number} - Power of bomb to explode chars near it\n\t * @param successCallBack {function} - Callback function\n\t */\n\t_explode(rowID, colID, power, successCallBack) {\n\t\tconst callbackObject = {\n\t\t\texplodedChars: [{ y: rowID, x: colID }],\n\t\t\tfallingCharacters: new MapStack()\n\t\t};\n\n\t\tfor (let startX = -power, xPos=colID+startX; startX <= power && xPos < this.width; startX++, xPos++) {\n\t\t\tlet firstNonEmptyCharacterOnTopYIndex = IS_NOT_VALID;\n\t\t\tif (this.isValidPosition(rowID-power-1, xPos) && this.isNotEmpty(rowID-power-1, xPos)) {\n\t\t\t\tfirstNonEmptyCharacterOnTopYIndex = rowID-power-1;\n\t\t\t}\n\n\t\t\tfor (let startY = -power, yPos = startY+rowID; startY <= power && yPos < this.height; startY++, yPos++) {\n\t\t\t\t// if(xPos===colID)\n\t\t\t\t//     continue; // This block is where bomb has been placed, So we should check it's Ups\n\t\t\t\tconst characterDeleteResult = this.safeDeleteCharacter(yPos, xPos);\n\n\t\t\t\tif (characterDeleteResult === IS_OK) {\n\t\t\t\t\t// Add Deleted chars\n\t\t\t\t\tcallbackObject.explodedChars.push({ y: yPos, x: xPos });\n\t\t\t\t}\n\t\t\t\tif (startY === power || yPos+1 === this.height) { // Last Row\n\t\t\t\t\tif (firstNonEmptyCharacterOnTopYIndex === IS_NOT_VALID) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// We've reached end of columns\n\t\t\t\t\t// Move upper blocks to Bottom\n\t\t\t\t\t// callbackObject.fallDownCharacters.push()\n\t\t\t\t\tconst occurancePositionLenght = yPos - firstNonEmptyCharacterOnTopYIndex;\n\t\t\t\t\tfor (let upIndex=yPos; upIndex-occurancePositionLenght>=0 && this.isNotEmpty(upIndex-occurancePositionLenght, xPos); upIndex--) {\n\t\t\t\t\t\tthis.matrix[upIndex][xPos] = this.matrix[upIndex-occurancePositionLenght][xPos];\n\t\t\t\t\t\tthis.fastDeleteCharacter(upIndex-occurancePositionLenght, xPos);\n\t\t\t\t\t\tcallbackObject.fallingCharacters.append(xPos, { x: xPos, oldY: upIndex-occurancePositionLenght, newY: upIndex });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tsuccessCallBack(this.lastChar, callbackObject);\n\t}\n\n\t/**\n\t *\n\t * @param rowId\n\t * @param colId\n\t * @param successCallback\n\t * @private\n\t */\n\t_setSkull(y, x, successCallback) {\n\t\tthis.setCharacter(y, x, SKULL_VALUE);\n\t\tif (Helper.isFunction(successCallback)) {\n\t\t\tsuccessCallback(this.lastChar);\n\t\t}\n\t}\n\n\t/**\n\t * Sets Star value in matrix\n\t * @param y\n\t * @param x\n\t * @private\n\t */\n\t_setStar(y, x) {\n\t\tHelper.log('Setting the star');\n\t\tthis.setCharacter(y, x, STAR_VALUE);\n\t\tHelper.log(this.matrix);\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Storage from '../Storage';\nimport Modal from '../Modal';\nimport Helper from '../Helper';\nimport Timeout from '../Timeout';\nimport Gameplay from './Gameplay';\n\n\n/**\n * @class Settings to show and set game settings\n */\n\nexport default class ScoreHandler {\n\t/**\n     * Display score submiter modal and let user submit his score\n     * @param gamingInfo\n     * @param showScore\n     * @param gamingTime\n     */\n\tstatic submit(gamingInfo, showScore, gamingTime) {\n\t\tconst config = TetrisGame.config;\n\t\tconst submitScoreContent = `\n            <div class=\"submitScore\">\n                <input type=\"text\" name=\"enterName\" id=\"enterName\" placeholder=\"${window.lang.enterName}\" />\n                ${gamingInfo}\n            </div>\n        `;\n\n\t\t// show new modal to submit score\n\t\tconst submitScore = new Modal({\n\t\t\tanimate: config.useAnimationFlag,\n\t\t\tdark: config.colorMode,\n\t\t\ttype: 'primary',\n\t\t\theader: window.lang.submitScore,\n\t\t\tcontent: submitScoreContent,\n\t\t\tonShow: () => {\n\t\t\t    // focus on name input\n\t\t\t    Helper._('#enterName', submitScore.modal).focus();\n\t\t\t},\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: window.lang.saveScore,\n\t\t\t\t\tisOk: true,\n\t\t\t\t\tonclick() {\n\t\t\t\t\t\tsubmitScore.destroy();\n\t\t\t\t\t    ScoreHandler._saveScore({\n\t\t\t\t\t\t\tuserName: Helper._('#enterName', submitScore.modal).value || '--',\n\t\t\t\t\t\t\tscore: showScore,\n\t\t\t\t\t\t\ttime: gamingTime\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttext: window.lang.restartGame,\n\t\t\t\t\tisOk: true,\n\t\t\t\t\tonclick() {\n\t\t\t\t\t\tsubmitScore.destroy();\n\t\t\t\t\t\tGameplay.restart();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}, window.lang.rtl);\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\t// show submit score modal\n\t\t\t\tsubmitScore.show();\n\t\t\t}, 1000\n\t\t);\n\t}\n\n\n\t/**\n     * Show scores modal\n     */\n\tstatic showScores() {\n\t\tconst config = TetrisGame.config;\n\t\tconst submitted = ScoreHandler._getSubmitted('sort');\n\n\t\tlet content = '<div class=\"scoresTable\">';\n\t\tif (submitted.length > 0) {\n\t\t\tsubmitted.forEach(item => {\n\t\t\t\tcontent += `<div class=\"scoreRow\">\n                <div class=\"userName\">${item.userName}</div>\n                <div class=\"scoreAmount\">${item.score}</div>\n                <div class=\"timeValue\">${item.time}</div>\n            </div>`;\n\t\t\t});\n\t\t} else {\n\t\t\tcontent += `<div class=\"scoreRow\">${window.lang.noSubmittedScore}</div>`;\n\t\t}\n\t\tcontent += '</div>';\n\n\t\t// show scores list modal\n\t\tconst submitScore = new Modal({\n\t\t\tanimate: config.useAnimationFlag,\n\t\t\tdark: config.colorMode,\n\t\t\ttype: 'info',\n\t\t\theader: window.lang.last10Record,\n\t\t\tcontent,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\ttext: window.lang.modalOkButton,\n\t\t\t\t\tisOk: true,\n\t\t\t\t\tonclick() {\n\t\t\t\t\t\tsubmitScore.destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}, window.lang.rtl);\n\t\tsubmitScore.show();\n\t}\n\n\n\t/**\n     * Save user gained score\n     * @private\n     */\n\tstatic _saveScore(scoreData) {\n\t\tconst config = TetrisGame.config;\n\t\tlet submitted = ScoreHandler._getSubmitted();\n\n\t\t// we just hold 10 last scores\n\t\tsubmitted = submitted.slice(-9);\n\t\tsubmitted.push(scoreData);\n\t\tStorage.setObject(`scores_${window.lang.name}`, submitted);\n\n\n\t\t// show success message\n\t\tconst submitScoreResult = new Modal({\n\t\t\tanimate: config.useAnimationFlag,\n\t\t\tdark: config.colorMode,\n\t\t\tonShow: () => {\n\t\t\t\tTimeout.request(\n\t\t\t\t\t() => { submitScoreResult.destroy(); }, 2000\n\t\t\t\t);\n\t\t\t},\n\t\t\theader: window.lang.saveOperation,\n\t\t\tcontent: window.lang.saveOperationDone\n\t\t}, window.lang.rtl);\n\n\t\tsubmitScoreResult.show();\n\t}\n\n\n\t/**\n     * Get submitted scores\n     * @param sort\n     * @return {string|*}\n     */\n\tstatic _getSubmitted(sort) {\n\t\tconst scores = Storage.getObject(`scores_${window.lang.name}`, []);\n\t\tif (sort) {\n\t\t    scores.sort((a, b) => {\n\t\t\t\treturn parseInt(b.score) - parseInt(a.score);\n\t\t\t});\n\t\t}\n\n\t\treturn scores;\n\t}\n\n\n\t/**\n     * Get score of user from Storage\n     * @returns {number}\n     */\n\tstatic _getScore() {\n\t\tlet score;\n\t\tif (TetrisGame.config.do_encryption) {\n\t\t\tscore = Storage.getEncrypted('score', TetrisGame.initValues.encryptionKey);\n\t\t} else {\n\t\t\tscore = Storage.getInt('score', 0);\n\t\t}\n\t\treturn score;\n\t}\n\n\n\t/**\n     * Updates stats of game\n     * @param word\n     * @param direction\n     */\n\tstatic _updateStats(word, direction) {\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\t// Update stats related to word\n\t\tif (direction!=='exploded') {\n\t\t\tinitValues.wordsFounded++;\n\t\t\tinitValues.wordsLengthTotal += word.length;\n\t\t}\n\t\tinitValues.wordDirectionCounter[direction]++;\n\n\t\tHelper._('.wordCounterHolder').innerHTML = Math.round(initValues.wordsFounded);\n\t}\n\n\n\t/**\n     * Update game score in UI and Data\n     * @param word\n     * @private\n     */\n\tstatic _updateScore(word) {\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\t// Get encrypted value of Score with our random generated key\n\t\tlet score = ScoreHandler._getScore();\n\n\t\tHelper.log(TetrisGame.config.level);\n\t\tconst extraPointForLevel = 1+((TetrisGame.config.level-1)/10);\n\n\t\t// Increase value by scoreCalculator from config\n\t\tscore += TetrisGame.config.scoreCalculator(word) * (extraPointForLevel);\n\n\t\t// Update our fake score variable to let hacker think they are dealing with real variable\n\t\tinitValues.score = score;\n\n\t\t// Update & encrypt score in Storage\n\t\tif (TetrisGame.config.do_encryption) {\n\t\t\tStorage.setEncrypted('score', score, initValues.encryptionKey);\n\t\t} else {\n\t\t\tStorage.set('score', score);\n\t\t}\n\t\tHelper._('.scoreHolder').innerHTML = Math.round(score);\n\t}\n\n\n\t/**\n     * Update score and set it to panel\n     * @param word\n     * @param direction\n     */\n\tstatic _updateScoreAndStats(word, direction) {\n\t\tthis._updateStats(word, direction);\n\t\tthis._updateScore(word);\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Swipe from '../Swipe';\nimport Sound from '../Sound';\nimport Charblock from './Charblock';\nimport WordsHelper from './WordsHelper';\nimport Modal from '../Modal';\nimport Matrix from '../Matrix';\nimport Timeout from '../Timeout';\nimport Helper from '../Helper';\nimport ScoreHandler from './ScoreHandler';\nimport ArshLoader from '../../loading/ArshLoader';\n\n/**\n * @class\n */\nexport default class Gameplay {\n\t/**\n     * Start Game play\n     */\n\tstatic start() {\n\t\t// cache most used elements on class\n\t\tTetrisGame.playBoard = Helper._('.playBoard');\n\t\tTetrisGame.initValues.upComingCharEl = Helper._('.showUpComingLetter');\n\n\t\t// Get valid column length based on max json word length to create columns\n\t\tTetrisGame.validateColumnsNumber();\n\n\t\t// show game play board girds\n\t\tif (TetrisGame.config.showGrids) {\n\t\t\tTetrisGame.playBoard.classList.add('showGrids');\n\t\t}\n\n\t\t// create game columns and rows - matrix\n\t\tTetrisGame.matrix = new Matrix(this._makeGameBoard());\n\n\n\t\t// Choose n words from json to create rows and columns\n\t\tfor (let i = 0; i < TetrisGame.config.workingWordCount; i++) {\n\t\t\tconst choosedWord = WordsHelper.chooseWord();\n\t\t\tif (!choosedWord) {\n\t\t\t\tGameplay.finish('finishWords');\n\t\t\t}\n\t\t}\n\n\t\t// show words on playBoard top\n\t\tTetrisGame.showShuffledWords();\n\n\t\t// start game timer\n\t\tTetrisGame.timer.start();\n\n\n\t\t// reset delay of interval\n\t\tTetrisGame.interval.reset(\n\t\t\tCharblock.getInterval()\n\t\t);\n\n\n\t\t// create first char block\n\t\tCharblock.factory();\n\n\t\t// play start sound\n\t\tSound.playByKey('start', TetrisGame.config.playEventsSound);\n\n\t\t// arrow keys press\n\t\tthis._makeMovingEvents();\n\n\t\tthis._buttonManager(\n\t\t\t'.pauseGame,.restartGame',\n\t\t\t'.startGame,.resumeGame'\n\t\t);\n\t}\n\n\t/**\n     * Pause Game play\n     */\n\tstatic pause() {\n\t\t// playByKey resume sound\n\t\tSound.playByKey('pause', TetrisGame.config.playEventsSound);\n\n\t\t// stop timer [will stop whole game]\n\t\tTetrisGame.timer.pause();\n\n\t\t// manage game buttons\n\t\tthis._buttonManager(\n\t\t\t'.resumeGame,.restartGame',\n\t\t\t'.startGame,.pauseGame'\n\t\t);\n\t}\n\n\t/**\n     * Resume Game play\n     */\n\tstatic resume() {\n\t\t// playByKey resume sound\n\t\tSound.playByKey('pause', TetrisGame.config.playEventsSound);\n\n\t\t// resume timer [will resume whole game]\n\t\tTetrisGame.timer.resume();\n\n\t\t// manage game buttons\n\t\tthis._buttonManager(\n\t\t\t'.pauseGame,.restartGame',\n\t\t\t'.startGame,.resumeGame'\n\t\t);\n\t}\n\n\t/**\n     * Reset Game play\n     */\n\tstatic restart() {\n\t\tif (TetrisGame.initValues.wordsFinished) {\n\t\t\twindow.location.reload();\n\t\t}\n\n\t\t// make game variables that variables was on start\n\t\tTetrisGame.setDefaultValues(false);\n\n\t\t// destroy swiper\n\t\tif (TetrisGame.swipe) {\n\t\t\tTetrisGame.swipe.destroy();\n\t\t}\n\n\t\t// play resume sound\n\t\tSound.playByKey('pause', TetrisGame.config.playEventsSound);\n\n\t\t// remove old listener of keydown which causes multiple moves\n\t\tdocument.onkeydown = null;\n\n\t\t// re-build game\n\t\tTetrisGame.build();\n\t}\n\n\n\t/**\n\t * Restart whole game and back to arshLoader\n\t */\n\tstatic restartWholeGame() {\n\t\tthis.restart();\n\n\t\t// pause background music\n\t\tSound.pauseByKey('background');\n\n\t\t// build again loading\n\t\tArshLoader.build();\n\t}\n\n\n\t/**\n     * Game is finished [gameOver OR finishWords]\n     * @param mode {string} Finishing mode\n     */\n\tstatic finish(mode) {\n\t\tconst config = TetrisGame.config;\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\t// play game over sound\n\t\tif (mode === 'gameOver') {\n\t\t\tSound.playByKey('finishGame', config.playEventsSound);\n\t\t}\n\n\t\t// manage game buttons\n\t\tthis._buttonManager(\n\t\t\t'.restartGame',\n\t\t\t'.startGame,.pauseGame,.resumeGame'\n\t\t);\n\n\t\tinitValues.finished = true;\n\t\tTetrisGame.timer.pause();\n\n\t\tconst wordsAverageLength = (initValues.wordsLengthTotal / initValues.wordsFounded) || 1;\n\t\tconst showScore = Math.round(ScoreHandler._getScore());\n\t\tconst gamingTime = TetrisGame.timer.currentTime;\n\n\t\tconst gamingInfo = `\n             <div class=\"gameStatics\">\n                <div class=\"scorePart\">${window.lang.sumScore} : ‌<span class=\"value\">${showScore}</span></div>\n                <div class=\"wordsFoundedPart\">${window.lang.foundWords} :‌ <span class=\"value\">${initValues.wordsFounded} ${window.lang.word}</span></div>\n                <div class=\"averageLengthPart\">${window.lang.wordLengthAverage} :‌<span class=\"value\"> ${Math.round(wordsAverageLength)} ${window.lang.character}</span></div>\n                <div class=\"timePart\">${window.lang.spentTimeModal} :‌ <span class=\"value\">${gamingTime}</span></div>\n            </div>`;\n\n\n\t\tlet modalHeader, modalContent, modalType;\n\t\tconst modalButtons = [\n\t\t\t{\n\t\t\t\ttext: window.lang.saveScore,\n\t\t\t\tisOk: true,\n\t\t\t\tonclick() {\n\t\t\t\t\t// destroy score modal\n\t\t\t\t\tscoreModal.destroy();\n\n\t\t\t\t\t// display save score modal\n\t\t\t\t\tScoreHandler.submit(gamingInfo, showScore, gamingTime);\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\tif (mode === 'gameOver') {\n\t\t\tmodalHeader = window.lang.gameOverModalTitle;\n\t\t\tmodalContent = window.lang.gameOverModalContent + gamingInfo;\n\n\t\t\tmodalType = 'danger';\n\t\t\tmodalButtons.push(\n\t\t\t\t{\n\t\t\t\t\ttext: window.lang.restartGame,\n\t\t\t\t\tisOk: true,\n\t\t\t\t\tonclick() {\n\t\t\t\t\t\tscoreModal.destroy();\n\t\t\t\t\t\tGameplay.restart();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttext: window.lang.modalOkButton,\n\t\t\t\t\tonclick() {\n\t\t\t\t\t\tscoreModal.destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\tmodalHeader = window.lang.noExtraWordModalTitle;\n\t\t\tmodalContent = window.lang.noExtraWordModalContent + gamingInfo;\n\t\t\tmodalType = 'success';\n\t\t\tmodalButtons.push({\n\t\t\t\ttext: window.lang.modalRefreshButton,\n\t\t\t\tonclick() {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst scoreModal = new Modal(\n\t\t\t{\n\t\t\t\tanimate: config.useAnimationFlag,\n\t\t\t\tdark: config.colorMode,\n\t\t\t\ttype: modalType,\n\t\t\t\theader: modalHeader,\n\t\t\t\tcontent: modalContent,\n\t\t\t\tbuttons: modalButtons\n\t\t\t},\n\t\t\twindow.lang.rtl\n\t\t);\n\n\t\tTimeout.request(() => {\n\t\t\tscoreModal.show();\n\t\t}, 1300);\n\t}\n\n\t/**\n     * Make game board\n     * @return {Array}\n     * @private\n     */\n\tstatic _makeGameBoard() {\n\t\tlet rowsCount = TetrisGame.config.rows,\n\t\t\tplayBoardTable = `<div class=\"foundWordAnimation animatedMaxTime jackInTheBox animatedOneSecond\" style=\"display: none;left:1px;top:1px\"></div>\n            <div class=\"currentWorkingWords\"> </div>`;\n\t\tconst matrixRowArray = [];\n\n\t\t// we have eight rows on mobile\n\t\tif (TetrisGame.initValues.isMobile) {\n\t\t\tTetrisGame.playBoard.style.minHeight = '350px';\n\t\t\trowsCount = TetrisGame.config.rows = TetrisGame.config.mobileRows;\n\t\t}\n\n\t\tfor (let r = 0; r < rowsCount; r++) {\n\t\t\tconst matrixColumn = [];\n\t\t\tplayBoardTable += `<div class=\"isRow row_${r}\">`;\n\t\t\tfor (\n\t\t\t\tlet c = 0;\n\t\t\t\tc < TetrisGame.initValues.validatedColumnsCount;\n\t\t\t\tc++\n\t\t\t) {\n\t\t\t\tplayBoardTable += `<div id=\"grid${r}_${c}\" class=\"isColumn column_${c}\" data-row=\"${r}\"></div>`;\n\t\t\t\tmatrixColumn[c] = ' ';\n\t\t\t}\n\t\t\tmatrixRowArray[r] = matrixColumn;\n\t\t\tplayBoardTable += '</div>';\n\t\t}\n\n\t\tTetrisGame.playBoard.innerHTML = playBoardTable;\n\n\t\treturn matrixRowArray;\n\t}\n\n\n\t/**\n     * Make events for moving charBlocks\n     * @private\n     */\n\tstatic _makeMovingEvents() {\n\t\t// fire on arrow keys down\n\t\tdocument.onkeydown = function(e) {\n\t\t\tif ([37, 39, 40].includes(e.keyCode)) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!TetrisGame.initValues.paused) {\n\t\t\t\t\tTetrisGame.initValues.activeChar.move(e.keyCode);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// mobile swipe detect\n\t\tTetrisGame.swipe = new Swipe(\n\t\t\tTetrisGame.playBoard,\n\t\t\tdir => {\n\t\t\t\t// simulate arrow press on swipe\n\t\t\t\tswitch (dir) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tTetrisGame.initValues.activeChar.move(\n\t\t\t\t\t\twindow.CONTROL_CODES.LEFT\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right':\n\t\t\t\t\tTetrisGame.initValues.activeChar.move(\n\t\t\t\t\t\twindow.CONTROL_CODES.RIGHT\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'down':\n\t\t\t\t\tTetrisGame.initValues.activeChar.move(\n\t\t\t\t\t\twindow.CONTROL_CODES.DOWN\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tthreshold: 30\n\t\t\t}\n\t\t);\n\t}\n\n\n\t/**\n     * Manage btn parts buttons\n     * @param showClassed\n     * @param hideClasses\n     * @private\n     */\n\tstatic _buttonManager(showClassed, hideClasses) {\n\t\tconst gameBtnControl = Helper._('.gameControlButtons');\n\t\tgameBtnControl.querySelectorAll(showClassed).forEach(item => {\n\t\t\titem.style.display = 'inline-block';\n\t\t});\n\t\tgameBtnControl.querySelectorAll(hideClasses).forEach(item => {\n\t\t\titem.style.display = 'none';\n\t\t});\n\t}\n}\n","/** @module */\n\n/**\n * MaterialColor - A class to get Random material color\n *\n * {@link https://github.com/egoist/color-lib/blob/master/color.json Colors from this link }\n */\nexport default class MaterialColor {\n\t/**\n     * Get Hex value of a random material color\n     * @return {string}\n     *\n     * @example\n     * let myRandomColor = MaterialColor.getRandomColor();\n     */\n\tstatic getRandomColor() {\n\t\tconst colors = {\n\t\t\t'red': {\n\t\t\t\t'400': '#ef5350',\n\t\t\t\t'500': '#f44336',\n\t\t\t\t'600': '#e53935',\n\t\t\t\t'700': '#d32f2f',\n\t\t\t\t'800': '#c62828',\n\t\t\t\t'900': '#b71c1c',\n\t\t\t\t'hex': '#f44336',\n\t\t\t\t'a200': '#ff5252',\n\t\t\t\t'a400': '#ff1744',\n\t\t\t\t'a700': '#d50000'\n\t\t\t},\n\t\t\t'pink': {\n\t\t\t\t'400': '#ec407a',\n\t\t\t\t'500': '#e91e63',\n\t\t\t\t'600': '#d81b60',\n\t\t\t\t'700': '#c2185b',\n\t\t\t\t'800': '#ad1457',\n\t\t\t\t'900': '#880e4f',\n\t\t\t\t'hex': '#e91e63',\n\t\t\t\t'a400': '#f50057',\n\t\t\t\t'a700': '#c51162'\n\t\t\t},\n\t\t\t'purple': {\n\t\t\t\t'400': '#ab47bc',\n\t\t\t\t'500': '#9c27b0',\n\t\t\t\t'600': '#8e24aa',\n\t\t\t\t'700': '#7b1fa2',\n\t\t\t\t'800': '#6a1b9a',\n\t\t\t\t'900': '#4a148c',\n\t\t\t\t'hex': '#9c27b0',\n\t\t\t\t'a200': '#e040fb',\n\t\t\t\t'a400': '#d500f9',\n\t\t\t\t'a700': '#aa00ff'\n\t\t\t},\n\t\t\t'deepPurple': {\n\t\t\t\t'400': '#7e57c2',\n\t\t\t\t'500': '#673ab7',\n\t\t\t\t'600': '#5e35b1',\n\t\t\t\t'700': '#512da8',\n\t\t\t\t'800': '#4527a0',\n\t\t\t\t'900': '#311b92',\n\t\t\t\t'hex': '#673ab7',\n\t\t\t\t'a200': '#7c4dff',\n\t\t\t\t'a400': '#651fff',\n\t\t\t\t'a700': '#6200ea'\n\t\t\t},\n\t\t\t'indigo': {\n\t\t\t\t'400': '#5c6bc0',\n\t\t\t\t'500': '#3f51b5',\n\t\t\t\t'600': '#3949ab',\n\t\t\t\t'700': '#303f9f',\n\t\t\t\t'800': '#283593',\n\t\t\t\t'hex': '#3f51b5',\n\t\t\t\t'a200': '#536dfe',\n\t\t\t\t'a400': '#3d5afe',\n\t\t\t\t'a700': '#304ffe'\n\t\t\t},\n\t\t\t'blue': {\n\t\t\t\t'400': '#42a5f5',\n\t\t\t\t'500': '#2196f3',\n\t\t\t\t'600': '#1e88e5',\n\t\t\t\t'700': '#1976d2',\n\t\t\t\t'800': '#1565c0',\n\t\t\t\t'900': '#0d47a1',\n\t\t\t\t'hex': '#2196f3',\n\t\t\t\t'a200': '#448aff',\n\t\t\t\t'a400': '#2979ff',\n\t\t\t\t'a700': '#2962ff'\n\t\t\t},\n\t\t\t'lightBlue': {\n\t\t\t\t'500': '#03a9f4',\n\t\t\t\t'600': '#039be5',\n\t\t\t\t'700': '#0288d1',\n\t\t\t\t'800': '#0277bd',\n\t\t\t\t'900': '#01579b',\n\t\t\t\t'hex': '#03a9f4',\n\t\t\t\t'a400': '#00b0ff',\n\t\t\t\t'a700': '#0091ea'\n\t\t\t},\n\t\t\t'cyan': {\n\t\t\t\t'500': '#00bcd4',\n\t\t\t\t'600': '#00acc1',\n\t\t\t\t'700': '#0097a7',\n\t\t\t\t'800': '#00838f',\n\t\t\t\t'900': '#006064',\n\t\t\t\t'hex': '#00bcd4',\n\t\t\t\t'a700': '#00b8d4'\n\t\t\t},\n\t\t\t'teal': {\n\t\t\t\t'500': '#009688',\n\t\t\t\t'600': '#00897b',\n\t\t\t\t'700': '#00796b',\n\t\t\t\t'800': '#00695c',\n\t\t\t\t'900': '#004d40',\n\t\t\t\t'hex': '#009688',\n\t\t\t\t'a700': '#00bfa5'\n\t\t\t},\n\t\t\t'green': {\n\t\t\t\t'500': '#4caf50',\n\t\t\t\t'600': '#43a047',\n\t\t\t\t'700': '#388e3c',\n\t\t\t\t'800': '#2e7d32',\n\t\t\t\t'900': '#1b5e20',\n\t\t\t\t'a700': '#00c853'\n\t\t\t},\n\t\t\t'lightGreen': {\n\t\t\t\t'600': '#7cb342',\n\t\t\t\t'700': '#689f38',\n\t\t\t\t'800': '#558b2f',\n\t\t\t\t'900': '#33691e',\n\t\t\t\t'hex': '#8bc34a',\n\t\t\t\t'a700': '#64dd17'\n\t\t\t},\n\t\t\t'lime': {\n\t\t\t\t'700': '#afb42b',\n\t\t\t\t'800': '#9e9d24',\n\t\t\t\t'900': '#827717'\n\t\t\t},\n\t\t\t'yellow': {\n\t\t\t\t'800': '#f9a825',\n\t\t\t\t'900': '#f57f17'\n\t\t\t},\n\t\t\t'amber': {\n\t\t\t\t'900': '#ff6f00',\n\t\t\t\t'a700': '#ffab00'\n\t\t\t},\n\t\t\t'orange': {\n\t\t\t\t'700': '#f57c00',\n\t\t\t\t'800': '#ef6c00',\n\t\t\t\t'900': '#e65100',\n\t\t\t\t'a400': '#ff9100',\n\t\t\t\t'a700': '#ff6d00'\n\t\t\t},\n\t\t\t'deepOrange': {\n\t\t\t\t'500': '#ff5722',\n\t\t\t\t'600': '#f4511e',\n\t\t\t\t'700': '#e64a19',\n\t\t\t\t'800': '#d84315',\n\t\t\t\t'900': '#bf360c',\n\t\t\t\t'hex': '#ff5722',\n\t\t\t\t'a400': '#ff3d00',\n\t\t\t\t'a700': '#dd2c00'\n\t\t\t},\n\t\t\t'brown': {\n\t\t\t\t'400': '#8d6e63',\n\t\t\t\t'500': '#795548',\n\t\t\t\t'600': '#6d4c41',\n\t\t\t\t'700': '#5d4037',\n\t\t\t\t'800': '#4e342e',\n\t\t\t\t'hex': '#795548'\n\t\t\t},\n\t\t\t'grey': {\n\t\t\t\t'600': '#757575',\n\t\t\t\t'700': '#616161',\n\t\t\t\t'800': '#424242'\n\t\t\t},\n\t\t\t'blueGrey': {\n\t\t\t\t'500': '#607d8b',\n\t\t\t\t'600': '#546e7a',\n\t\t\t\t'700': '#455a64',\n\t\t\t\t'800': '#37474f'\n\t\t\t}\n\t\t};\n\t\tconst colorList = colors[MaterialColor.pickRandomProperty(colors)];\n\t\tconst newColorKey = MaterialColor.pickRandomProperty(colorList);\n\t\treturn colorList[newColorKey];\n\t}\n\n\n\t/**\n     * Pick a random property of object\n     * @param obj\n     * @return HexColorString {string}\n     */\n\tstatic pickRandomProperty(obj) {\n\t\tlet result, count = 0;\n\t\tfor (const prop in obj) if (Math.random() < 1 / ++count) result = prop;\n\t\treturn result;\n\t}\n}\n","/**\n * @module\n */\n\nimport Timeout from './Timeout';\n\n/**\n *  @class\n *  Explosion\n *  Animate explosion when found word\n */\nexport default class Explosion {\n\t/**\n\t * Create canvas on given element x and y\n\t * then render it to display a magical\n\t * explosion effect\n\t *\n\t * @param element {Element} element of explosion\n\t * @param x {int} place x of explosion\n\t * @param y {int} place y of explosion\n\t */\n\tstatic explode(element, x, y) {\n\t\tconst bubbles = 10;\n\n\t\tconst c = document.createElement('canvas');\n\t\tconst ctx = c.getContext('2d');\n\t\tconst ratio = window.devicePixelRatio;\n\t\tconst particles = [];\n\n\t\telement.appendChild(c);\n\n\t\tc.style.position = 'absolute';\n\t\tc.style.left = `${x - 50}px`;\n\t\tc.style.top = `${y - 50}px`;\n\t\tc.style.pointerEvents = 'none';\n\t\tc.style.width = `${100}px`;\n\t\tc.style.height = `${100}px`;\n\t\tc.width = 200 * ratio;\n\t\tc.height = 200 * ratio;\n\n\n\t\tfor (let i=0; ++i<bubbles;) {\n\t\t\tparticles.push(this._particle(c));\n\t\t}\n\n\n\t\t(function renderLoop() {\n\t\t\trequestAnimationFrame(renderLoop);\n\t\t\tExplosion._render(particles, ctx, c);\n\t\t}());\n\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\tif (c.parentElement === element) {\n\t\t\t\t\telement.removeChild(c);\n\t\t\t\t}\n\t\t\t}, 100\n\t\t);\n\t}\n\n\n\t/**\n\t * Create particles of our explosion\n\t * @param c\n\t * @return {{x: number, y: number, radius: *, color: string, rotation: *, speed: *, friction: number, opacity: *, yVel: number, gravity: number}}\n\t */\n\tstatic _particle(c) {\n\t\tconst r = function(a, b, c) {\n\t\t\treturn parseFloat(\n\t\t\t\t((Math.random()*((a?a:1)-(b?b:0))) + (b?b:0)).toFixed(c?c:0)\n\t\t\t);\n\t\t};\n\n\t\treturn {\n\t\t\tx: c.width / 2,\n\t\t\ty: c.height / 2,\n\t\t\tradius: r(20, 30),\n\t\t\tcolor: `rgb(${[r(0, 255), r(0, 255), r(0, 255)].join(',')})`,\n\t\t\trotation: r(0, 360, true),\n\t\t\tspeed: r(8, 12),\n\t\t\tfriction: 0.9,\n\t\t\topacity: r(0, 0.5, true),\n\t\t\tyVel: 0,\n\t\t\tgravity: 0.1\n\t\t};\n\t}\n\n\n\t/**\n\t * Render particles explosion on canvas\n\t * @param particles\n\t * @param ctx\n\t * @param c\n\t */\n\tstatic _render(particles, ctx, c) {\n\t\tctx.clearRect(0, 0, c.width, c.height);\n\n\t\tparticles.forEach(p => {\n\t\t\tExplosion._moveOnAngle(p, p.speed);\n\n\t\t\tp.opacity -= 0.01;\n\t\t\tp.speed *= p.friction;\n\t\t\tp.radius *= p.friction;\n\n\t\t\tp.yVel += p.gravity;\n\t\t\tp.y += p.yVel;\n\n\t\t\tif (p.opacity < 0) return;\n\t\t\tif (p.radius < 0) return;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.globalAlpha = p.opacity;\n\t\t\tctx.fillStyle = p.color;\n\t\t\tctx.arc(p.x, p.y, p.radius, 0, 2 * Math.PI, false);\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\n\t/**\n\t * Gets one of frames distance\n\t * @param t\n\t * @param n\n\t * @return {{x: number, y: number}}\n\t * @private\n\t */\n\tstatic _getOneFrameDistance(t, n) {\n\t\treturn {\n\t\t\tx: n * Math.cos(t.rotation * Math.PI / 180),\n\t\t\ty: n * Math.sin(t.rotation * Math.PI / 180)\n\t\t};\n\t}\n\n\t/**\n\t * Move angle\n\t * @param t\n\t * @param n\n\t * @private\n\t */\n\tstatic _moveOnAngle(t, n) {\n\t\tconst a = this._getOneFrameDistance(t, n);\n\t\tt.x += a.x;\n\t\tt.y += a.y;\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Charblock from './Charblock';\nimport Timeout from '../Timeout';\nimport Sound from '../Sound';\n// import Helper from './Helper';\nimport Explosion from '../Explosion';\nimport Helper from '../Helper';\n\n/**\n *  @class\n *  Explosion\n *  Animate explosion when found word\n */\nexport default class Animate {\n\t/**\n\t * Fall node with animation\n\t * @param oldRow {Number}\n\t * @param oldColumn {Number}\n\t * @param newRow {Number}\n\t * @param newColumn {Number}\n\t */\n\tstatic fallNodeAnimate(oldRow, oldColumn, newRow, newColumn) {\n\t\tconst animateConfig = TetrisGame.initValues.animateConfig;\n\t\tconst deleteTiming = animateConfig.deleteTiming;\n\t\tconst domToDelete = Charblock._getEl(oldRow, oldColumn, true);\n\t\tif (!domToDelete || typeof domToDelete ==='undefined') return false;\n\t\tconst gameConfig = TetrisGame.config;\n\t\tconst oldChar = domToDelete.innerHTML;\n\t\tconst oldColor = domToDelete.style.backgroundColor;\n\t\t// const oldType = domToDelete.dataset.type || 'regualar';\n\t\tconst domParent = domToDelete.parentNode;\n\t\tconst isFallingDown = (newRow !== null && newColumn !== null);\n\n\t\tif (gameConfig.useAnimationFlag) {\n\t\t\tconst animateClass = animateConfig.animateClass;\n\t\t\tdomToDelete.classList.add(animateClass, isFallingDown ? 'fadeOutDown' : 'zoomOutDown');\n\n\t\t\t// create explosion effect\n\t\t\tif (!isFallingDown) {\n\t\t\t\tExplosion.explode(domParent, 35, 10);\n\t\t\t}\n\t\t}\n\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\tif (domToDelete.parentElement === domParent) domParent.removeChild(domToDelete);\n\t\t\t}, deleteTiming\n\t\t);\n\n\n\t\t// animate up char to down\n\t\tif (isFallingDown) {\n\t\t\tCharblock.factory(\n\t\t\t\t{\n\t\t\t\t\tcolor: oldColor,\n\t\t\t\t\tchar: oldChar,\n\t\t\t\t\ttype: 'regualar',\n\t\t\t\t\tanimateInClass: 'fadeInDown'\n\t\t\t\t}, Charblock._getEl(newRow, newColumn)\n\t\t\t);\n\t\t}\n\t}\n\n\n\t/**\n\t * Animate found characters\n\t * @param wordCharacterPositions\n\t * @param successAnimationIterationDuration\n\t */\n\tstatic animateFoundedCharacters(wordCharacterPositions, successAnimationIterationDuration) {\n\t\t// play founded word sound\n\t\tSound.playByKey('foundWord', TetrisGame.config.playEventsSound);\n\n\t\t// Animate FadingOut founded characters\n\t\twordCharacterPositions.map((item, index) => {\n\t\t\tTimeout.request(\n\t\t\t\t() => {\n\t\t\t\t\tAnimate.fallNodeAnimate(item.y, item.x, null, null);\n\t\t\t\t}, index * successAnimationIterationDuration\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Animate fall characters\n\t * @param fallingCharacters\n\t * @param successAnimationIterationDuration\n\t * @param after\n\t */\n\tstatic animateFallCharacters(fallingCharacters, successAnimationIterationDuration, after) {\n\t\tlet index = 0;\n\t\tfor (const [_, value] of fallingCharacters.entries()) {\n\t\t\tfor (const item of value) {\n\t\t\t\tTimeout.request(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tAnimate.fallNodeAnimate(item.oldY, item.x, item.newY, item.x);\n\t\t\t\t\t}, (index++) * successAnimationIterationDuration\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (Helper.isFunction(after)) {\n\t\t\tTimeout.request(after, ((index-1)*(successAnimationIterationDuration)) + TetrisGame.initValues.animateConfig.deleteTiming);\n\t\t}\n\t}\n\n\n\t/**\n\t * This function will shake a Dom\n\t * @param element {HTMLElement} - Dom to shake\n\t * @param magnitude {Number} [16] - magnitude of earthquake\n\t * @param angular {Boolean} [false] - angular of shaking\n\t */\n\tstatic shake(element, magnitude = 16, angular = false) {\n\t\tconst shakingElements = [];\n\n\t\t// First set the initial tilt angle to the right (+1)\n\t\tlet tiltAngle = 1;\n\n\t\t// A counter to count the number of shakes\n\t\tlet counter = 1;\n\n\t\t// The total number of shakes (there will be 1 shake per frame)\n\t\tconst numberOfShakes = 15;\n\n\t\t// Capture the element's position and angle so you can\n\t\t// restore them after the shaking has finished\n\t\tconst startX = 0,\n\t\t\tstartY = 0,\n\t\t\tstartAngle = 0;\n\n\t\t// Divide the magnitude into 10 units so that you can\n\t\t// reduce the amount of shake by 10 percent each frame\n\t\tconst magnitudeUnit = magnitude / numberOfShakes;\n\n\t\t// The `randomInt` helper function\n\t\tconst randomInt = (min, max) => {\n\t\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t\t};\n\n\t\t// The `upAndDownShake` function\n\t\tconst upAndDownShake= () => {\n\t\t\t// Shake the element while the `counter` is less than\n\t\t\t// the `numberOfShakes`\n\t\t\tif (counter < numberOfShakes) {\n\t\t\t\t// Reset the element's position at the start of each shake\n\t\t\t\telement.style.transform = `translate(${startX}px, ${startY}px)`;\n\n\t\t\t\t// Reduce the magnitude\n\t\t\t\tmagnitude -= magnitudeUnit;\n\n\t\t\t\t// Randomly change the element's position\n\t\t\t\tconst randomX = randomInt(-magnitude, magnitude);\n\t\t\t\tconst randomY = randomInt(-magnitude, magnitude);\n\n\t\t\t\telement.style.transform = `translate(${randomX}px, ${randomY}px)`;\n\n\t\t\t\t// Add 1 to the counter\n\t\t\t\tcounter += 1;\n\n\t\t\t\trequestAnimationFrame(upAndDownShake);\n\t\t\t}\n\n\t\t\t// When the shaking is finished, restore the element to its original\n\t\t\t// position and remove it from the `shakingElements` array\n\t\t\tif (counter >= numberOfShakes) {\n\t\t\t\telement.style.transform = `translate(${startX}, ${startY})`;\n\t\t\t\tshakingElements.splice(shakingElements.indexOf(element), 1);\n\t\t\t}\n\t\t};\n\n\t\t// The `angularShake` function\n\t\tconst angularShake = () => {\n\t\t\tif (counter < numberOfShakes) {\n\t\t\t\tconsole.log(tiltAngle);\n\t\t\t\t// Reset the element's rotation\n\t\t\t\telement.style.transform = `rotate(${startAngle}deg)`;\n\n\t\t\t\t// Reduce the magnitude\n\t\t\t\tmagnitude -= magnitudeUnit;\n\n\t\t\t\t// Rotate the element left or right, depending on the direction,\n\t\t\t\t// by an amount in radians that matches the magnitude\n\t\t\t\tconst angle = Number(magnitude * tiltAngle).toFixed(2);\n\t\t\t\tconsole.log(angle);\n\t\t\t\telement.style.transform = `rotate(${angle}deg)`;\n\t\t\t\tcounter += 1;\n\n\t\t\t\t// Reverse the tilt angle so that the element is tilted\n\t\t\t\t// in the opposite direction for the next shake\n\t\t\t\ttiltAngle *= -1;\n\n\t\t\t\trequestAnimationFrame(angularShake);\n\t\t\t}\n\n\t\t\t// When the shaking is finished, reset the element's angle and\n\t\t\t// remove it from the `shakingElements` array\n\t\t\tif (counter >= numberOfShakes) {\n\t\t\t\telement.style.transform = `rotate(${startAngle}deg)`;\n\t\t\t\tshakingElements.splice(shakingElements.indexOf(element), 1);\n\t\t\t\t// console.log(\"removed\")\n\t\t\t}\n\t\t};\n\t\t// Add the element to the `shakingElements` array if it\n\t\t// isn't already there\n\t\tif (shakingElements.indexOf(element) === -1) {\n\t\t\t// console.log(\"added\")\n\t\t\tshakingElements.push(element);\n\n\t\t\t// Add an `updateShake` method to the element.\n\t\t\t// The `updateShake` method will be called each frame\n\t\t\t// in the game loop. The shake effect type can be either\n\t\t\t// up and down (x/y shaking) or angular (rotational shaking).\n\t\t\tif (angular) {\n\t\t\t\tangularShake();\n\t\t\t} else {\n\t\t\t\tupAndDownShake();\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Shows found word with animation\n\t * @param word\n\t * @param positions\n\t */\n\tstatic showFoundWordAnimated(word, positions) {\n\t\tconst charLength = positions.length - 1,\n\t\t\trowAverage = (positions[0].y + positions[charLength].y) / 2,\n\t\t\tcolumnAverage = (positions[0].x + positions[charLength].x) / 2,\n\t\t\thidedWord = Charblock.getBlockPosition(parseInt(rowAverage), parseInt(columnAverage)),\n\t\t\tfoundWordDisplayEl = Helper._('.foundWordAnimation', TetrisGame.playBoard),\n\t\t\tfixerDistance = (charLength % 2 === 1) ? 0 : (hidedWord.width/4) * -1;\n\n\t\tconsole.log(`want to show : ${word} - show place : ${rowAverage} - ${columnAverage}`);\n\n\t\tfoundWordDisplayEl.innerHTML = word;\n\t\tfoundWordDisplayEl.style.display = 'block';\n\t\tfoundWordDisplayEl.style.left = `${hidedWord.left - fixerDistance}px`;\n\t\tfoundWordDisplayEl.style.top = `${hidedWord.top - 10}px`;\n\n\t\tif (TetrisGame.config.useAnimationFlag) {\n\t\t\tfoundWordDisplayEl.classList.add('animatedOneSecond', 'jackInTheBox');\n\t\t} else {\n\t\t\tfoundWordDisplayEl.classList.remove('animatedOneSecond', 'jackInTheBox');\n\t\t}\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\tfoundWordDisplayEl.style.display = 'none';\n\t\t\t}, 1200\n\t\t);\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Gameplay from './Gameplay';\nimport Sound from '../Sound';\nimport WordsHelper from './WordsHelper';\nimport MaterialColor from '../MaterialColor';\nimport Timeout from '../Timeout';\nimport Helper from '../Helper';\nimport Explosion from '../Explosion';\nimport Animate from './Animate';\nimport Interval from \"../Interval\";\n\n/**\n * @class Charblock make easier our life on manage characters block\n */\nexport default class Charblock {\n\t/**\n\t * Create new char block\n\t * @return {boolean}\n\t */\n\tstatic create() {\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\t// if game is finished\n\t\tif (initValues.finished) {\n\t\t\tinitValues.upComingCharEl.innerHTML = '';\n\t\t\treturn false;\n\t\t}\n\n\n\t\tthis.column = Math.random() * initValues.validatedColumnsCount << 0;\n\t\tthis.row = 0; // top is 0 and bottom is max\n\t\tthis.char = initValues.nextChar === '' ? WordsHelper.chooseChar() : initValues.nextChar;\n\n\n\t\t// is character special ?\n\t\tif (typeof this.char === 'object' && this.char.special === 'true') {\n\t\t\tthis.type = this.char.type;\n\t\t\tthis.typeSize = this.char.typeSize;\n\t\t\tHelper.log(`Special: ${this.type}`);\n\t\t} else {\n\t\t\tthis.type = 'regualar';\n\t\t\tthis.color = MaterialColor.getRandomColor(); // random material color\n\t\t}\n\n\t\tthis.element = null; // holds our character element\n\n\n\t\t// interval\n\t\tif (!this.interval) {\n\t\t\tconst intervalData = this.getInterval();\n\t\t\tthis.interval = TetrisGame.interval.make(\n\t\t\t\tintervalData.fn,\n\t\t\t\tintervalData.delay\n\t\t\t);\n\t\t}\n\n\n\t\t// create and show up coming char\n\t\tthis._showUpComingChar();\n\n\t\t// add this char as active char\n\t\tinitValues.activeChar = this;\n\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * Factory of character\n\t * @param charblock\n\t * @param initializeElement\n\t */\n\tstatic factory(charblock, initializeElement) {\n\t\t// if char is not supplied create new one\n\t\tif (typeof charblock === 'undefined') {\n\t\t\tcharblock = Charblock.create();\n\n\t\t\tif (Object.keys(charblock).length !== 0) {\n\t\t\t\tinitializeElement = Charblock._getEl(charblock.row, charblock.column);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tconst charBlockEl = document.createElement('span');\n\t\tconst animateClass = TetrisGame.config.useAnimationFlag ? ' animated ' : '';\n\t\tlet plusCharBlockClass = '';\n\n\t\tif (charblock.type === 'regualar') {\n\t\t\tcharBlockEl.style.background = charblock.color;\n\t\t\tcharBlockEl.innerHTML = charblock.char;\n\t\t} else {\n\t\t\tif (charblock.type === 'bomb') {\n\n\t\t\t\tplusCharBlockClass = 'bombBlock animated';\n\t\t\t\tcharBlockEl.style.background = 'transparent';\n\t\t\t\tcharBlockEl.dataset.size = charblock.typeSize;\n\n\t\t\t} else if (charblock.type === 'skull') {\n\n\t\t\t\t// set skull styling class\n\t\t\t\tplusCharBlockClass = 'skullBlock animated';\n\t\t\t\tcharBlockEl.style.background = '#000';\n\n\t\t\t\t// Register click listener on skullBlock\n\t\t\t\tCharblock._registerSkullClick(charBlockEl);\n\n\t\t\t} else if (charblock.type === 'star') {\n\t\t\t\tplusCharBlockClass = 'starBlock animated';\n\t\t\t\tcharBlockEl.style.background = MaterialColor.getRandomColor();\n\t\t\t}\n\n\t\t\tcharBlockEl.appendChild(charblock.char);\n\t\t}\n\n\t\tcharBlockEl.className = `charBlock ${plusCharBlockClass} ${animateClass}${charblock.animateInClass || ''}`;\n\n\t\tcharblock.element = charBlockEl;\n\n\t\tinitializeElement.innerHTML = '';\n\t\tinitializeElement.appendChild(charBlockEl);\n\t}\n\n\n\t/**\n\t * Move char block\n\t * @param eventKeyCode\n\t * @param position\n\t * @return {boolean}\n\t */\n\tstatic move(eventKeyCode, position) {\n\t\tconst initValues = TetrisGame.initValues;\n\t\tconst config = TetrisGame.config;\n\t\tconst isBottomMove = TetrisGame.controlCodes.DOWN === eventKeyCode;\n\n\t\tlet moveTo;\n\n\n\t\t// user could not move skull\n\t\tif (!this.element.classList.contains('skullBlock')) {\n\t\t\tmoveTo = Charblock._generateMove(eventKeyCode);\n\t\t} else if (isBottomMove) {\n\t\t\tmoveTo = Charblock._generateMove(eventKeyCode);\n\t\t}\n\n\n\t\t// if move to is out of range\n\t\tif (!moveTo || moveTo.column >= initValues.validatedColumnsCount || moveTo.column < 0 || initValues.finished) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst destinationEl = Charblock._getEl(moveTo.row, moveTo.column) || null;\n\t\tif (moveTo.row >= config.rows || (destinationEl.innerHTML.trim() !== '')) {\n\t\t\tif (isBottomMove) {\n\t\t\t\t// remove styles of coming special char\n\t\t\t\tthis.element.classList.remove('skullBlock', 'bombBlock', 'starBlock');\n\n\t\t\t\t// Remove onclick if element reached bottom\n\t\t\t\tthis.element.removeEventListener('click', Charblock._skullClick, true);\n\t\t\t\tthis.element.removeEventListener('touchstart', Charblock._skullClick, true);\n\n\t\t\t\t// check words\n\t\t\t\tTetrisGame.checkWordSuccess(this);\n\n\t\t\t\tif (this.row !== 0) {\n\t\t\t\t\tif (initValues.wordsFinished) {\n\t\t\t\t\t\tGameplay.finish('finishWords');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// add new char\n\t\t\t\t\t\tCharblock.factory();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\t// if we arrived to top of the page\n\t\t\t\t\tif(TetrisGame.initValues.activeChar.type !== 'bomb') {\n\t\t\t\t\t\tGameplay.finish('gameOver');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// remove char with animation\n\t\t\tCharblock._destroy(this.element, moveTo.animateOutClass);\n\n\t\t\t// update current char info\n\t\t\tthis.row = moveTo.row;\n\t\t\tthis.column = moveTo.column;\n\t\t\tthis.animateInClass = moveTo.animateInClass;\n\n\t\t\t// add our char in destination\n\t\t\tCharblock.factory(this, destinationEl);\n\t\t}\n\n\t\t// play move char\n\t\tSound.playByKey('moveChar', config.playEventsSound);\n\t}\n\n\n\t/**\n\t * Get interval used data\n\t * @return {{fn: function(), delay: number}}\n\t */\n\tstatic getInterval() {\n\t\tconst config = TetrisGame.config;\n\n\t\treturn {\n\t\t\tfn: () => {\n\t\t\t\tif (!TetrisGame.initValues.paused) {\n\t\t\t\t\tCharblock.move(40);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelay: (config.charSpeed / config.level)\n\t\t};\n\t}\n\n\n\n\t/**\n\t * Get charBlock position and width in page\n\t * @param row\n\t * @param column\n\t * @return {{top: number, left: number, width: number}}\n\t */\n\tstatic getBlockPosition(row, column) {\n\t\tconst blockElement = this._getEl(row, column);\n\t\treturn {\n\t\t\ttop: blockElement.offsetTop,\n\t\t\tleft: blockElement.offsetLeft,\n\t\t\twidth: blockElement.offsetWidth\n\t\t};\n\t}\n\n\n\t/**\n\t * Gets an element from cache or create it\n\t * @param row\n\t * @param column\n\t * @param charBlock\n\t * @return {*}\n\t */\n\tstatic _getEl(row, column, charBlock) {\n\t\tlet charBlockString = '';\n\t\tif (typeof charBlock !== 'undefined' && charBlock) {\n\t\t\tcharBlockString = ' .charBlock';\n\t\t}\n\n\t\tconst cachedRow = TetrisGame.initValues.cachedRows[row] || false;\n\t\tif (Object.keys(cachedRow) > 0) {\n\t\t\treturn Helper._(`.column_${column}${charBlockString}`, TetrisGame.initValues.cachedRows[row]);\n\t\t} else {\n\t\t\tconst rowElement = Helper._(`.row_${row}`, TetrisGame.playBoard);\n\t\t\tif (rowElement) {\n\t\t\t\tTetrisGame.initValues.cachedRows[row] = rowElement;\n\t\t\t\treturn Helper._(`.column_${column}${charBlockString}`, rowElement);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate charBlock movement\n\t * @param keyCode\n\t * @return {*}\n\t * @private\n\t */\n\tstatic _generateMove(keyCode) {\n\t\tlet moveTo;\n\t\tconst row = this.row;\n\t\tconst column = this.column;\n\n\t\tswitch (keyCode) {\n\t\tcase TetrisGame.controlCodes.LEFT: // left\n\t\t\tmoveTo = {\n\t\t\t\trow,\n\t\t\t\tcolumn: column + 1,\n\t\t\t\tanimateOutClass: (window.lang.rtl ? 'fadeOutLeft' : 'fadeOutRight'),\n\t\t\t\tanimateInClass: (window.lang.rtl ? 'fadeInRight' : 'fadeInLeft')\n\t\t\t};\n\t\t\tbreak;\n\t\tcase TetrisGame.controlCodes.RIGHT: // right\n\t\t\tmoveTo = {\n\t\t\t\trow,\n\t\t\t\tcolumn: column - 1,\n\t\t\t\tanimateOutClass: (window.lang.rtl ? 'fadeOutRight' : 'fadeOutLeft'),\n\t\t\t\tanimateInClass: (window.lang.rtl ? 'fadeInLeft' : 'fadeInRight')\n\t\t\t};\n\t\t\tbreak;\n\t\tcase TetrisGame.controlCodes.DOWN: // down\n\t\t\tmoveTo = {\n\t\t\t\trow: row + 1,\n\t\t\t\tcolumn,\n\t\t\t\tanimateOutClass: 'fadeOutDown',\n\t\t\t\tanimateInClass: 'fadeInDown'\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn false;\n\t\t}\n\n\t\treturn moveTo;\n\t}\n\n\n\t/**\n\t * Create and show upcoming character\n\t * @private\n\t */\n\tstatic _showUpComingChar() {\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\tinitValues.nextChar = WordsHelper.chooseChar();\n\n\t\tconst upComingCharHolder = initValues.upComingCharEl;\n\t\tconst upcomingCharEl = document.createElement('span');\n\t\tconst animateClass = TetrisGame.config.useAnimationFlag ? ' animated bounceIn' : '';\n\n\t\tupComingCharHolder.innerHTML = '';\n\t\tupcomingCharEl.className = animateClass;\n\n\t\tif (typeof initValues.nextChar === 'object') {\n\t\t\tupcomingCharEl.appendChild(initValues.nextChar);\n\t\t} else {\n\t\t\tupcomingCharEl.innerHTML = initValues.nextChar || '';\n\t\t}\n\n\t\tupComingCharHolder.appendChild(upcomingCharEl);\n\t}\n\n\n\t/**\n\t * Destroy char block\n\t * @param workingElement\n\t * @param outgoingAnimation\n\t * @private\n\t */\n\tstatic _destroy(workingElement, outgoingAnimation) {\n\t\tconst config = TetrisGame.config;\n\t\tconst animateClass = config.useAnimationFlag ? ' animated ' : '';\n\n\t\tworkingElement.className += animateClass + outgoingAnimation;\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\t// remove current char\n\t\t\t\tif (workingElement.parentNode) {\n\t\t\t\t\tworkingElement.parentNode.removeChild(workingElement);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(config.useAnimationFlag ? 200 / config.level : 0)\n\t\t);\n\t}\n\n\n\t/**\n\t * Register click ability on skull charBlock\n\t * @param charBlockEl\n\t * @private\n\t */\n\tstatic _registerSkullClick(charBlockEl) {\n\t\tcharBlockEl.addEventListener('click', Charblock._skullClick, true);\n\t\tcharBlockEl.addEventListener('touchstart', Charblock._skullClick, true);\n\t}\n\n\n\t/**\n\t * Fire skull click event\n\t * @param event\n\t */\n\tstatic _skullClick(event) {\n\t\tconst charBlockEl = event.target.closest('.charBlock');\n\t\tif (!charBlockEl) return;\n\t\tif (!TetrisGame.initValues.paused) {\n\t\t\tconst skullCharacter = charBlockEl.childNodes[0];\n\n\t\t\tif (skullCharacter) {\n\t\t\t\tconst remainingClicks = Helper.int(skullCharacter.dataset.clicks) - 1;\n\t\t\t\tskullCharacter.dataset.clicks = remainingClicks.toString();\n\n\t\t\t\tif (remainingClicks === 0) {\n\t\t\t\t\tconst YX = Helper.getYX(skullCharacter);\n\n\t\t\t\t\t// explode skull charBlock\n\t\t\t\t\tExplosion.explode(skullCharacter, YX.x, YX.y);\n\t\t\t\t\tAnimate.fallNodeAnimate(YX.y, YX.x, null, null);\n\n\t\t\t\t\tTetrisGame.initValues.paused = true;\n\n\t\t\t\t\t// get new charBlock\n\t\t\t\t\tTimeout.request(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tTetrisGame.initValues.paused = false;\n\t\t\t\t\t\t\tCharblock.factory();\n\t\t\t\t\t\t}, 500\n\t\t\t\t\t);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @module\n */\n\nimport TetrisGame from './TetrisGame';\nimport Storage from '../Storage';\nimport Modal from '../Modal';\nimport Helper from '../Helper';\nimport Charblock from './Charblock';\n\n/**\n * @class Settings to show and set game settings\n */\nexport default class Settings {\n\t/**\n     * Set settings from localStorage OR settings Object\n     * @param settings\n     */\n\tstatic set(settings) {\n\t\tif (typeof settings !== 'undefined') {\n\t\t\t// save setting data\n\t\t\tStorage.set('settings', settings);\n\t\t} else {\n\t\t\tsettings = this.getDefaultSettings();\n\t\t}\n\n\t\tconst config = TetrisGame.config;\n\n\t\tconfig.useAnimationFlag = settings.useAnimation;\n\t\tconfig.playEventsSound = settings.eventSounds;\n\t\tconfig.playBackgroundSound = settings.soundPlay;\n\t\tconfig.showGrids = settings.showGrids;\n\t\tconfig.level = parseInt(settings.gameLevel) || 1;\n\t\tconfig.do_vibrate = parseInt(settings.vibration) === 1;\n\t\tconfig.colorMode = parseInt(settings.colorMode);\n\n\n\t\t// Apply setting for music\n\t\tSettings._setMusicSetting();\n\n\t\t// Apply setting for grids\n\t\tSettings._setGridsSetting();\n\n\t\t// Apply setting for level\n\t\tSettings._setLevelSetting(settings.gameLevel);\n\n\t\t// set color mode to page\n\t\tSettings._setColorMode(config.colorMode);\n\t}\n\n\n\t/**\n     * Show game settings\n     */\n\tstatic show() {\n\t\t// get defined settings\n\t\tconst settings = this.getDefaultSettings();\n\n\t\t// was game paused already\n\t\tconst wasPausedFlag = TetrisGame.initValues.paused === true;\n\n\t\t// pause game timer\n\t\tif (!wasPausedFlag) {\n\t\t\tTetrisGame.timer.pause();\n\t\t}\n\n\t\t// should we animate span ?\n\t\tconst spanAnimationClass = (TetrisGame.config.useAnimationFlag ? ' animatedSpan' : '');\n\n\n\t\t// create setting modal content\n\t\tconst content\n\t\t\t= `<form id=\"settingForm\" class=\"cssRadio ${spanAnimationClass}\">\n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-sound2\"></i> ${window.lang.backgroundMusic}</div>\n                    <div class=\"formData\">\n                        <input id=\"soundPlayYes\" type=\"radio\" class=\"soundPlay\" name=\"soundPlay\" value=\"1\" ${settings.soundPlay ? 'checked' : ''} />\n                        <label for=\"soundPlayYes\"><span>${window.lang.activeSound}</span></label>\n                        <input id=\"soundPlayNo\" type=\"radio\" class=\"soundPlay\" name=\"soundPlay\" value=\"0\" ${!settings.soundPlay ? 'checked' : ''} />\n                        <label for=\"soundPlayNo\"><span>${window.lang.deActiveSound}</span></label>\n                    </div>\n                </div>\n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-sound1\"></i> ${window.lang.eventsMusic}</div>\n                    <div class=\"formData\">\n                        <input id=\"eventSoundsYes\" type=\"radio\" class=\"eventSounds\" name=\"eventSounds\" value=\"1\" ${settings.eventSounds ? 'checked' : ''} />\n                        <label for=\"eventSoundsYes\"><span>${window.lang.activeSound}</span></label>\n                        <input id=\"eventSoundsNo\" type=\"radio\" class=\"eventSounds\" name=\"eventSounds\" value=\"0\" ${!settings.eventSounds ? 'checked' : ''} />\n                        <label for=\"eventSoundsNo\"><span>${window.lang.deActiveSound}</span></label>\n                    </div>\n                </div>\n    \n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-magic\"></i> ${window.lang.animation}</div>\n                    <div class=\"formData\">\n                        <input id=\"useAnimationYes\" type=\"radio\" class=\"useAnimation\" name=\"useAnimation\" value=\"1\" ${settings.useAnimation ? 'checked' : ''} />\n                        <label for=\"useAnimationYes\"><span>${window.lang.active}</span></label>\n                        <input id=\"useAnimationNo\" type=\"radio\" class=\"useAnimation\" name=\"useAnimation\" value=\"0\" ${!settings.useAnimation ? 'checked' : ''} />\n                        <label for=\"useAnimationNo\"><span>${window.lang.deActive}</span></label>\n                    </div>\n                </div>\n    \n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-borders\"></i> ${window.lang.showGrids}</div>\n                    <div class=\"formData\">\n                        <input id=\"showGridsYes\" type=\"radio\" class=\"showGrids\" name=\"showGrids\" value=\"1\" ${settings.showGrids ? 'checked' : ''} />\n                        <label for=\"showGridsYes\"><span>${window.lang.active}</span></label>\n                        <input id=\"showGridsNo\" type=\"radio\" class=\"showGrids\" name=\"showGrids\" value=\"0\" ${!settings.showGrids ? 'checked' : ''} />\n                        <label for=\"showGridsNo\"><span>${window.lang.deActive}</span></label>\n                    </div>\n                </div>\n    \n    \n                <div class=\"formRow isVibrateControl\">\n                    <div class=\"formLabel\"><i class=\"icon-mobile\"></i> ${window.lang.vibration}</div>\n                    <div class=\"formData\">\n                        <input id=\"vibrationYes\" type=\"radio\" class=\"vibration\" name=\"vibration\" value=\"1\" ${settings.vibration ? 'checked' : ''} />\n                        <label for=\"vibrationYes\"><span>${window.lang.activeVibrate}</span></label>\n                        <input id=\"vibrationNo\" type=\"radio\" class=\"vibration\" name=\"vibration\" value=\"0\" ${!settings.vibration ? 'checked' : ''} />\n                        <label for=\"vibrationNo\"><span>${window.lang.deActiveVibrate}</span></label>\n                    </div>\n                </div>\n    \n    \n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-colorPelete\"></i> ${window.lang.colorMode}</div>\n                    <div class=\"formData\">\n                        <input id=\"colorModeDay\" type=\"radio\" class=\"colorMode\" name=\"colorMode\" value=\"0\" ${(!settings.colorMode ? 'checked' : '')} />\n                        <label for=\"colorModeDay\"><span>${window.lang.activeDay}</span></label>\n                        <input id=\"colorModeNight\" type=\"radio\" class=\"colorMode\" name=\"colorMode\" value=\"1\" ${(settings.colorMode ? 'checked' : '')} />\n                        <label for=\"colorModeNight\"><span>${window.lang.activeNight}</span></label>\n                    </div>\n                </div>\n    \n                <div class=\"formRow\">\n                    <div class=\"formLabel\"><i class=\"icon-packMan\"></i> ${window.lang.gameLevel}</div>\n                    <div class=\"formData\">\n                        <input id=\"gameLevelEasy\" type=\"radio\" class=\"gameLevel\" name=\"gameLevel\" value=\"1\" ${settings.gameLevel === 1 ? 'checked' : ''} />\n                        <label for=\"gameLevelEasy\"><span>${window.lang.simple}</span></label>\n                        <input id=\"gameLevelMedium\" type=\"radio\" class=\"gameLevel\" name=\"gameLevel\" value=\"2\" ${settings.gameLevel === 2 ? 'checked' : ''} />\n                        <label for=\"gameLevelMedium\"><span>${window.lang.medium}</span></label>\n                        <input id=\"gameLevelExpert\" type=\"radio\" class=\"gameLevel\" name=\"gameLevel\" value=\"3\" ${settings.gameLevel === 3 ? 'checked' : ''} />\n                        <label for=\"gameLevelExpert\"><span>${window.lang.expert}</span></label>\n                    </div>\n                </div>\n            </form>`;\n\n\t\t// show setting modal\n\t\tconst settingModal = new Modal({\n\t\t\tanimate: TetrisGame.config.useAnimationFlag,\n\t\t\theader: window.lang.settingModalTitle,\n\t\t\tcontent,\n\t\t\tdark: settings.colorMode,\n\t\t\tonDestroy() {\n\t\t\t\tif (!wasPausedFlag) {\n\t\t\t\t\t// resume timer\n\t\t\t\t\tTetrisGame.timer.resume();\n\t\t\t\t}\n\t\t\t}\n\t\t}, window.lang.rtl);\n\t\tsettingModal.show();\n\n\n\t\t// changing setting values\n\t\tsettingModal.modal.querySelectorAll('input').forEach(input => {\n\t\t\tinput.onchange = function() {\n\t\t\t\t// catch data\n\t\t\t\tconst modalItSelf = settingModal.modal;\n\t\t\t\tconst settingForm = Helper._('#settingForm', modalItSelf);\n\t\t\t\tconst settingData = Settings._getIntValue(\n\t\t\t\t\tsettingForm,\n\t\t\t\t\t['soundPlay', 'eventSounds', 'useAnimation', 'gameLevel', 'showGrids', 'vibration', 'colorMode']\n\t\t\t\t);\n\n\t\t\t\tif (settingData.colorMode === 1) {\n\t\t\t\t\tmodalItSelf.classList.add('dark');\n\t\t\t\t} else {\n\t\t\t\t\tmodalItSelf.classList.remove('dark');\n\t\t\t\t}\n\n\t\t\t\t// apply setting and save it\n\t\t\t\tSettings.set(settingData);\n\t\t\t};\n\t\t});\n\t}\n\n\n\t/**\n\t * Get default settings Or saved settings\n\t * @return {any}\n\t */\n\tstatic getDefaultSettings() {\n\t\tconst config = TetrisGame.config;\n\n\n\t\tconsole.log(config);\n\n\t\t// get defined settings\n\t\treturn Storage.getObject('settings', {\n\t\t\tsoundPlay: config.playBackgroundSound,\n\t\t\teventSounds: config.playEventsSound,\n\t\t\tuseAnimation: config.useAnimationFlag,\n\t\t\tgameLevel: config.level,\n\t\t\tshowGrids: config.showGrids,\n\t\t\tvibration: config.do_vibrate,\n\t\t\tcolorMode: config.colorMode\n\t\t});\n\t}\n\n\n\t/**\n\t * Get int value of some form elements\n\t * @param settingForm\n\t * @param names\n\t * @return {{}}\n\t * @private\n\t */\n\tstatic _getIntValue(settingForm, names) {\n\t\tconst settingData = {};\n\t\tnames.forEach(item => {\n\t\t\tconst input = Helper._(`.${item}:checked`, settingForm);\n\t\t\tsettingData[item] = (input ? parseInt(input.value) : 0);\n\t\t});\n\t\treturn settingData;\n\t}\n\n\n\t/**\n     * Pause/play background music\n     * @private\n     */\n\tstatic _setMusicSetting() {\n\t\tif (!TetrisGame.config.playBackgroundSound) {\n\t\t\tTetrisGame.initValues.bgSound.pause();\n\t\t} else {\n\t\t\tTetrisGame.initValues.bgSound.play();\n\t\t}\n\t}\n\n\n\t/**\n     * Manage grids on play board\n     * @private\n     */\n\tstatic _setGridsSetting() {\n\t\tconst playBoard = TetrisGame.playBoard;\n\t\tif (playBoard) {\n\t\t\tif (TetrisGame.config.showGrids) {\n\t\t\t\tplayBoard.classList.add('showGrids');\n\t\t\t} else {\n\t\t\t\tplayBoard.classList.remove('showGrids');\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n     * Add level class to body AND do staffs about leveling\n     * @param gameLevel\n     * @private\n     */\n\tstatic _setLevelSetting(gameLevel) {\n\t\tlet bodyClass = '';\n\t\tconst config = TetrisGame.config;\n\n\t\t// update interval speed\n\t\tTetrisGame.interval.update(Charblock.getInterval());\n\n\t\tswitch (gameLevel) {\n\t\tcase 3:\n\t\t\tbodyClass = 'isExpert';\n\n\t\t\t// use 6 word same time at hard mode\n\t\t\tconfig.workingWordCount = parseInt(config.workingCountExpert);\n\n\t\t\t// Update animation timing and delete timing\n\t\t\tTetrisGame.initValues.animateConfig = {\n\t\t\t\tanimateClass: 'fallDownExpert',\n\t\t\t\tdeleteTiming: config.expertFallDownAnimateSpeed\n\t\t\t};\n\n\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\tbodyClass = 'isMedium';\n\n\t\t\t// use 5 word same time at medium mode\n\t\t\tconfig.workingWordCount = parseInt(config.workingCountMedium);\n\n\t\t\tTetrisGame.initValues.animateConfig = {\n\t\t\t\tanimateClass: 'fallDownCharMedium',\n\t\t\t\tdeleteTiming: config.mediumFallDownAnimateSpeed\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbodyClass = 'isSimple';\n\n\t\t\t// use 4 word same time at medium mode\n\t\t\tconfig.workingWordCount = parseInt(config.workingCountSimple);\n\n\t\t\tTetrisGame.initValues.animateConfig = {\n\t\t\t\tanimateClass: 'fallDownSimple',\n\t\t\t\tdeleteTiming: config.simpleFallDownAnimateSpeed\n\t\t\t};\n\t\t}\n\t\tdocument.body.classList.remove('isExpert', 'isMedium', 'isSimple');\n\t\tdocument.body.classList.add(bodyClass);\n\t}\n\n\n\t/**\n\t * Set color mode to page\n\t * @param isNight\n\t * @private\n\t */\n\tstatic _setColorMode(isNight) {\n\t\tif (isNight) {\n\t\t\tdocument.body.classList.add('isNightMode');\n\t\t} else {\n\t\t\tdocument.body.classList.remove('isNightMode');\n\t\t}\n\t}\n}\n","/**\n * @module\n */\n\nimport Timer from '../Timer';\nimport Interval from '../Interval';\nimport Sound from '../Sound';\nimport Settings from './Settings';\nimport Storage from '../Storage';\nimport Charblock from './Charblock';\nimport Timeout from '../Timeout';\nimport Helper from '../Helper';\nimport MapStack from '../MapStack';\nimport ScoreHandler from './ScoreHandler';\nimport Animate from './Animate';\nimport WordsHelper from './WordsHelper';\n\n/**\n * @typedef {Object} TetrisGameConfig\n *\n * @property rows=11 {Number} - Rows of the game\n * @property columnsMin=6 {Number} - Columns of the game\n * @property columnsMax=16 {Number} - Max size of columns of the game\n * @property workingWordCount=1 {Number} - Count of words to work with\n * @property charSpeed=1000 {Number} Miniseconds to wait to fall new character\n * @property directionWordChecks=\"ltr:true,rtl:true,ttd:false,dtt:false\" {module:Matrix~CheckTypes}  Directions to search for words\n * @property useLowercase=false {Boolean} Force use lowercase when selecting words\n * @property simpleFallDownAnimateSpeed=700 {Number} Duration of animation when characters are falling down in simple mode\n * @property mediumFallDownAnimateSpeed=500 {Number} Duration of animation when characters are falling down in medium mode\n * @property expertFallDownAnimateSpeed=200 {Number} Duration of animation when characters are falling down in expert mode\n * @property vibrationDuration=200 {Number} - Duration of vibration when bomb is exploded\n * @property successAnimationIterationDuration=100 {Number} Duration between animation of exploding chars when characters found\n * @property playBackgroundSound=true {Boolean} Option to disable music in background\n * @property playEventsSound=true {Boolean} Option to disable sound of events\n * @property level=1 {Number} - Up to 3 if it is big it is hard to play\n * @property useAnimationFlag=true {Boolean} - Make animate or not :|\n * @property showGrids=true {Boolean} - show grids flag\n * @property do_encryption=true {Boolean} - Enables encryption when saving score\n * @property do_vibrate=true {Boolean} - Enables vibrating phone when bomb explodes\n * @property do_shake=true {Boolean} - Enables vibrating the page when bomb explodes\n * @property encryptionKeySize=16 {Number} - Size of key used in encryption\n * @property scoreCalculator=(word)=>{Math.pow(1.3,word.length)} - Function to calculate score based on word. Larger words will have better score using Math.pow(1.3,word.length)\n * @property enable_bomb=true {Boolean}\n */\n\n\n/**\n * Main class of\n */\nexport default class TetrisGame {\n\t/**\n     *\n     * @returns {TetrisGame}\n     */\n\tstatic init(config) {\n\t\t/**\n         * Base config for game\n         */\n\t\tthis.config = {\n\t\t\trows: 10,\n\t\t\tmobileRows: 8,\n\t\t\tcolumnsMin: 6,\n\t\t\tcolumnsMax: 16,\n\t\t\tworkingWordCount: 5,\n\t\t\tworkingCountSimple : 4,\n\t\t\tworkingCountMedium : 5,\n\t\t\tworkingCountExpert : 6,\n\t\t\tcharSpeed: 800, // 1 second - get division to level when making game harder\n\t\t\tuseLowercase: false,\n\t\t\tsimpleFallDownAnimateSpeed: 700,\n\t\t\tmediumFallDownAnimateSpeed: 500,\n\t\t\texpertFallDownAnimateSpeed: 200,\n\t\t\tsuccessAnimationIterationDuration: 100,\n\t\t\tvibrationDuration: 200,\n\t\t\tdo_shake: true,\n\t\t\tdo_encryption: true, // Enables encryption when saving score\n\t\t\tencryptionKeySize: 16, // Size of key Used in encryption\n\t\t\tdirectionWordChecks: {\n\t\t\t\tltr: true, // check left to right\n\t\t\t\trtl: true, // check right to left\n\t\t\t\tttd: true, // check top top down\n\t\t\t\tdtt: false // check down to top\n\t\t\t},\n\t\t\tscoreCalculator: word => {\n\t\t\t\treturn Math.pow(word.length, 1.3); // Larger words will have better score\n\t\t\t},\n\t\t\tchooseedWordKind: {},\n\t\t\t// user setting values\n\t\t\tplayBackgroundSound: true,\n\t\t\tplayEventsSound: true,\n\t\t\tlevel: 1, // Up to 3 - if it is big it is hard to play\n\t\t\tuseAnimationFlag: true, // Make animate or not\n\t\t\tshowGrids: true, // Show grids flag\n\t\t\tenable_special_characters: true,\n\t\t\tcolorMode: (Helper.isDay() ? 0 : 1), // 0 = dayMode , 1 = nightMode\n\t\t\tdo_vibrate: true\n\t\t};\n\n\t\t// Extend config from user\n\t\tObject.assign(this.config, config);\n\n\n\t\t/**\n         * We hold game values here\n         */\n\t\tthis.setDefaultValues(true);\n\n\n\t\t/**\n         *  Global key codes config on window\n         */\n\t\twindow.CONTROL_CODES = {\n\t\t\tDOWN: 40,\n\t\t\tLEFT: 37,\n\t\t\tRIGHT: 39\n\t\t};\n\n\t\t/**\n         * Game play board\n         */\n\t\tthis.playBoard = null;\n\n\t\treturn this;\n\t}\n\n\n\t/**\n     * Select editor element with class search emoji\n     * @type {HTMLElement | null}\n     */\n\tstatic build() {\n\t\tconst initValues = this.initValues;\n\t\tconst config = this.config;\n\n\t\tif (config.do_encryption) {\n\t\t\tconst encryptionKeySize = config.encryptionKeySize;\n\t\t\tfor (let i=0; i<encryptionKeySize; ++i) initValues.encryptionKey.push(1+Math.floor(Math.random()*253));\n\t\t\tStorage.setEncrypted('score', 0, initValues.encryptionKey);\n\t\t} else {\n\t\t\tStorage.set('score', '0');\n\t\t}\n\n\n\t\t// blob for timer\n\t\tconst blobTiming = new Blob([\n\t\t\tHelper._('#workerTiming').textContent\n\t\t], { type: 'text/javascript' });\n\n\n\t\t// Shuffle words\n\t\tHelper.shuffleArray(window.TetrisWords);\n\n\n\t\t// set Timer instance to current TetrisGame.timer\n\t\tthis.timer = new Timer({\n\t\t\tblobTiming,\n\t\t\tonStart() {\n\t\t\t\tinitValues.paused = false;\n\t\t\t},\n\t\t\tworkerOnMessage() {\n\t\t\t\t// Storage.set('seconds', event.data);\n\t\t\t},\n\t\t\tonPause() {\n\t\t\t\tinitValues.paused = true;\n\t\t\t},\n\t\t\tonResume() {\n\t\t\t\tinitValues.paused = false;\n\t\t\t}\n\t\t});\n\n\n\t\t// set interval class\n\t\tthis.interval = new Interval();\n\n\n\t\t// control key codes\n\t\t// In LTR languages, Left and Right should be swapped\n\t\tthis.controlCodes = {\n\t\t\tLEFT: (!window.lang.rtl) ? window.CONTROL_CODES.RIGHT : window.CONTROL_CODES.LEFT,\n\t\t\tRIGHT: (!window.lang.rtl) ? window.CONTROL_CODES.LEFT : window.CONTROL_CODES.RIGHT,\n\t\t\tDOWN: window.CONTROL_CODES.DOWN\n\t\t};\n\n\t\tconst ltrClass = (!window.lang.rtl) ? 'isLtr' : '';\n\n\n\t\tif (initValues.isFirstRun) {\n\t\t\tinitValues.bgSound = Sound.playByKey('background', true);\n\t\t\tinitValues.isFirstRun = false;\n\t\t}\n\n\n\t\t// set game settings from local storage\n\t\tSettings.set();\n\n\n\t\t// add main html to page\n\t\tHelper._('#container').innerHTML = `\n            <div class=\"gameHolder ${ltrClass}\">\n                <div class=\"behindPlayBoard\">\n                    <div class=\"gamingKind\" onclick=\"Gameplay.restartWholeGame();\"><span class=\"persian\">${config.chooseedWordKind.persianTitle}</span><span class=\"english\">${config.chooseedWordKind.englishTitle}</span><span class=\"japanese\">${config.chooseedWordKind.japaneseTitle}</span></div>\n                    <div class=\"showUpComingLetter\" title=\"${window.lang.nextLetter}:\"></div>\n                    <div class=\"gameControlButtons\" >\n                        <div onclick=\"Gameplay.start();\" class=\"startGame\">${window.lang.startGame}</div>\n                        <div onclick=\"Gameplay.pause();\" class=\"pauseGame\" style=\"display: none\">${window.lang.pauseGame}</div>\n                        <div onclick=\"Gameplay.resume();\" class=\"resumeGame\" style=\"display: none\">${window.lang.resumeGame}</div>\n                        <div onclick=\"Gameplay.restart();\" class=\"restartGame\" style=\"display: none\">${window.lang.restartGame}</div>\n                    </div>\n                   <div class=\"courseArea\">\n                       <div class=\"setting\" onclick=\"Settings.show();\"><i class=\"icon-setting\"></i> ${window.lang.settings}</div>\n                       <div ><i class=\"icon-money\"></i> ${window.lang.score} : <span class=\"scoreHolder\"> 0 </span> &nbsp;|&nbsp; <span class=\"showScoresList\" onclick=\"ScoreHandler.showScores();\" ><i class=\"icon-bil\"></i> ${window.lang.records}</span> </div>\n                       <div ><i class=\"icon-sibil\"></i> ${window.lang.createdWords} : <span class=\"wordCounterHolder\">0</span> </div>\n                       <div ><i class=\"icon-clock\"></i> ${window.lang.spentTime} : <span class=\"timerDisplay\">0</span></div>\n                   </div>\n               </div>\n               <div class=\"playBoard\"><span class=\"emptyPlayBoard\">${window.lang.clickStartGame}</span></div>\n            </div>\n            \n            <!--Lazy load bomb Gif-->\n            <img src=\"assets/img/bomb.gif\" alt=\"bombChar\" width=\"0\" />  \n            <img src=\"assets/img/skull.gif\" alt=\"skull\" width=\"0\" />  \n            \n            <footer class=\"page-footer\">\n                <div class=\"container\">\n                    <i class=\"icon-brain\"></i> ${window.lang.copyRight}\n                </div>\n            </footer>\n        `;\n\t\tconst lazyLoadSounds = ['start', 'moveChar', 'explode', 'foundWord', 'finishGame'];\n\t\tfor (const sound of lazyLoadSounds) {\n\t\t\tnew Sound(sound);\n\t\t}\n\t}\n\n\n\t/**\n     * Sets default values of this.initValues\n     * @param firstCall\n     */\n\tstatic setDefaultValues(firstCall) {\n\t\tthis.initValues = {\n\t\t\tpaused: false, // is game paused\n\t\t\tcomingWordIndex: 0,\n\t\t\tfinished: false, // is game finished\n\t\t\twordsFinished: false, // do we run out of words\n\t\t\tisFirstRun: firstCall, // it is not first run\n\t\t\tbgSound: (firstCall ? {} : this.initValues.bgSound), // is this my first run\n\t\t\tcachedRows: (firstCall ? {} : this.initValues.cachedRows), // cache rows here\n\t\t\tupComingCharEl: null,\n\t\t\tscore: 0, // This is fake, We will never show anything related to this to user\n\t\t\tencryptionKey: [], // key of variables encryption\n\t\t\tvalidatedColumnsCount: 0, // Count of columns which are validated\n\t\t\tnextChar: '', // Next character\n\t\t\tactiveChar: {}, // Active character [not stopped] charBlock object\n\t\t\tchoosedWords: [], // Choosed words to work with them\n\t\t\tchoosedWordsUsedChars: [], // Chars that used from choosed words\n\t\t\twordsLengthTotal: 0, // Average length of words founded in games\n\t\t\twordsFounded: 0, // Counter to hold count of words found in game\n\t\t\twordDirectionCounter: { // Counter of founded word in each direction\n\t\t\t\trtl: 0,\n\t\t\t\tltr: 0,\n\t\t\t\tttd: 0,\n\t\t\t\tdtp: 0,\n\t\t\t\texploded: 0\n\t\t\t},\n\t\t\tisMobile: Helper.isMobile(),\n\t\t\tfalledStack: new MapStack(),\n\t\t\tanimateConfig: {\n\t\t\t\tanimateClass: 'fallDownSimple',\n\t\t\t\tdeleteTiming: TetrisGame.config.simpleFallDownAnimateSpeed\n\t\t\t}\n\t\t};\n\t}\n\n\n\t/**\n     * Get a valid column number [min-max]\n     */\n\tstatic validateColumnsNumber() {\n\t\tconst config = this.config;\n\t\tlet columnsNumber = config.columnsMin;\n\n\t\tfor (let i = Object.keys(window.TetrisWords).length - 1; i >= 0; i--) {\n\t\t\tif (window.TetrisWords[i]) {\n\t\t\t\tconst thisWordLength = window.TetrisWords[i].word.length;\n\t\t\t\tif (thisWordLength > columnsNumber) {\n\t\t\t\t\tcolumnsNumber = thisWordLength;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// plus 2 extra block than max word length\n\t\tcolumnsNumber += 2;\n\t\tcolumnsNumber = config.columnsMax < columnsNumber ? config.columnsMax : columnsNumber;\n\t\tconst validatedColumns = columnsNumber % 2 === 0 ? columnsNumber : columnsNumber + 1;\n\n\n\t\t// add class to have playBoard columns\n\t\tTetrisGame.playBoard.classList.add(\n\t\t\t`is${validatedColumns}Column`\n\t\t);\n\n\t\tTetrisGame.initValues.validatedColumnsCount = validatedColumns;\n\t\treturn validatedColumns;\n\t}\n\n\n\t/**\n     * Check if could find a success word\n     * @param {Charblock} lastChar\n     */\n\tstatic checkWordSuccess(lastChar) {\n\t\t// pause game while checking and animating\n\t\tthis.initValues.paused = true;\n\t\t// check word happens and then call checkWordsResult fn\n\t\tthis.matrix.checkWords(\n\t\t\twindow.TetrisWords,\n\t\t\tlastChar,\n\t\t\tthis.config.directionWordChecks,\n\t\t\tthis.checkWordsResult\n\t\t);\n\t}\n\n\n\t/**\n     * Calls after word success check\n     * @param lastChar\n     * @param successObject\n     */\n\tstatic checkWordsResult(lastChar, successObject) {\n\t\tconst config = TetrisGame.config;\n\t\tconst initValues = TetrisGame.initValues;\n\n\t\tinitValues.paused = true;\n\n\t\tif (!successObject) {\n\t\t\t// no words has been found, resume the game\n\t\t\tTetrisGame.checkSuccessWordStack();\n\t\t\treturn;\n\t\t} else if (lastChar.type === 'bomb') {\n\t\t\tHelper.log('BOOOOOOM');\n\t\t\tTetrisGame._animateExplode(successObject, lastChar);\n\t\t\treturn;\n\t\t}\n\n\t\tconst word = initValues.choosedWords[successObject.wordId].word;\n\n\n\t\t// Update score\n\t\tScoreHandler._updateScoreAndStats(word, successObject.direction);\n\t\tTetrisGame._removeWordAndCharacters(word, successObject.wordId);\n\n\t\t// animate found word\n\t\tAnimate.showFoundWordAnimated(word, successObject.wordCharacterPositions);\n\n\t\tAnimate.animateFoundedCharacters(successObject.wordCharacterPositions, config.successAnimationIterationDuration);\n\n\t\tinitValues.falledStack.merge(successObject.fallingCharacters);\n\n\t\tTimeout.request(\n\t\t\t() => {\n\t\t\t\tAnimate.animateFallCharacters(\n\t\t\t\t\tsuccessObject.fallingCharacters, // MapStack of falling characters\n\t\t\t\t\tconfig.successAnimationIterationDuration, // Delay between falling\n\t\t\t\t\tTetrisGame.checkSuccessWordStack\n\t\t\t\t);\n\n\t\t\t\t// get new word\n\t\t\t\tWordsHelper.chooseWord();\n\n\t\t\t\t// update top words bar\n\t\t\t\tTetrisGame.showShuffledWords();\n\t\t\t},\n\t\t\t// (successObject.fallingCharacters.length * 200) + config.successAnimationIterationDuration\n\t\t\t// successObject.wordCharacterPositions.length * config.successAnimationIterationDuration\n\t\t\t((successObject.wordCharacterPositions.length-1)*(config.successAnimationIterationDuration)) + TetrisGame.initValues.animateConfig.deleteTiming\n\t\t);\n\t}\n\n\n\t/**\n     * Check words success of stack after an explosion success\n     * we check if we have another completed words\n     */\n\tstatic checkSuccessWordStack() {\n\t\tconst initValues = TetrisGame.initValues;\n\t\tconst config = TetrisGame.config;\n\n\t\tconst falledCharacter = initValues.falledStack.popItem();\n\t\tif (falledCharacter === false || typeof falledCharacter !== 'undefined') {\n\t\t\t// Stack is empty, resume the game\n\t\t\tHelper.log(\"Stack is empty :|\")\n\t\t\tinitValues.paused = false;\n\t\t\treturn;\n\t\t}\n\t\tconst x = falledCharacter.x;\n\t\tconst y = falledCharacter.newY;\n\t\t// console.log(`checking y: ${y}  x: ${x}`);\n\t\tif (TetrisGame.matrix.isNotEmpty(y, x)) {\n\t\t\tTetrisGame.matrix.checkWords(\n\t\t\t\tinitValues.choosedWords,\n\t\t\t\t{\n\t\t\t\t\trow: y,\n\t\t\t\t\tcolumn: x,\n\t\t\t\t\tchar: TetrisGame.matrix.getCharacter(y, x)\n\t\t\t\t},\n\t\t\t\tconfig.directionWordChecks,\n\t\t\t\tTetrisGame.checkWordsResult\n\t\t\t);\n\t\t} else {\n\t\t\tTetrisGame.checkSuccessWordStack();\n\t\t}\n\t}\n\n\t/**\n     * Adds current words to top of gamePlay\n     * this words plus with random words of\n     * current category\n     */\n\tstatic showShuffledWords() {\n\t\tconst parent = Helper._('.currentWorkingWords');\n\t\tconst randomizeFn = () => { return 0.5 - Math.random(); };\n\t\tconst displayFiveWords = TetrisGame.initValues.choosedWords.slice(0, TetrisGame.config.workingWordCount).sort(randomizeFn);\n\n\t\t// make working words empty\n\t\tparent.innerHTML = '';\n\t\tdisplayFiveWords.forEach(item => {\n\t\t\tconst currentWord = document.createElement('span');\n\t\t\tcurrentWord.innerText = item.word;\n\t\t\tcurrentWord.className = 'currentWords';\n\t\t\tparent.appendChild(currentWord);\n\t\t});\n\t}\n\n\n\t/**\n     * Animate explode\n     * @param successObject\n     * @param lastChar\n     */\n\tstatic _animateExplode(successObject, lastChar) {\n\t\tconst config = TetrisGame.config;\n\n\t\t// explode sound play\n\t\tSound.playByKey('explode', config.playEventsSound);\n\n\t\tif (config.do_shake) {\n\t\t\tAnimate.shake(TetrisGame.playBoard, lastChar.typeSize*16);\n\t\t}\n\t\tif (config.do_vibrate) {\n\t\t\tHelper.vibrate(config.vibrationDuration);\n\t\t}\n\n\t\t// Explode the characters\n\t\tsuccessObject.explodedChars.map(item => {\n\t\t\tAnimate.fallNodeAnimate(item.y, item.x, null, null);\n\t\t});\n\n\t\t// Update score after other blocks falled down\n\t\tScoreHandler._updateScoreAndStats(successObject.explodedChars, 'exploded');\n\n\n\t\tTetrisGame.initValues.falledStack.merge(successObject.fallingCharacters);\n\n\t\t// Fall characters at top of exploded chars\n\t\tAnimate.animateFallCharacters(\n\t\t\tsuccessObject.fallingCharacters,\n\t\t\tconfig.successAnimationIterationDuration,\n\t\t\t() => {\n\t\t\t\tTetrisGame.checkSuccessWordStack();\n\t\t\t}\n\t\t);\n\t}\n\n\n\t/**\n     * Remove words and characters which we found or explode\n     * @param word\n     * @param wordId\n     */\n\tstatic _removeWordAndCharacters(word, wordId) {\n\t\t// Remove word from choosed words\n\t\tTetrisGame.initValues.choosedWords.splice(wordId, 1);\n\n\t\t// Remove characters from choosed characters\n\t\tTetrisGame.initValues.choosedWordsUsedChar = '';\n\t}\n}\n","/**\n * @module\n */\nimport TetrisGame from '../classes/Tetris/TetrisGame';\nimport MaterialColor from '../classes/MaterialColor';\nimport Vivus from 'vivus';\nimport Sound from '../classes/Sound';\nimport Helper from '../classes/Helper';\nimport Gameplay from '../classes/Tetris/Gameplay';\nimport Settings from '../classes/Tetris/Settings';\nimport Timeout from '../classes/Timeout';\nimport Storage from '../classes/Storage';\nimport ScoreHandler from '../classes/Tetris/ScoreHandler';\n\n/**\n * @class ArshLoader - makes animation of page loading on game load\n */\nexport default class ArshLoader {\n\t/**\n     * Set main properties of ArshLoader\n     * @return {ArshLoader}\n     */\n\tstatic setProperties() {\n\t\t// make animation frame available\n\t\tTimeout.addAnimeFrame();\n\n\t\t/**\n         * Animate loading flag\n         */\n\t\tthis.animationLoading = false;\n\n\t\t/**\n         * Is loaded scripts\n         */\n\t\tthis.isLoaded = false;\n\n\t\t/**\n         * Timing properties for vivus\n         */\n\t\tthis.timingProps = {\n\t\t\ttype: 'delayed',\n\t\t\tduration: 150,\n\t\t\tstart: 'autostart'\n\t\t};\n\n\t\t/**\n         * Get game settings\n         */\n\t\tthis._settings = this._getSettings();\n\n\t\t// could we use animation\n\t\tthis.useAnimation = this._settings.useAnimation === 1;\n\t\tthis.soundPlay = this._settings.soundPlay === 1;\n\t}\n\n\t/**\n     * Get settings\n     * @return {any}\n     * @private\n     */\n\tstatic _getSettings() {\n\t\treturn Storage.getObject('settings', {\n\t\t\tuseAnimation: 1,\n\t\t\tsoundPlay: 1\n\t\t});\n\t}\n\n\t/**\n     * Called after loading\n     */\n\tstatic afterLoad() {\n\t\tif (!ArshLoader.isLoaded) {\n\t\t\tconst loadingTextElement = Helper._('.loadingText');\n\t\t\tHelper._('.arshLoadingAnimation', loadingTextElement).className\n                += ' fallDownExpert fadeOut';\n\n\n\t\t\t// change color of logo loop\n\t\t\tsetInterval(() => { ArshLoader._setRandomColor(); }, 2000);\n\n\t\t\tTimeout.request(() => {\n\t\t\t\tloadingTextElement.innerHTML = '';\n\n\t\t\t\tconst chooseWordsKind = document.createElement('div');\n\n\t\t\t\tchooseWordsKind.innerHTML\n                    = '<div data-choosedWordsKind=\\'animals-حیوانات-動物\\' class=\\'wordsKind\\'>'\n                    + '<div class=\"persianTitle\">حیوانات</div>'\n                    + '<div class=\"englishTitle\">Animals</div>'\n                    + '<div class=\"japaneseTitle\">動物</div>'\n                    + '<i class=\"icon-upDown\"></i>'\n                    + '</div>';\n\n\t\t\t\tHelper._('.wordsKind', chooseWordsKind).onclick = function(ev) {\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\tconst openedStatus = chooseWordsKind.dataset.opened || 'no';\n\t\t\t\t\tconst newDisplay\n                        = openedStatus === 'yes' ? 'none' : 'inline-block';\n\t\t\t\t\tchooseWordsKind.dataset.opened\n                        = openedStatus === 'yes' ? 'no' : 'yes';\n\t\t\t\t\tHelper._(\n\t\t\t\t\t\t'.chooseWordKindTooltip'\n\t\t\t\t\t).style.display = newDisplay;\n\t\t\t\t};\n\n\t\t\t\twindow.onclick = function(ev) {\n\t\t\t\t\tif (!ev.target.matches('.wordsKind')) {\n\t\t\t\t\t\tchooseWordsKind.dataset.opened = 'no';\n\t\t\t\t\t\tif (Helper._('.chooseWordKindTooltip')) Helper._('.chooseWordKindTooltip').style.display = 'none';\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst btnFa = document.createElement('div');\n\t\t\t\tbtnFa.onclick = function() {\n\t\t\t\t\tconst wordsType\n                        = Helper._('.wordsKind').dataset.choosedwordskind\n                        || 'animales-حیوانات-動物';\n\t\t\t\t\tArshLoader.startGame('fa', wordsType);\n\t\t\t\t};\n\t\t\t\tbtnFa.className = 'btnEnterProject animatedOneSecond bounceIn';\n\t\t\t\tbtnFa.innerHTML\n                    = '<i class=\\'icon-uniE685\\'></i> ورود به بازی';\n\n\t\t\t\tconst btnEn = document.createElement('div');\n\t\t\t\tbtnEn.onclick = function() {\n\t\t\t\t\tconst wordsType\n                        = Helper._('.wordsKind').dataset.choosedwordskind\n                        || 'animales-حیوانات-動物';\n\t\t\t\t\tArshLoader.startGame('en', wordsType);\n\t\t\t\t};\n\t\t\t\tbtnEn.className = 'btnEnterProject animatedOneSecond bounceIn ltr';\n\t\t\t\tbtnEn.innerHTML = '<i class=\\'icon-uniE685\\'></i> Enter Game';\n\n\t\t\t\tconst btnJa = document.createElement('div');\n\t\t\t\tbtnJa.onclick = function() {\n\t\t\t\t\tconst wordsType\n                        = Helper._('.wordsKind').dataset.choosedwordskind\n                        || 'animales-حیوانات-動物';\n\t\t\t\t\tArshLoader.startGame('ja', wordsType);\n\t\t\t\t};\n\t\t\t\tbtnJa.className = 'btnEnterProject animated bounceIn ltr';\n\t\t\t\tbtnJa.innerHTML = '<i class=\\'icon-uniE685\\'></i>ゲームに入る';\n\n\t\t\t\tconst workKindChooser = document.createElement('div');\n\t\t\t\tworkKindChooser.className = 'chooseWordKindTooltip';\n\t\t\t\tworkKindChooser.innerHTML\n                    = '<ul>'\n                    + '<li onclick=\"arshLoader.chooseWordKind(\\'animals\\' , this);\" >'\n                    + '<div class=\"persianTitle\">حیوانات</div>'\n                    + '<div class=\"englishTitle\">Animals</div>'\n                    + '<div class=\"japaneseTitle\">動物</div>'\n                    + '<i class=\"icon-fish\"></i>'\n                    + '</li>'\n                    + '<li onclick=\"arshLoader.chooseWordKind(\\'colors\\' , this);\">'\n                    + '<div class=\"persianTitle\">رنگ ها</div>'\n                    + '<div class=\"englishTitle\">Colors</div>'\n                    + '<div class=\"japaneseTitle\">色</div>'\n                    + '<i class=\"icon-brush\"></i>'\n                    + '</li>'\n                    + '<li onclick=\"arshLoader.chooseWordKind(\\'things\\' ,this);\">'\n                    + '<div class=\"persianTitle\">اشیا</div>'\n                    + '<div class=\"englishTitle\">Things</div>'\n                    + '<div class=\"japaneseTitle\">もの</div>'\n                    + '<i class=\"icon-jorab\"></i>'\n                    + '</li>'\n                    + '<li onclick=\"arshLoader.chooseWordKind(\\'fruits\\' , this);\">'\n                    + '<div class=\"persianTitle\">میوه ها</div>'\n                    + '<div class=\"englishTitle\">Fruits</div>'\n                    + '<div class=\"japaneseTitle\">もの</div>'\n                    + '<i class=\"icon-albalo\"></i>'\n                    + '</li>'\n                    + '</ul>';\n\n\n\t\t\t\tlet documentLink = document.createElement(\"div\");\n\t\t\t\tdocumentLink.className = \"linkToDocHolder\";\n\n\t\t\t\tlet wiki = document.createElement(\"a\");\n\t\t\t\twiki.href = \"/wiki\";\n\t\t\t\twiki.target = \"_blank\";\n\t\t\t\twiki.className = \"linkToDoc\";\n\t\t\t\twiki.innerText = \"مسـتندات\";\n\n\t\t\t\tlet apiDocs = document.createElement(\"a\");\n\t\t\t\tapiDocs.href = \"/api-docs\";\n\t\t\t\tapiDocs.target = \"_blank\";\n\t\t\t\tapiDocs.className = \"linkToDoc\";\n\t\t\t\tapiDocs.innerText = \"توصیف فنی\";\n\n\t\t\t\tdocumentLink.appendChild(wiki);\n\t\t\t\tdocumentLink.appendChild(apiDocs);\n\n\t\t\t\tloadingTextElement.appendChild(chooseWordsKind);\n\t\t\t\tloadingTextElement.appendChild(btnFa);\n\t\t\t\tloadingTextElement.appendChild(btnEn);\n\t\t\t\tloadingTextElement.appendChild(btnJa);\n\t\t\t\tloadingTextElement.appendChild(documentLink);\n\t\t\t\tloadingTextElement.appendChild(workKindChooser);\n\n\n\t\t\t\tArshLoader.isLoaded = true;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\t/**\n     * Choose one of defined word kinds\n     * @param name\n     * @param el\n     */\n\tstatic chooseWordKind(name, el) {\n\t\tconst choosedPersianTitle = Helper._('.persianTitle', el).innerHTML;\n\t\tconst choosedEnglishTitle = Helper._('.englishTitle', el).innerHTML;\n\t\tconst choosedJapaneseTitle = Helper._('.japaneseTitle', el).innerHTML;\n\t\tconst chooserEl = Helper._('.wordsKind');\n\t\tel.parentNode.parentNode.style.display = 'none';\n\n\t\tHelper._('.persianTitle', chooserEl).innerHTML = choosedPersianTitle;\n\t\tHelper._('.englishTitle', chooserEl).innerHTML = choosedEnglishTitle;\n\t\tHelper._('.japaneseTitle', chooserEl).innerHTML = choosedJapaneseTitle;\n\t\tchooserEl.dataset.choosedwordskind = `${name.toString()}-${choosedPersianTitle.toString()}-${choosedJapaneseTitle.toString()}`;\n\t\t// this.chooseWordKind.dataset.opened = \"no\";\n\t\tHelper._('.wordsKind').parentElement.dataset.opened = 'no';\n\t}\n\n\t/**\n     * Set random color for our loader svg\n     */\n\tstatic _setRandomColor() {\n\t\tconst color = MaterialColor.getRandomColor();\n\t\tconst animateEl = Helper._('#jafarRezaeiAnimate');\n\t\tif (animateEl) {\n\t\t\tanimateEl.style.color = color;\n\t\t\tanimateEl.style.fill = color;\n\t\t}\n\t}\n\n\t/**\n     * Start game when enter to game button clicked\n     * @param lang\n     * @param wordsType\n     */\n\tstatic startGame(lang, wordsType) {\n\t\twordsType = wordsType.split('-');\n\t\t//Hide other buttons\n\t\tHelper._('.loadingText').style.display = 'none';\n\t\tHelper.fetchJson(`assets/localization/lang.${lang}.json`)\n\t\t\t.then(langFiles => {\n\t\t\t\twindow.lang = langFiles;\n\t\t\t\tHelper.fetchJson(`assets/words/${lang}/${wordsType[0]}.json`)\n\t\t\t\t\t.then(words => {\n\t\t\t\t\t\twindow.TetrisWords = words;\n\t\t\t\t\t\tthis.initGame(wordsType);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\tHelper._('.loadingText').style.display = 'block';\n\t\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tHelper._('.loadingText').style.display = 'block';\n\t\t\t});\n\t}\n\n\t/**\n     * Initialize whole game\n     * @param wordsType\n     */\n\tstatic initGame(wordsType) {\n\t\twindow.Gameplay = Gameplay;\n\t\twindow.Settings = Settings;\n\t\twindow.ScoreHandler = ScoreHandler;\n\n\t\tconst tetrisGameConfig = {\n\t\t\trows: 10,\n\t\t\tcolumnsMin: 6,\n\t\t\tcolumnsMax: 16,\n\t\t\tworkingWordCount: 5,\n\t\t\tcharSpeed: 800, // 1 second - get division to level when making game harder\n\t\t\tuseLowercase: false,\n\t\t\tsimpleFallDownAnimateSpeed: 700,\n\t\t\tmediumFallDownAnimateSpeed: 500,\n\t\t\texpertFallDownAnimateSpeed: 200,\n\t\t\tsuccessAnimationIterationDuration: 100,\n\t\t\tdo_encryption: true, // Enables encryption when saving score\n\t\t\tencryptionKeySize: 16, // Size of key Used in encryption\n\t\t\tdirectionWordChecks: {\n\t\t\t\tltr: true, // check left to right\n\t\t\t\trtl: true, // check right to left\n\t\t\t\tttd: true, // check top top down\n\t\t\t\tdtt: true // check down to top\n\t\t\t},\n\t\t\tscoreCalculator: word => {\n\t\t\t\treturn Math.pow(word.length, 1.3); // Larger words will have better score\n\t\t\t},\n\n\t\t\t// user setting values\n\t\t\tplayBackgroundSound: true,\n\t\t\tplayEventsSound: true,\n\t\t\tlevel: 1, // Up to 3 - if it is big it is hard to play\n\t\t\tuseAnimationFlag: true, // Make animate or not\n\t\t\tshowGrids: true, // Show grids flag\n\t\t\tchooseedWordKind: {\n\t\t\t\tpersianTitle: wordsType[1],\n\t\t\t\tenglishTitle: wordsType[0],\n\t\t\t\tjapaneseTitle: wordsType[2]\n\t\t\t}\n\t\t};\n\n\t\tTetrisGame.init(tetrisGameConfig);\n\t\tTetrisGame.build();\n\t}\n\n\t/**\n     * Build arsh loader when page is ready\n     */\n\tstatic build() {\n\t\twindow.arshLoader = ArshLoader;\n\n\t\t// register main fields of class\n\t\tArshLoader.setProperties();\n\n\t\tlet content\n            = '    <div class=\"bloc\">\\n'\n            + '        <div><img src=\"assets/img/fanavardLogo.png\" alt=\"فن آورد\" style=\"width:150px;height: auto\"/></div>';\n\n\t\tif (this.useAnimation) {\n\t\t\tcontent\n                += '        <svg id=\"jafarRezaeiAnimate\" viewBox=\"-17 -20 412.8504 64.80315\" height=\"70.80315\" width=\"412.8504\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width:400px;padding:50px 0 !important;height:auto\">\\n'\n                + '            <defs>\\n'\n                + '                <filter id=\"dropshadow\" height=\"50%\">\\n'\n                + '                    <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\"/> <!-- stdDeviation is how much to blur -->\\n'\n                + '                    <feOffset dx=\"1\" dy=\"1\" result=\"offsetblur\"/> <!-- how much to offset -->\\n'\n                + '                    <feComponentTransfer>\\n'\n                + '                        <feFuncA type=\"linear\" slope=\"0.15\"/> <!-- slope is the opacity of the shadow -->\\n'\n                + '                    </feComponentTransfer>\\n'\n                + '                    <feMerge>\\n'\n                + '                        <feMergeNode/> <!-- this contains the offset blurred image -->\\n'\n                + '                        <feMergeNode in=\"SourceGraphic\"/>\\n'\n                + '                        <!-- this contains the element that the filter is applied to -->\\n'\n                + '                    </feMerge>\\n'\n                + '                </filter>\\n'\n                + '            </defs>\\n'\n                + '            <path d=\"m 380.94802,-8.5661138 c -1.16394,-1.169545 -2.04844,-2.1586942 -2.04844,-2.2908222 0,-0.31761 4.13788,-4.469788 4.4544,-4.469788 0.14442,0 0.99819,0.743825 2.09678,1.826772 1.01925,1.004724 1.92634,1.826772 2.01575,1.826772 0.0894,0 0.9965,-0.822048 2.01575,-1.826772 1.0986,-1.082947 1.95237,-1.826772 2.09678,-1.826772 0.14771,0 1.0729,0.834497 2.35006,2.119684 1.15854,1.165827 2.13431,2.091811 2.16838,2.057743 0.0341,-0.03407 0.062,0.06424 0.062,0.21846 0,0.154221 -0.0526,0.247886 -0.11692,0.208144 -0.0643,-0.03974 -0.15015,0.03246 -0.19076,0.160443 -0.0406,0.127985 -0.94505,1.0925882 -2.00984,2.1435622 -1.37982,1.361926 -2.02021,1.910862 -2.22919,1.910862 -0.20882,0 -0.82325,-0.525807 -2.13468,-1.826772 -1.0128,-1.004724 -1.91798,-1.8267712 -2.01153,-1.8267712 -0.0935,0 -0.99873,0.8220472 -2.01153,1.8267712 -1.36398,1.353095 -1.92146,1.826772 -2.14998,1.826772 -0.23119,0 -0.82193,-0.515879 -2.35698,-2.058288 z\"/>\\n'\n                + '            <path d=\"m 329.87077,36.090456 c 0.13531,-0.08577 0.12917,-0.121443 -0.0315,-0.183093 -0.18002,-0.06908 -0.19953,-1.18667 -0.19953,-11.424419 0,-12.480375 -0.01,-12.305231 0.77669,-14.199595 1.11394,-2.6838448 3.35391,-4.7769588 6.08945,-5.6902398 1.5544,-0.518946 2.58117,-0.667469 4.76257,-0.688906 l 1.86495,-0.01833 0.46247,-0.566929 c 1.06326,-1.303413 2.09224,-2.272092 2.56349,-2.41328505 0.91336,-0.273651 1.11891,-0.0983 4.45309,3.79911205 1.44518,1.689295 2.28289,2.562615 2.68179,2.795785 0.96756,0.565569 1.76596,0.627907 7.47356,0.583528 l 5.2383,-0.04073 0.46509,-0.354844 c 0.8587,-0.65518 0.89401,-0.774792 0.96383,-3.265701 0.0508,-1.81174 0.0996,-2.270487 0.25196,-2.366604 0.10394,-0.06558 1.22164,-0.120097 2.48376,-0.121158 2.14092,-0.0018 2.30352,0.01441 2.4252,0.241757 0.0739,0.138117 0.13041,1.095416 0.13041,2.209744 0,2.159505 0.12726,2.649309 0.83245,3.204006 0.64013,0.503532 1.02762,0.531398 6.83231,0.491345 l 5.58602,-0.03854 0.24075,-0.297421 c 0.13242,-0.163583 0.24076,-0.405794 0.24076,-0.538249 0,-0.57258 -1.79823,-2.100805 -4.26816,-3.627308 -1.0769,-0.665561 -1.28868,-0.847017 -1.24545,-1.067111 0.0672,-0.341988 6.26038,-9.403449 6.48617,-9.490093 0.24782,-0.0951 0.56688,0.239625 1.43099,1.501248 0.91148,1.330807 1.60653,2.768969 2.08913,4.322777 l 0.35197,1.13316495 0.0404,6.82062405 c 0.0441,7.4460908 0.0248,7.7045348 -0.68603,9.2186578 -0.52355,1.115157 -1.87188,2.389066 -3.19113,3.014972 -2.00463,0.95109 -2.21029,0.977242 -7.68504,0.977242 h -4.85039 l -0.89474,-0.32735 c -1.12304,-0.410871 -2.17394,-1.102086 -3.09371,-2.034854 -0.39287,-0.398426 -0.79182,-0.72441 -0.88656,-0.72441 -0.0947,0 -0.51063,0.34241 -0.92421,0.76091 -0.9299,0.940971 -2.00979,1.651249 -3.08267,2.027588 -0.71288,0.25006 -1.14841,0.296104 -3.36421,0.355673 -1.43865,0.03868 -2.5969,0.123203 -2.66396,0.194412 -0.0653,0.06929 -0.14545,0.806299 -0.17818,1.637795 -0.0899,2.283563 -0.74275,3.882634 -2.14399,5.251487 -2.84759,2.781777 -7.71409,2.816662 -10.58144,0.07585 -0.47956,-0.458397 -2.32413,-2.781579 -4.37987,-5.516315 -1.95326,-2.598426 -3.7009,-4.851687 -3.88365,-5.007248 -0.60968,-0.518994 -2.02477,-0.254231 -2.36701,0.442868 -0.0588,0.119858 -0.13713,3.27934 -0.17398,7.021073 -0.0654,6.638624 -0.0738,6.821184 -0.34701,7.548884 -0.72766,1.937959 -2.34099,3.495321 -4.17579,4.0309 -0.37635,0.109859 -0.85824,0.203728 -1.07086,0.208599 -0.33005,0.0076 -0.34974,0.02469 -0.13462,0.117128 0.19176,0.0824 0.11649,0.109931 -0.31496,0.1152 -0.35515,0.0043 -0.50415,-0.03287 -0.39889,-0.0996 z\"/>\\n'\n                + '            <path d=\"m 363.63536,28.168077 c -1.70075,-1.692145 -1.99562,-2.041908 -1.99562,-2.367184 0,-0.32588 0.30052,-0.680205 2.05587,-2.423936 1.151,-1.143364 2.15718,-2.042265 2.28601,-2.042265 0.12707,0 1.06007,0.818108 2.08332,1.826772 1.01925,1.004724 1.92991,1.826771 2.02371,1.826771 0.0938,0 0.99919,-0.822047 2.012,-1.826771 1.06792,-1.059407 1.94161,-1.826772 2.07987,-1.826772 0.14048,0 1.1122,0.873795 2.36579,2.127388 1.86166,1.86166 2.11654,2.164585 2.04045,2.425197 -0.0478,0.163794 -0.97845,1.190722 -2.0681,2.282061 -1.48114,1.483434 -2.05914,1.984252 -2.29007,1.984252 -0.22918,0 -0.74731,-0.441004 -2.00792,-1.70904 -0.93448,-0.939972 -1.80363,-1.766892 -1.93147,-1.837601 -0.19849,-0.109789 -0.5045,0.139761 -2.09576,1.709039 -1.49761,1.47694 -1.93194,1.837602 -2.2129,1.837602 -0.2829,0 -0.73018,-0.378679 -2.34518,-1.985513 z\"/>\\n'\n                + '            <path d=\"m 293.04131,36.074856 c 0.1965,-0.08444 0.13706,-0.110223 -0.27002,-0.117128 -0.87807,-0.01489 -3.30187,-0.700705 -4.88264,-1.381536 -1.72033,-0.740931 -3.2031,-1.558066 -5.17804,-2.853536 -1.59213,-1.044365 -1.93635,-1.367187 -1.75847,-1.649183 0.0664,-0.105247 1.02778,-0.574574 2.13643,-1.042947 12.17703,-5.144448 18.85983,-9.326117 18.85983,-11.801291 0,-0.558188 -0.54918,-1.528033 -1.4807,-2.614909 -0.90099,-1.051235 -3.89253,-3.967055 -5.19053,-5.0591548 -0.49414,-0.415748 -0.93459,-0.857354 -0.97879,-0.981347 -0.0884,-0.247963 -0.11736,-0.203522 3.65619,-5.606974 1.49937,-2.14698605 2.47166,-3.42742705 2.60261,-3.42742705 0.12214,0 0.90253,0.903251 1.87761,2.17322905 3.14548,4.096832 4.29454,5.281063 5.85062,6.02979 l 0.7559,0.363711 4.43275,10e-5 c 5.15399,1.16e-4 5.32429,-0.02949 5.32911,-0.926398 0.003,-0.522547 -1.13193,-1.578208 -3.03241,-2.821083 -2.51134,-1.642381 -2.53845,-1.663172 -2.45438,-1.882253 0.0421,-0.109625 1.50282,-2.28933305 3.24612,-4.843797 2.00125,-2.932435 3.24581,-4.64448 3.37628,-4.64448 0.11363,0 0.49063,0.382677 0.83775,0.850394 1.35871,1.83072 2.1822,3.542988 2.72115,5.65796395 0.27648,1.085009 0.28379,1.282401 0.28379,7.66487005 0,5.8699358 -0.0231,6.6363368 -0.22259,7.3700788 -0.64032,2.355795 -2.03961,3.897494 -4.37583,4.821212 -1.59774,0.631726 -2.4294,0.722095 -6.64538,0.722095 -4.26672,0 -4.72408,-0.05737 -6.12247,-0.767978 -0.41085,-0.208776 -0.816,-0.35311 -0.90035,-0.320744 -0.10338,0.03967 -0.1823,0.606369 -0.2422,1.73914 -0.4257,8.050536 -2.60916,12.66336 -6.83717,14.444384 -0.85614,0.360644 -2.60094,0.774914 -3.31543,0.787187 -0.43295,0.0074 -0.50738,0.03532 -0.31496,0.118011 0.16528,0.07102 -0.13815,0.108275 -0.88189,0.108275 -0.74373,0 -1.04716,-0.03725 -0.88189,-0.108275 z\"/>\\n'\n                + '            <path d=\"m 313.92177,28.104957 c -1.53206,-1.53418 -2.04581,-2.126316 -2.04581,-2.357973 0,-0.441773 3.96796,-4.41229 4.40945,-4.41229 0.43546,0 4.40945,3.970022 4.40945,4.405047 0,0.448756 -3.95796,4.413851 -4.4059,4.413851 -0.24746,0 -0.79191,-0.471181 -2.36719,-2.048635 z\"/>\\n'\n                + '            <path d=\"m 274.39564,19.776866 c -1.06022,-0.344689 -1.77931,-0.783952 -2.68859,-1.642345 -1.76298,-1.66431 -2.86104,-3.978756 -3.1601,-6.660826 -0.0832,-0.746146 -0.13556,-4.4499978 -0.13556,-9.5896628 v -8.373979 l -0.69811,-0.202949 c -2.1728,-0.631649 -2.96348,-3.4999792 -1.49537,-5.4247572 0.31016,-0.406643 7.15477,-5.161021 8.36073,-5.807499 0.27468,-0.147247 0.46398,-0.303152 0.42067,-0.346457 -0.0433,-0.04331 0.13249,-0.07874 0.39065,-0.07874 0.28083,0 0.4381,0.05061 0.39151,0.125985 -0.0428,0.06929 10e-4,0.125984 0.0966,0.125984 0.37652,0 0.73583,0.590393 0.85313,1.401796 0.0639,0.44161 0.11753,5.735212 0.11932,11.7635582 0.002,7.560252 0.0461,11.115135 0.14151,11.458656 0.18078,0.651204 0.81276,1.270185 1.48039,1.449958 0.36284,0.0977 1.82746,0.131605 4.56961,0.105776 3.82571,-0.03604 4.04493,-0.05073 4.21431,-0.282564 0.0983,-0.134503 0.17867,-0.409694 0.17867,-0.611536 0,-0.53118 -1.12486,-1.57974 -3.03433,-2.8285 -2.51134,-1.642381 -2.53845,-1.663172 -2.45438,-1.882253 0.0421,-0.109625 1.50282,-2.28933305 3.24612,-4.843797 2.00125,-2.932435 3.24581,-4.64448 3.37628,-4.64448 0.11363,0 0.48971,0.382677 0.83569,0.850394 1.35404,1.830434 2.10685,3.367731 2.66512,5.44244795 0.32196,1.196517 0.32406,1.236436 0.37498,7.16481505 0.055,6.4035768 -0.01,7.4895628 -0.53351,8.9321908 -0.80553,2.219203 -2.61131,3.672266 -5.4625,4.39553 -1.15578,0.293187 -1.32089,0.301085 -6.17922,0.2956 -4.84308,-0.0055 -5.01798,-0.01417 -5.87362,-0.292349 z\"/>\\n'\n                + '            <path d=\"m 286.39496,-9.7519198 c -1.9858,-1.9650922 -2.32374,-2.4064752 -2.12297,-2.7727922 0.25129,-0.458486 4.13407,-4.187838 4.36013,-4.187838 0.13441,0 1.11164,0.871384 2.29033,2.042264 1.58614,1.575642 2.05587,2.115693 2.05587,2.363637 0,0.45068 -3.95188,4.4129962 -4.40138,4.4129962 -0.22288,0 -0.80575,-0.496391 -2.18198,-1.858267 z\"/>'\n                + '            <path d=\"m 255.49801,23.985724 c -1.03478,-0.224402 -1.99825,-0.681242 -2.95132,-1.399411 -1.22102,-0.920059 -2.134,-2.013436 -2.8072,-3.361855 -0.28539,-0.571654 -0.59167,-1.03937 -0.6806,-1.03937 -0.089,0 -0.52852,0.27763 -0.97682,0.616957 -1.48811,1.126347 -1.81876,1.203524 -5.34387,1.247346 -3.34964,0.04164 -3.91917,-0.03344 -5.29291,-0.697743 -0.98434,-0.476005 -2.60328,-2.094898 -3.30841,-3.308293 -0.63741,-1.096919 -1.66193,-3.350076 -2.26276,-4.976378 -0.45443,-1.2300338 -0.5773,-1.4488188 -0.81372,-1.4488188 -0.0851,0 -0.90461,1.4314958 -1.82108,3.1811028 -0.91646,1.749606 -1.78753,3.285124 -1.93568,3.412262 -0.25138,0.2157 -0.52668,0.227936 -4.11625,0.18294 -3.59561,-0.04507 -3.89212,-0.06618 -4.53978,-0.323245 -0.95544,-0.379224 -1.91992,-1.256306 -2.35435,-2.141008 l -0.35431,-0.7215 -0.0357,-6.7879458 c -0.0413,-7.855447 -0.0531,-7.749467 0.97253,-8.775053 0.94172,-0.941718 1.27785,-1.003931 5.42417,-1.003931 2.61739,0 3.53495,-0.03974 3.69973,-0.160221 0.20372,-0.148977 0.17894,-0.257283 -0.35323,-1.543307 -0.31478,-0.760697 -0.57262,-1.475008 -0.57299,-1.587358 0,-0.172212 2.08444,-2.189882 6.07284,-5.8767542 0.54367,-0.502578 0.91365,-0.75495 1.03722,-0.70753 0.1254,0.04812 1.20325,3.142094 3.1045,8.9114502 3.05514,9.270851 3.44629,10.26415 4.5064,11.443244 0.83091,0.924156 1.04595,0.985043 3.47907,0.985043 1.95288,0 2.09941,-0.01663 2.34937,-0.266587 0.24147,-0.241464 0.25631,-0.339415 0.15748,-1.03937 -0.21382,-1.514457 -0.11635,-3.196506 0.25015,-4.316785 1.34515,-4.111673 5.77773,-6.699227 9.8184,-5.731553 2.37955,0.569866 4.54059,2.137677 5.46732,3.96647395 0.34469,0.68022205 3.42418,10.16304285 3.74927,11.54530185 0.11157,0.47444 0.19337,1.411609 0.19444,2.227983 0.006,4.703649 -2.33056,8.127227 -6.2994,9.229195 -1.0784,0.29942 -2.72277,0.425137 -3.46251,0.264718 z\"/>\\n'\n                + '            <path d=\"m 185.8234,36.086661 c 0.17184,-0.06721 -1.3e-4,-0.120344 -0.56693,-0.175182 -2.42847,-0.234958 -6.57675,-1.911857 -9.97666,-4.032969 -0.9806,-0.611763 -1.34948,-0.918099 -1.52447,-1.265983 -0.12697,-0.252413 -0.32302,-0.458934 -0.4357,-0.458934 -0.11267,0 -1.03352,-0.822047 -2.04633,-1.826772 -1.0128,-1.004724 -1.91798,-1.826772 -2.01153,-1.826772 -0.0935,0 -0.99872,0.822048 -2.01152,1.826772 -1.33632,1.325653 -1.92385,1.826772 -2.14174,1.826772 -0.21792,0 -0.81525,-0.50961 -2.17812,-1.858268 -1.98581,-1.965092 -2.32375,-2.406474 -2.12298,-2.772791 0.24693,-0.450541 4.13391,-4.187839 4.35557,-4.187839 0.12673,0 1.06133,0.819611 2.08305,1.826772 1.01925,1.004724 1.92633,1.826771 2.01574,1.826771 0.0894,0 0.9965,-0.822047 2.01575,-1.826771 1.04951,-1.034561 1.95494,-1.826772 2.08784,-1.826772 0.13563,0 1.13241,0.897749 2.36204,2.127388 1.86599,1.865985 2.11651,2.16398 2.03888,2.425197 -0.0487,0.163794 -0.8766,1.092219 -1.83981,2.063164 -1.67006,1.683457 -1.96886,2.077168 -1.57642,2.077168 0.25824,0 7.8347,-3.551809 11.15617,-5.229966 3.75264,-1.895999 6.01342,-3.311485 6.51732,-4.080534 0.403,-0.615043 0.19611,-0.642256 -4.88281,-0.642256 -4.33726,0 -4.67704,-0.01636 -5.47815,-0.263797 -0.70538,-0.217873 -0.978,-0.387849 -1.56593,-0.976378 -1.17089,-1.172058 -1.15838,-1.069397 -1.10814,-9.0905328 0.0418,-6.679297 0.0449,-6.748121 0.33744,-7.622048 1.30205,-3.889422 4.28076,-5.805372 8.65394,-5.56632 2.53731,0.138696 4.46401,0.883013 5.9747,2.308122 1.10572,1.04308995 1.8837,2.280664 2.40457,3.825127 0.36794,1.090967 0.41039,1.380754 0.4799,3.275591 l 0.0763,2.07874 h 3.75831 c 3.57494,0 3.76702,-0.01193 3.93701,-0.244552 0.0983,-0.134503 0.17869,-0.409694 0.17869,-0.611536 0,-0.53118 -1.12486,-1.57974 -3.03433,-2.8285 -2.51134,-1.642381 -2.53845,-1.663172 -2.45438,-1.882253 0.0421,-0.109625 1.50282,-2.28933305 3.24612,-4.843797 2.00125,-2.932435 3.24581,-4.64448 3.37628,-4.64448 0.11363,0 0.49063,0.382677 0.83775,0.850394 1.35871,1.83072 2.1822,3.542988 2.72115,5.65796395 0.27631,1.084326 0.28379,1.284756 0.28379,7.60187805 0,4.6267758 -0.0436,6.6723798 -0.15199,7.1302048 -0.70589,2.981711 -2.51308,4.708371 -5.80089,5.542394 -1.07933,0.273795 -1.46091,0.303779 -3.86597,0.303779 -1.94187,0 -2.72401,0.04288 -2.87259,0.157481 -0.17798,0.137283 -0.211,0.642189 -0.2575,3.937008 -0.0482,3.418726 -0.0795,3.867667 -0.32704,4.702819 -0.81357,2.744449 -2.74297,4.984166 -5.34076,6.19976 -0.9235,0.432131 -2.5635,0.873264 -3.29318,0.885804 -0.40328,0.0069 -0.46051,0.03239 -0.26331,0.117128 0.16528,0.07102 -0.13815,0.108275 -0.88189,0.108275 -0.65537,0 -1.02977,-0.04071 -0.8872,-0.09647 z\"/>\\n'\n                + '            <path d=\"m 203.74929,-9.7519198 c -1.9858,-1.9650922 -2.32374,-2.4064752 -2.12297,-2.7727922 0.25129,-0.458486 4.13407,-4.187838 4.36013,-4.187838 0.13441,0 1.11164,0.871384 2.29033,2.042264 1.58614,1.575642 2.05587,2.115693 2.05587,2.363637 0,0.45068 -3.95189,4.4129962 -4.40138,4.4129962 -0.22288,0 -0.80575,-0.496391 -2.18198,-1.858267 z\"/>\\n'\n                + '            <path d=\"m 100.3484,36.074851 c 0.24284,-0.07777 0.15418,-0.103742 -0.387248,-0.113426 -0.98392,-0.0176 -2.89264,-0.35991 -4.08519,-0.732646 -3.828997,-1.196765 -6.303647,-3.783623 -7.297897,-7.628786 -0.74257,-2.871812 -0.67374,-7.047781 0.17506,-10.621675 0.4438,-1.868674 1.25751,-4.19791 1.51457,-4.335484 0.29729,-0.159103 3.778697,-0.16479 4.028827,-0.0066 0.15744,0.09958 0.16188,0.241804 0.0304,0.974448 -0.47069,2.62305 -0.55098,3.427141 -0.49452,4.952339 0.1027,2.774277 0.84871,3.990794 2.97781,4.855926 1.5083,0.612878 2.73693,0.74145 7.002728,0.732812 5.41415,-0.01096 8.44351,-0.356939 9.99799,-1.141845 0.86382,-0.436175 1.03787,-0.68377 0.72426,-1.030306 -0.21746,-0.2403 -0.41704,-0.253568 -4.40415,-0.292809 -4.06173,-0.03997 -4.19711,-0.04937 -4.93227,-0.342572 -0.55072,-0.21964 -0.98123,-0.526878 -1.58603,-1.131889 -0.69694,-0.697185 -0.89151,-0.992125 -1.2127,-1.838293 -0.97549,-2.569847 -0.85437,-4.796862 0.37207,-6.841041 0.55392,-0.923258 1.91117,-2.2744568 2.72916,-2.7169988 1.34336,-0.726764 0.98988,-0.707995 13.28905,-0.705608 l 11.32383,0.0022 0.5585,-0.270365 c 0.33833,-0.163785 0.69179,-0.471578 0.89664,-0.780784 0.32869,-0.496147 0.33926,-0.570499 0.37829,-2.659422 0.0235,-1.258995 0.0951,-2.21525 0.17291,-2.308965 0.18843,-0.227045 4.67494,-0.229334 4.86305,-0.0025 0.0753,0.09075 0.14852,1.091708 0.17291,2.362204 0.0375,1.951069 0.0721,2.255407 0.30111,2.645241 0.52836,0.89943 1.44774,1.219843 2.38112,0.82985 0.80618,-0.336839 0.88029,-0.595401 0.95064,-3.316157 0.0512,-1.979933 0.0984,-2.458636 0.25197,-2.555531 0.28963,-0.182729 4.70273,-0.157366 4.88819,0.02809 0.10579,0.105789 0.15118,0.797568 0.15118,2.304014 0,1.982022 0.0225,2.197434 0.28347,2.714961 0.66899,1.326649 2.39423,1.327837 3.16845,0.0022 0.2214,-0.379088 0.25953,-0.716866 0.30571,-2.708233 0.0347,-1.495129 0.10146,-2.30686 0.19481,-2.367686 0.0781,-0.05091 1.17471,-0.09343 2.43683,-0.09449 2.14092,-0.0018 2.30352,0.01441 2.42519,0.241757 0.0739,0.138117 0.13042,1.095416 0.13042,2.209744 0,2.159505 0.12726,2.649309 0.83244,3.204006 0.64569,0.507894 1.00153,0.530926 7.58821,0.491123 l 6.34191,-0.03832 0.24077,-0.297421 c 0.13242,-0.163583 0.24077,-0.405794 0.24077,-0.538249 0,-0.572581 -1.79823,-2.100805 -4.26816,-3.627308 -1.07572,-0.664829 -1.28886,-0.847342 -1.24675,-1.067602 0.0753,-0.39405 6.38307,-9.524533 6.57997,-9.524533 0.38575,0 1.77902,1.978744 2.57997,3.66412 0.27714,0.583159 0.66043,1.570526 0.85175,2.194148 l 0.34787,1.13385795 0.0404,6.82062405 c 0.0441,7.4460908 0.0248,7.7045348 -0.68603,9.2186578 -0.52093,1.109565 -1.87079,2.387254 -3.19113,3.020507 -1.99589,0.957256 -1.92699,0.948734 -8.10022,1.001809 -4.84256,0.04163 -5.60481,0.02207 -6.23084,-0.159925 -1.05909,-0.307883 -1.87754,-0.75584 -2.89532,-1.584661 -0.50129,-0.408214 -0.96659,-0.742209 -1.034,-0.742209 -0.0674,0 -0.2809,0.202059 -0.47441,0.449018 -1.0119,1.29144 -2.68513,2.070667 -4.44631,2.070667 -1.67669,0 -2.94255,-0.527764 -4.02925,-1.679872 -0.2396,-0.254024 -0.52574,-0.46186 -0.63586,-0.46186 -0.11012,0 -0.50013,0.289082 -0.86671,0.642406 -0.99781,0.96176 -2.06492,1.414987 -3.47605,1.47637 -0.81159,0.0353 -1.33927,-0.01053 -1.85656,-0.161279 -0.90506,-0.263741 -2.09812,-1.051544 -2.69429,-1.779102 -0.25074,-0.305992 -0.51087,-0.556348 -0.5781,-0.556348 -0.0672,0 -0.41798,0.252686 -0.77948,0.561523 -0.92044,0.786355 -2.01616,1.420612 -2.95575,1.710928 -0.70414,0.217566 -1.18797,0.248353 -3.99427,0.254169 -2.19776,0.0045 -3.35595,-0.04218 -3.71558,-0.149929 -0.67683,-0.202783 -1.58757,-1.028692 -2.24202,-2.033192 -1.18782,-1.823123 -1.83309,-1.970018 -8.68628,-1.977435 -2.94721,-0.0032 -3.62943,0.0293 -3.93518,0.187409 -0.50148,0.259327 -0.61764,0.75439 -0.2608,1.111533 0.26597,0.266194 0.37189,0.273527 4.96141,0.343409 4.89609,0.07455 5.0815,0.09533 6.08183,0.681558 1.34168,0.786279 1.81843,2.206817 1.56775,4.671285 -0.49423,4.858637 -3.14888,8.503772 -7.93279,10.892618 -2.19613,1.096637 -5.39717,1.933226 -8.05348,2.104769 -0.91767,0.05926 -1.21755,0.113025 -0.95791,0.171742 0.20787,0.04701 -0.3874,0.08653 -1.32284,0.08782 -1.02639,0.0014 -1.5759,-0.03765 -1.38582,-0.09852 z\"/>\\n'\n                + '            <path d=\"m 39.561,36.074851 c 0.196498,-0.08444 0.137053,-0.110223 -0.270024,-0.117128 -0.878069,-0.01489 -3.301865,-0.700705 -4.882647,-1.381536 -1.720324,-0.740931 -3.203102,-1.558066 -5.178038,-2.853536 -1.592131,-1.044365 -1.936344,-1.367187 -1.758465,-1.649183 0.06639,-0.105247 1.027784,-0.574574 2.136436,-1.042947 12.177034,-5.144448 18.859825,-9.326117 18.859825,-11.801291 0,-0.558188 -0.549181,-1.528033 -1.480709,-2.614909 -0.900983,-1.051235 -3.89252,-3.967055 -5.190529,-5.0591548 -0.494135,-0.415748 -0.934587,-0.857354 -0.978781,-0.981347 -0.08838,-0.247963 -0.117358,-0.203522 3.656192,-5.606974 1.499368,-2.14698605 2.471666,-3.42742705 2.602604,-3.42742705 0.122151,0 0.902532,0.903251 1.877606,2.17322905 3.155156,4.109414 4.301931,5.28963 5.862115,6.03306 l 0.767395,0.365666 2.760164,-0.03401 2.760164,-0.03401 0.07205,-1.700787 c 0.128273,-3.028041 0.871637,-4.839305 2.844351,-6.93048605 1.817624,-1.92677695 4.064691,-3.07945295 6.883658,-3.53110395 1.16436,-0.186553 3.088332,-0.0963 4.184194,0.196272 2.059613,0.549878 4.059062,2.001551 5.235122,3.80088595 0.663394,1.014973 1.280155,2.57100205 1.30177,3.28423805 l 0.01429,0.471532 -6.866142,0.06299 c -6.80195,0.0624 -6.870309,0.06558 -7.311885,0.340231 -1.318238,0.819907 -1.333966,2.799229 -0.02935,3.693429 l 0.456364,0.312796 7.064482,0.06299 7.064482,0.06299 0.03946,0.277372 c 0.03203,0.225118 -1.973388,10.6374198 -2.197122,11.4076678 -0.06043,0.208033 -0.758689,0.220472 -12.375539,0.220472 -13.521181,0 -12.982355,0.02844 -14.549607,-0.767978 -0.410842,-0.208776 -0.815996,-0.35311 -0.900341,-0.320744 -0.103386,0.03967 -0.182308,0.606369 -0.242209,1.73914 -0.425706,8.050536 -2.60916,12.66336 -6.837167,14.444384 -0.856139,0.360644 -2.600941,0.774914 -3.315428,0.787187 -0.432953,0.0074 -0.507384,0.03532 -0.31496,0.118011 0.165273,0.07102 -0.138158,0.108275 -0.88189,0.108275 -0.743732,0 -1.047164,-0.03725 -0.88189,-0.108275 z\"/>\\n'\n                + '            <path d=\"m -5.6673473,33.799527 c -4.7498177,-0.638982 -7.9853857,-2.897952 -9.5072777,-6.637675 -0.494754,-1.215754 -0.87539,-2.805101 -0.971618,-4.057005 -0.05352,-0.6963 -0.115538,-0.98118 -0.178529,-0.820108 -0.05309,0.135743 -0.09485,-0.660281 -0.09282,-1.768943 0.0022,-1.192975 0.04488,-1.88719 0.104571,-1.700787 0.08147,0.254383 0.103284,0.196917 0.113426,-0.298792 0.01671,-0.816635 0.350724,-3.041711 0.649522,-4.326861 0.291441,-1.253512 1.106232,-3.817623 1.282433,-4.035765 0.09112,-0.112812 0.642095,-0.1574798 1.942503,-0.1574798 1.502038,0 1.827887,0.0328 1.888238,0.1900738 0.04012,0.10454 -0.04509,0.657296 -0.189346,1.228346 -0.626807,2.481263 -0.688189,5.031557 -0.154473,6.418006 0.724589,1.882285 2.6333617,2.998518 6.1285867,3.583942 1.987152,0.332832 7.826917,0.336843 9.3590331,0.0064 2.747956,-0.592622 4.078862,-1.553663 4.259098,-3.075469 0.1408,-1.188834 -0.146924,-1.714296 -2.079608,-3.797919 -1.87206,-2.018265 -3.6362361,-3.964378 -4.2744521,-4.7152708 -0.29993,-0.35288 -0.404665,-0.598488 -0.402928,-0.944882 0.0021,-0.414888 0.140258,-0.618321 1.21643,-1.790891 0.6677451,-0.727559 2.1757091,-2.44252 3.3510281,-3.811024 1.17532,-1.368504 2.212223,-2.48818905 2.304231,-2.48818905 0.09201,0 1.1483432,1.25742405 2.3474132,2.79427605 1.199069,1.53685 2.448277,3.088433 2.776017,3.447962 1.041398,1.142405 2.196201,1.433266 3.219573,0.810915 0.727125,-0.442189 0.830317,-0.822746 0.904773,-3.336617 l 0.06716,-2.267717 h 2.519686 2.519685 l 0.06299,2.214312 c 0.06091,2.141111 0.07417,2.231191 0.401136,2.724896 0.552216,0.833822 1.153774,1.046105 2.945726,1.039515 0.935011,-0.0034 1.685326,-0.07037 1.984313,-0.176998 1.83049,-0.652835 1.187312,-1.826161 -2.77566,-5.06353 -1.331392,-1.087621 -1.541819,-1.284988 -1.545712,-1.44978 -0.001,-0.04492 1.318047,-1.88743605 2.931351,-4.094488 2.04973,-2.804099 3.013858,-4.024485 3.200791,-4.051536 0.209346,-0.03029 0.537163,0.294014 1.507665,1.491524 0.682085,0.841629 1.282695,1.643573 1.33469,1.782098 0.05199,0.138523 0.325855,1.160175 0.608582,2.270337 l 0.514047,2.01847295 -0.01466,6.44264105 c -0.01625,7.1408358 -0.03342,7.3263748 -0.831874,8.9864238 -0.833696,1.733325 -2.668721,3.161973 -4.565811,3.554683 -2.23314,0.462274 -5.140543,-0.320912 -6.829943,-1.839827 -0.331348,-0.29791 -0.671585,-0.541656 -0.756079,-0.541656 -0.08449,0 -0.487403,0.309017 -0.89535,0.686705 -1.382623,1.280064 -3.230566,1.912062 -5.213214,1.782923 -0.623622,-0.04062 -1.372289,-0.10838 -1.663704,-0.150581 -0.611527,-0.08856 -0.599281,-0.11248 -0.730259,1.426662 -0.181259,2.130007 -1.101944,4.833758 -2.199432,6.459016 -1.2908052,1.911536 -3.5545872,3.797082 -5.5621902,4.63285 -1.246368,0.518864 -2.9240021,0.998781 -4.3288481,1.238342 -1.36153,0.232175 -5.442367,0.335064 -6.680922,0.168444 z\"/>\\n'\n                + '            <path d=\"m 13.608244,0.56310315 c -0.207874,-0.129368 -1.185827,-1.05832 -2.173229,-2.06433695 -1.255522,-1.279193 -1.7952752,-1.915939 -1.7952752,-2.117885 0,-0.436505 3.9690922,-4.400518 4.4061572,-4.400518 0.245703,0 0.737195,0.416364 2.082032,1.76378 1.106397,1.108519 1.855267,1.763779 2.015748,1.763779 0.160481,0 0.909351,-0.65526 2.015748,-1.763779 1.46794,-1.470754 1.822106,-1.76378 2.131807,-1.76378 0.311569,0 0.692397,0.320994 2.363893,1.992489 1.679412,1.679413 1.992489,2.051365 1.992489,2.367185 0,0.316861 -0.317314,0.689907 -2.055876,2.416958 -1.175126,1.16734495 -2.156075,2.04226595 -2.289761,2.04226595 -0.132434,0 -1.032621,-0.792367 -2.075343,-1.82677195 -1.012805,-1.004724 -1.924964,-1.826772 -2.02702,-1.826772 -0.102056,0 -0.921746,0.740924 -1.821535,1.646497 -1.356001,1.36472095 -2.112565,2.00958895 -2.35413,2.00657595 -0.02076,-2.52e-4 -0.207831,-0.106319 -0.415705,-0.235687 z\"/>\\n'\n                + '            <path d=\"m 15.781472,-7.4014328 c -1.54783,-1.586727 -1.984252,-2.107334 -1.984252,-2.367007 0,-0.2623732 0.420334,-0.7502792 1.984252,-2.3032402 1.091339,-1.083692 2.118267,-2.010157 2.282061,-2.05881 0.261198,-0.07759 0.559348,0.173076 2.425197,2.038926 1.285725,1.285725 2.127388,2.2237752 2.127388,2.3710172 0,0.146886 -0.814627,1.058256 -2.051475,2.295104 -1.719434,1.719435 -2.111963,2.052013 -2.425197,2.054801 -0.318641,0.0028 -0.666168,-0.29647 -2.357974,-2.030791 z\"/>\\n'\n                + '        </svg>'\n                + '       <div class=\"loadingText\"><div class=\"arshLoadingAnimation center\"><span></span></div></div>\\n'\n                + '</div>';\n\n\t\t\tHelper._('#container').innerHTML = content;\n\t\t\tthis._setRandomColor();\n\n\t\t\tconst hi_jRun = new Vivus(\n\t\t\t\t'jafarRezaeiAnimate',\n\t\t\t\t{\n\t\t\t\t\ttype: 'oneByOne',\n\t\t\t\t\tduration: 20,\n\t\t\t\t\tstart: 'autostart',\n\t\t\t\t\tdashGap: 40,\n\t\t\t\t\tforceRender: false\n\t\t\t\t},\n\t\t\t\tobj => {\n\t\t\t\t\tTimeout.request(() => {\n\t\t\t\t\t\tobj.el.classList.add('finished');\n\n\t\t\t\t\t\t// load bundle of javascript pack here then do the job\n\t\t\t\t\t\tArshLoader.animationLoading = true;\n\t\t\t\t\t\tArshLoader.afterLoad();\n\t\t\t\t\t}, 500);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst animationHolder = document.getElementById('jafarRezaeiAnimate');\n\t\t\tanimationHolder.addEventListener('click', () => {\n\t\t\t\tArshLoader._setRandomColor();\n\t\t\t\tanimationHolder.classList.remove('finished');\n\t\t\t\thi_jRun.reset().play();\n\t\t\t});\n\t\t} else {\n\t\t\tcontent\n                += '<div class=\"logoLoading\">تیم برنامه نویسی عرش</div>'\n                + '<div class=\"loadingText\"><div class=\"arshLoadingAnimation center\"><span></span></div></div>\\n'\n                + '</div>';\n\n\t\t\tHelper._('#container').innerHTML = content;\n\n\t\t\t// load bundle of javascript pack here then do the job\n\t\t\tArshLoader.animationLoading = true;\n\t\t\tArshLoader.afterLoad();\n\t\t}\n\n\t\t// play loading sound\n\t\tSound.playByKey('loading', this.soundPlay);\n\n\n\t\t// register service worker\n\t\tif ('serviceWorker' in navigator) {\n\t\t\twindow.addEventListener('load', () => {\n\t\t\t\tnavigator.serviceWorker\n\t\t\t\t\t.register('serviceWorker.js', { scope: '/' })\n\t\t\t\t\t.then(\n\t\t\t\t\t\tregistration => {\n\t\t\t\t\t\t\t// Registration was successful\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'ServiceWorker registration successful with scope: ',\n\t\t\t\t\t\t\t\tregistration.scope\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\t// registration failed :(\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'ServiceWorker registration failed: ',\n\t\t\t\t\t\t\t\terr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log('Service Worker Ready');\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n}\n\nif(typeof in_browser !== \"undefined\") {\n\tArshLoader.build();\n}\n"],"sourceRoot":""}